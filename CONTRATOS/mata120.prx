#INCLUDE "MATA120.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "FWADAPTEREAI.CH"
#DEFINE VALMERC  	 1  // Valor total do mercadoria 
#DEFINE VALDESC 	 2  // Valor total do desconto
#DEFINE FRETE   	 3  // Valor total do Frete
#DEFINE VALDESP 	 4  // Valor total da despesa
#DEFINE TOTF1		 5  // Total de Despesas Folder 1
#DEFINE TOTPED		 6  // Total do Pedido
#DEFINE SEGURO		 7  // Valor total do seguro
#DEFINE TOTF3		 8  // Total utilizado no Folder 3
#DEFINE IMPOSTOS    9  // Array contendo Os Valores de Impostos Exibidos no ListBox
#DEFINE	 NTRIB		 10 // Valor das despesas nao tributadas - Portugal
#DEFINE TARA        11 // Valor da Tara - Portugal

#DEFINE MAXGETDAD 999
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ Mata120  ³Revisor³Alexandre Inacio Lemes ³Data  ³26/07/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pedidos de Compra / Autorizacao de Entrega                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void MATA120(ExpN1,ExpA1,ExpA2,ExpN2,ExpL1)                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Pedido de compras ou Autorizacao de entrega        ³±±
±±³Parametros³ ExpA1 = Array Cabecalho para Rotina Automatica             ³±±
±±³          ³ ExpA2 = Array Itens para Rotina Automatica                 ³±±
±±³          ³ ExpN2 = Opcao do aRotina para Rotina Automatica            ³±±
±±³Parametros³ ExpA1 = Apresenta a Dialog da Rotina em Rotina Automatica  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGACOM                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Mata120(nFuncao,xAutoCab,xAutoItens,nOpcAuto,lWhenGet,xRatCTBPC,xAdtPC,xRatProj)

Local aFixe        := {{STR0001,"C7_NUM"},{STR0002,"C7_EMISSAO"},{STR0003,"C7_FORNECE"}} //"Numero do PC"#"Data Emissao"#"Fornecedor  " 		
Local aGrupo 	   := {}
Local aIndexSC7	   := {}
Local aCores       := {}
Local aCoresUsr    := {}
Local cFiltro	   := ""
Local cFilQuery	   := ""  
Local cMt120Fil    := ""
Local nOrderSC7    := 0
Local nPos		   := 0
Local nX    	   := 0
Local bBlock                                         
Local uMt120Dft   

DEFAULT nFuncao    := 1
DEFAULT lWhenGet   := .F.

PRIVATE aBackSC7   := {}
PRIVATE aAutoCab   := xAutoCab
PRIVATE aAutoItens := xAutoItens
PRIVATE aRatCTBPC  := If(xRatCTBPC<>NIL,xRatCTBPC,{})
PRIVATE aAdtPC     := If(xAdtPC <> NIL,xAdtPC,{})
PRIVATE aRatProj   := IIf(xRatProj <> NIL,xRatProj,{}) 

PRIVATE nAutoAdt   := If(nOpcAuto <> NIL,nOpcAuto,0)
PRIVATE bFiltraBrw := {|| Nil }
PRIVATE nTipoPed   := nFuncao // 1 - Ped. Compra 2 - Aut. Entrega
PRIVATE cCadastro  := If(nTipoPed == 2 , STR0004 , If(cPaisLoc == "VEN" , STR0093 , STR0005 ))	//"Autorizacao de Entrega"#"Requisicoes de Compra"(Ven)#"Pedidos de Compra"
PRIVATE l120Auto   := ValType(xAutoCab)=="A" .And. ValType(xAutoItens) == "A" 
PRIVATE lPedido    := .T.
PRIVATE lGatilha   := .T.                          // Para preencher aCols em funcoes chamadas da validacao (X3_VALID)
PRIVATE lVldHead   := GetNewPar( "MV_VLDHEAD",.T. )// O parametro MV_VLDHEAD e' usado para validar ou nao o aCols (uma linha ou todo), a partir das validacoes do aHeader -> VldHead()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Definir o aRotina somente para chamada da rotina automatica do     ³
//³MATA120, pois para a implementacao do Menu Funcional foi necessario³
//³transferir a definicao do aRotina para os fontes MATA121 e MATA122 ³
//³onde a chamada do MATA120 por rotina automatica deixaria a funcao  ³
//³sem as opcoes do aRotina impedindo as operacoes do programa.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l120Auto .OR. nOpcAuto <> NIL
	PRIVATE aRotina	:= {}
	aAdd(aRotina,{STR0006,"PesqBrw"   , 0, 1, 0, .F. }) //"Pesquisar"
	aAdd(aRotina,{STR0007,"A120Pedido", 0, 2, 0, Nil }) //"Visualizar"
	aAdd(aRotina,{STR0008,"A120Pedido", 0, 3, 0, Nil }) //"Incluir"
	aAdd(aRotina,{STR0009,"A120Pedido", 0, 4, 6, Nil }) //"Alterar"
	aAdd(aRotina,{STR0010,"A120Pedido", 0, 5, 7, Nil }) //"Excluir"
	aAdd(aRotina,{STR0100,"A120Copia" , 0, 4, 0, Nil }) //"Copia"
	aAdd(aRotina,{STR0077,"A120Impri" , 0, 2, 0, Nil }) //"Imprimir"
	aAdd(aRotina,{STR0078,"A120Legend", 0, 1, 0, .F. }) //"Legenda"
	aAdd(aRotina,{STR0132,"MsDocument", 0, 4, 0, Nil }) //"Conhecimento"	
EndIf                                                                 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Adiciona o botao para enviar o pedido de compra para o TOTVS Colaboracao  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("FWLSEnable") .And. FWLSEnable(TOTVS_COLAB_ONDEMAND) .And. FindFunction("ExpXML_PC") .And.;
	SC7->(FieldPos("C7_TPCOLAB")) > 0 .And. FindFunction("ExpXML_PC") .And. nTipoPed == 1
	aAdd(aRotina,{STR0187,"StaticCall(MATA120,A120Colab)", 0, 3, 0, Nil }) //"TOTVS Colaboracao"
EndIf

aAdd(aCores,    { 'C7_TIPO!=nTipoPed'                 	, 'BR_PRETO'})	 //-- Autorizacao de Entrega ou Pedido
aAdd(aCores,    { '!Empty(C7_RESIDUO)'						, 'BR_CINZA'})	 //-- Eliminado por Residuo
If SC7->(FieldPos("C7_ACCPROC")) > 0
	aAdd(aCores,    { 'C7_ACCPROC<>"1" .And.  C7_CONAPRO=="B".And.C7_QUJE < C7_QUANT' 	, 'BR_AZUL' })	 //-- Bloqueado
Else
	aAdd(aCores,    { 'C7_CONAPRO=="B".And.C7_QUJE < C7_QUANT' 	, 'BR_AZUL' })	 //-- Bloqueado
EndIf

If nTipoPed == 1
	aAdd(aCores,{ '!Empty(C7_CONTRA).And.Empty(C7_RESIDUO)' 	, 'BR_BRANCO'}) //-- Integracao com o Modulo de Gestao de Contratos
	If SC7->(FieldPos("C7_ACCPROC")) > 0 .And. (SuperGetMv("MV_MKPLACE",.F.,.F.))
		aAdd(aCores,{ 'C7_ACCPROC=="1" '							, 'PMSEDT2'})  //-- Integracao com o portal marketplace
	EndIf
EndIf
aAdd(aCores,    { 'C7_QUJE==0 .And. C7_QTDACLA==0'   		, 'ENABLE'})	  //-- Pendente
aAdd(aCores,    { 'C7_QUJE<>0.And.C7_QUJE<C7_QUANT'			, 'BR_AMARELO'}) //-- Pedido Parcialmente Atendido
aAdd(aCores,    { 'C7_QUJE>=C7_QUANT'   					, 'DISABLE'})	  //-- Pedido Atendido
aAdd(aCores,    { 'C7_QTDACLA >0' 							, 'BR_LARANJA'}) //-- Pedido Usado em Pre-Nota


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para alteracao da ordem dos campos do aFixe ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT120FIX")
	aFixe := ExecBlock("MT120FIX",.F.,.F.,aFixe)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SX1   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SX3   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SIX   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSIX()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no Help  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaHlp()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SX6   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX6()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SX7   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX7()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realiza ajuste no SXB   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("A020ForSXB")
	A020ForSXB()
EndIf    

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica CarregaTipoFrete ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                           
If !(FindFunction("CarregaTipoFrete"))
	Final(STR0177) //"Atualizar MATXFUNA.PRX !!"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a permissao do programa em relacao aos modulos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If AMIIn(2,10,11,14,12,41,97,98,69,72)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ mv_par01 - Incluir na Amarracao ProdxFornecedor     ³
	//³ mv_par02 - Utiliza descri‡„o: Normal ou Cient¡fica  ³
	//³ mv_par03 - Filtra Comprador ? Sim    Nao            ³
	//³ mv_par04 - Tipo do Rodape - Por Aliquota/Por Imposto³
	//³ mv_par05 - Contabiliza On-Line? Sim/Nao             ³
	//³ mv_par06 - Aglutina Lct.Contab? Sim/Nao             ³
	//³ mv_par07 - Digita  Lct. Contab? Sim/Nao             ³
	//³ mv_par08 - Amarracao Produto X Fornecedor           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Pergunte("MTA120",.F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o tipo de rotina a ser executada           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	Do Case
	Case lWhenGet .Or. ( !l120Auto .And. nOpcAuto <> Nil )

		Do Case
		Case nOpcAuto == 3
			INCLUI := .T.
			ALTERA := .F.
		Case nOpcAuto == 4
			INCLUI := .F.
			ALTERA := .T.
		OtherWise	
			INCLUI := .F.
			ALTERA := .F.
		EndCase		
                                              
	
		dbSelectArea("SC7")
		nPos := Ascan(aRotina,{|x| x[4] == nOpcAuto})
		If ( nPos <> 0 )
			bBlock := &( "{ |x,y,z,k,m,n| " + aRotina[ nPos,2 ] + "(x,y,z,k,m,n) }" )
			Eval( bBlock, Alias(), (Alias())->(Recno()),nPos,Nil,Nil,lWhenGet)
		EndIf

	Case l120Auto

		DEFAULT nOpcAuto := 3
		MBrowseAuto(nOpcAuto,Aclone(aAutoCab),"SC7")

	OtherWise	

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Aciona a tecla de atalho da pergunte F12        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		SetKey(VK_F12,{||A120Ativa()})    
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada: A120FILT - Altera Indice para mBrowse	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		If ExistBlock("A120FILT")
			nOrderSC7 := ExecBlock("A120FILT",.F.,.F., nTipoPed)
			If ValType(nOrderSC7)<>"N"  
				nOrderSC7:=1
			Else    
				SIX->(DbSetOrder(1))
				SIX->(DbSeek("SC7"+RetAsc(nOrderSC7,1,.T.))) 
				If SIX->(Eof())
					nOrderSC7:=1
				EndIf
			EndIf  
		Else
			nOrderSC7:=1
		EndIf              

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa a funcao FilBrowse                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC7")
		dbSetOrder(nOrderSC7)

		If cPaisLoc <> "BRA"
		    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada MT120DFT  - Permite Desconsiderar ou não o Filtro para      ³ 
			//|                             Pedidos de Compra e Purchase Orders 				| 
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
			If (ExistBlock( "MT120DFT" ))
				uMT120Dft:=ExecBlock("MT120DFT",.F.,.F.)
			    If ValType(uMT120Dft)=='L'
				    If uMT120Dft = .F.
					    cFiltro := "C7_FILIAL=='"+xFilial("SC7")+"'.And.C7_TIPO <> 3 "
				    EndIf
				EndIf
			Else
				cFiltro := IIF(FWModeAccess("SC7") == "E", "C7_FILIAL=='"+xFilial("SC7")+"'.And.C7_TIPO <> 3","C7_TIPO <> 3")
			EndIf
		EndIf

		If SuperGetMv("MV_RESTPED")=="S" .And. nTipoPed==1 .And. MV_PAR03 == 1
			aGrupo := UsrGrComp(RetCodUsr())
			If ( Ascan(aGrupo,"*") == 0 )
				cFiltro := "C7_FILIAL=='"+xFilial("SC7")+"' .And.C7_TIPO <> 3 .And.(C7_GRUPCOM=='"+Space(Len(SC7->C7_GRUPCOM))+"'"
				For nX := 1 To Len(aGrupo)
					If nX == 1
						cFiltro += ".Or.C7_GRUPCOM $ '"+aGrupo[nX]+""
					Else
						cFiltro += ","+aGrupo[nX]
					Endif	
				Next nX
				If Len(aGrupo) > 0
					cFiltro  += "'"
				Endif
				cFiltro += ")"
			EndIf
		EndIf

		If ExistBlock("MT120FIL")
			cMt120Fil := ExecBlock("MT120FIL",.F.,.F.)
			If ( ValType(cMt120Fil) == "C" ) .And. !Empty(cMt120Fil)
				cFiltro += IIf(Empty(cFiltro),"",".AND.")+cMt120Fil
			EndIf
			If !Empty(cFiltro)
				bFiltraBrw := {|| FilBrowse("SC7",@aIndexSC7,@cFiltro) }
				Eval(bFiltraBrw)
			EndIf
		ElseIf ( ExistBlock("MT120QRY") ) // Filtro da Mbrowse para ambiente Top - Somente executa se não existir filtro CodeBase
			cFilQuery := AllTrim(ExecBlock("MT120QRY",.F.,.F.))
			If Valtype(cFilQuery) <> "C"
				cFilQuery := ""		
			EndIf
		EndIf      
		
        //Se não existir nenhum ExecBlock de filtro, aplica o filtro Padrão //
		If !ExistBlock("MT120FIL") .And. !ExistBlock("MT120QRY")
			If !Empty(cFiltro)
				bFiltraBrw := {|| FilBrowse("SC7",@aIndexSC7,@cFiltro) }
				Eval(bFiltraBrw)
			EndIf
		EndIf

		If l120Auto
			dbSelectArea('SC7')
			nPos := Ascan(aRotina,{|x| x[4] == nOpcAuto})
			If ( nPos # 0 )
				bBlock := &( "{ |x,y,z,k,m,n| " + aRotina[ nPos,2 ] + "(x,y,z,k,m,n) }" )
				Eval( bBlock, Alias(), (Alias())->(Recno()),nPos,Nil,Nil,lWhenGet)
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de entrada para inclusão de nova COR da legenda       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( ExistBlock("MT120COR") )			
				aCoresUsr := ExecBlock("MT120COR",.F.,.F.,{aCores})
				If ( ValType(aCoresUsr) == "A" )
					aCores := aClone(aCoresUsr)
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada para inclusao de novas opcoes no aRotina  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistTemplate("MT120BRW")
				ExecTemplate("MT120BRW",.F.,.F.)
			EndIf

			If ExistBlock("MT120BRW")
				ExecBlock("MT120BRW",.F.,.F.)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Endereca a funcao de BROWSE                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			mBrowse( 6, 1,22,75,"SC7",aFixe,,,,,aCores,,,,,,,,IIF(!Empty(cFilQuery),cFilQuery, NIL))

		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Desativa tecla que aciona perguntas                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SetKey(VK_F12,Nil)
		If ( Len(aIndexSC7)>0 )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza o uso da FilBrowse e retorna os indices padroes.  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			EndFilBrw("SC7",aIndexSC7)
		EndIf			

	EndCase

EndIf

dbSelectArea("SC7")
dbSetOrder(1)
lPedido := .F.

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Pedido³Revisor³Alexandre Inacio Lemes ³ Data ³26/07/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina de Inclusao,Alteracao,Exclusao e Consulta dos       ³±±
±±³          ³ Pedidos de Compras e Autorizacoes de Entrega.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±³          ³ ExpC2 =                                                    ³±±
±±³          ³ ExpL1 = Ativa a opcao de copia                             ³±±
±±³          ³ ExpL2 = Apresenta a Dialog em rotina automatica            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGACOM                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Pedido(cAlias,nReg,nOpcX,xFiller,lCopia,lWhenGet,aRecnoSE2RA)

Local aAreaSM0   := SM0->(GetArea())
Local aArea      := GetArea()
Local aRefImpos  := MaFisRelImp('MT100',{"SC7"})
Local aCpoValid  := {"C7_NUMSC","C7_ITEMSC","C7_DATPRF","C7_NUMCOT","C7_APROV","C7_QTDSOL","C7_RESIDUO"}
Local aCombo	 := CarregaTipoFrete()
Local aButtons   := {}
Local aObj	      // Array com os objetos utilizados no Folder
Local aObj2[2]	 // Array 2 com objetos utilizados no Folder
Local aSizeAut   := {}
Local aUsButtons := {}
Local aObjects	 := {}
Local aInfo 	 := {}
Local aPosGet	 := {}
Local aPosObj	 := {}
Local aPosObjPE  := {}
Local aStruSC7   := {}
Local aCt5       := {}
Local aNoFields  := {"C7_FABRICA","C7_LOJFABR","C7_DT_EMB","C7_TEC","C7_EX_NCM","C7_EX_NBM","C7_DIACTB"}
Local aL120PvTran   := {}
Local aL120PedAglut :={}
Local aCPed  	 :={}
Local aCPed1     :={}

Local bCtbOnLine := {|| .T.}
Local bWhenCond  := {|| .T.}
Local bWhenMoed  := {|| .T.}

Local aColsSCH     := {}
Local aHeadSCH     := {}

Local cAliasSC7  := ""
Local cItCop     := StrZero(0,Len(SC7->C7_ITEM))
Local cQuery     := ""
Local cPedido    := ""
Local cArqCtb    := ""
Local cLoteCtb   := ""
Local c652       := ""
Local c657       := ""  
Local cWhenCond  := ""
Local cWhenMoed  := ""
Local cWhenLiq   := ""
Local cSeek      := ""
Local cWhile     := ""

Local nOpcA		 := 0
Local nX         := 0
Local nY         := 0
Local nJ		 := 0
Local nHdlPrv    := 0
Local nTotalCtb  := 0
Local nTpRodape  := 0
Local nSaveSX8 	 := If(Type('nSaveSx8')=='U', GetSX8Len(), nSaveSX8)    

Local lQuery     := .F.
Local l120Visual := .F.
Local l120Inclui := .F.
Local l120Deleta := .F.
Local l120Altera := .F.
Local lContinua	 := .T.
Local lGravaOk 	 := .T.
Local lCtbOnLine := .F.
Local lDigita    := .F.
Local lAglutina  := .F.
Local lWhenCond  := .T.
Local lWhenMoed  := .T.
Local lMt120Alt  := .T.
Local lMt120Ped  := .F.
Local lMta120E   := .T.
Local lMt120GRV  := .T.
Local lMt120Scr  := ExistBlock("MT120SCR")
Local lMt120TEL  := ExistBlock("MT120TEL")
Local lMt120Get  := ExistBlock("MT120GET")
Local lTotAtend	 := .F.
Local lPcFilEnt	 := SuperGetMv("MV_PCFILEN")
Local lTpOp 	 := SuperGetMV("MV_TPOPDOC",.F.,.F.)
Local lGrade	 := MaGrade()
Local aCpsGrade  := {{"C7_QUANT",.T.,{{"C7_QTSEGUM",{||ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2)}}}},;
					{"C7_ITEM"   ,NIL,NIL},;
					{"C7_DATPRF" ,NIL,NIL},;
					{"C7_TOTAL"  ,NIL,NIL},;
					{"C7_QTDSOL" ,.T.,{||A120Quant(aCols[nLinha][nColuna])}},;
					{"C7_QTSEGUM",NIL,{{"C7_QUANT",{||ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1)}}}},;
					{"C7_VLDESC" ,NIL,NIL},;
					{"C7_QUJE" ,NIL,NIL}}    					
Local oDlg
Local oGetDados
Local oca120Forn
Local oca120Loj
Local oCond
Local oDescCond
Local oDescMoed
Local oGetMoeda   
Local oTpOp
Local aCtbDia	 	:= {} 
Local cItemSCH 		:= "" 
Local nItemSCH 		:= 0 
Local nOpcAdt  		:= If( Type( "nAutoAdt" ) == "N",nAutoAdt,0)
Local aAreaAdt		:= {}
Local aColsBKPRat	:= {}    
Local aArea2        := {}
Local aAreaSE2		:= {}
Local lMsErroAuto
Local lLctPad65A	:= VerPadrao("65A")		//Lancamento para estorno do rateio                                                                                                           

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ "Contabilizacao na Exclusao do PC, mesmo SE o parametro: Contabiliza On-Line=="NAO"  ³
//³                                              .T.-Contabiliza / .F.-Nao Contabiliza"  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                                                  
Local lMV_COEXCPC:= SuperGetMv("MV_COEXCPC",.F.,.F.)         

Local lExcPed 	:= .T. 

Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

DEFAULT lCopia   := .F.
DEFAULT l120Auto := .F.

PRIVATE aRatAJ7     := {}
PRIVATE aA120PID    := {}
PRIVATE aColsBkp    := {}
PRIVATE aCPHSCH     := {}
PRIVATE ACPISCH     := {}
PRIVATE aInfForn	:= {"","",CTOD(""),CTOD(""),"","",""}
PRIVATE aValores	:= {0,0,0,0,0,0,0,0,{{'','',0,0,0}},0,0}
PRIVATE aTitles     := {STR0011,; //"Totais"
						STR0012,; //"Inf. Fornecedor"
					 	STR0013,; //"Frete/Despesas"
					 	STR0014,; //"Descontos"
					 	STR0015,; //"Impostos"
					 	STR0016 } //"Mensagem/Reajuste"
PRIVATE bPMSDlgPC	:= {||PmsDlgPC(nOpcx,ca120Num)}
PRIVATE cDescMsg	:= ""
PRIVATE cDescFor	:= ""
PRIVATE oFolder
PRIVATE aBackSCH    := {}
PRIVATE aAdtSE2	:= {}

PRIVATE cCondPAdt   := "0" //Controle p/ cond. pgto. com aceite de Adt. 0=normal 1=Adt
PRIVATE cCondPOld   := If(nOpcX==4,SC7->C7_COND,"")    

Default aRecnoSE2RA := {} // Array com os titulos selecionados pelo Adiantamento

If SuperGetMV("MV_TPOPDOC",.F.,.F.)
	aAdd(aNoFields,"C7_TPOP")
EndIf

If lWhenGet
	aSizeAut   := {0,0,495,272,990,580,17}
Else
	aSizeAut   := MsAdvSize(,.F.,400)
End

If cPaisLoc == "PTG"
   aObj:= Array(28)
Else               
   aObj:= Array(24)
EndIf

If cPaisLoc == "BRA"
	aAdd(aCpsGrade,{"C7_ICMCOMP",NIL,NIL})
	aAdd(aCpsGrade,{"C7_ICMSRET",NIL,NIL})
	aAdd(aCpsGrade,{"C7_VALIPI" ,NIL,NIL})
	aAdd(aCpsGrade,{"C7_VALICM" ,NIL,NIL})
	aAdd(aCpsGrade,{"C7_BASEICM",NIL,NIL})
	aAdd(aCpsGrade,{"C7_BASEIPI",NIL,NIL})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto para validar se continua ou nao a Rotina.                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT120ALT")
	lMt120Alt := Execblock("MT120ALT",.F.,.F.,{aRotina[nOpcX,4]})
	If ValType( lMt120Alt ) == "L" .And. !lMt120Alt
		lContinua := .F.
	EndIf
EndIf     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Bloqueia alteracao de pedido ja atendido                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .And. (nOpcx == 4) .And. (SuperGetMv("MV_ALTPC",.F., .F.) == .T.) .And. (SC7->C7_QUJE >= SC7->C7_QUANT)
	Help(,1,"A120PCALT")
	lContinua := .F.
EndIf
    
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pedidos de Compras gerados pelos Modulos de Transporte SIGATMS ou Gestao de ³
//³ Contratos SIGAGCT nao poderao ser alterados ou excluidos por essa Rotina.   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nOpcx == 4 .Or. nOpcx == 5 ) .And. lContinua
	If !l120Auto .And. nTipoPed == 1 .And. Alltrim(SC7->C7_ORIGEM) == "SIGATMS"	
		MsgAlert( STR0118, STR0102 )
		lContinua := .F.
	EndIf	
    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Pedidos gerados pelo GCP nao poderao ser excluidos   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
	If nOpcx == 5 .And. SC7->(FieldPos("C7_CODED")) > 0 .And. !Empty(SC7->C7_CODED) .And. FunName() != "CNTA120"
		Help(" ",1,"A120EDITAL")
  		lContinua := .F.
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Pedidos gerados pelo PLS não poderão ser excluídos   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcx == 5 .And. SC7->(FieldPos("C7_LOTPLS")) > 0  .And.  !Empty(SC7->C7_LOTPLS)
		Help(" ",1,"A120EXCPLS")
		lContinua := .F.
	EndIf

	If ( !IsInCallStack("CNTA120") .And. FunName() != "CNTA150" ) .And. lContinua
	
		If lPrjCni
			
			If ExistBlock("MTA120EX")
				lExcPed := Execblock("MTA120EX",.F.,.F.)
			EndIf
	
			If !Empty(SC7->C7_CONTRA) .And. lExcPed
				If nOpcX == 5
			    	lContinua:= .F.
					Aviso("SIGAGCT",STR0127,{"Ok"}) 
				EndIf
		    	If lContinua                                  
		  			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtém os campos que poderão ser alterados  ³
					//|através do PE: MT120PED                    |
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	               	aCPed:={}   
	               	aCPed1:={}
	                If ExistBlock("MT120PED")
	                   	If ValType(ExecBlock("MT120PED",.F.,.F.,{})) == 'A'
	                   		aCPed:=ExecBlock("MT120PED",.F.,.F.,{})
	                    		
	                    	//Somente campos de usuário poderão ser alterados //
	                    	dbSelectArea("SX3")
							dbSetOrder(2)
							For nX:=1 To Len(aCPed)
							    MsSeek(aCPed[nX])
							    If !EOF() .And. X3_PROPRI == "U"
							      	AADD(aCPed1,aCPed[nX])
							    EndIf
							Next nX
							//Não encontrou nenhum campo de usuário, invalida a utilização do PE
							If Len(aCPed1) == 0
								lMt120Ped:= .F.
								lContinua:= lMt120Ped  
								Aviso("SIGACOM",STR0157,{"Ok"}) 
							Else
								lMt120Ped:= .T.
							EndIf
	                   	Else
	                    	lMt120Ped:= .F.
	                    Endif
	      			Else
	    		    	lContinua:= .F.
						Aviso("SIGAGCT",STR0127,{"Ok"}) 
		   			EndIf
		   		EndIf
			EndIf

		Else
			If !Empty(SC7->C7_CONTRA)
				If nOpcX == 5
			    	lContinua:= .F.
				Aviso("SIGAGCT",STR0127,{"Ok"}) 
				EndIf
		    	If lContinua                                  
		  			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Obtém os campos que poderão ser alterados  ³
					//|através do PE: MT120PED                    |
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	               	aCPed:={}   
	               	aCPed1:={}
	                If ExistBlock("MT120PED")
	                   	If ValType(ExecBlock("MT120PED",.F.,.F.,{})) == 'A'
	                   		aCPed:=ExecBlock("MT120PED",.F.,.F.,{})
	                    		
	                    	//Somente campos de usuário poderão ser alterados //
	                    	dbSelectArea("SX3")
							dbSetOrder(2)
							For nX:=1 To Len(aCPed)
							    MsSeek(aCPed[nX])
							    If !EOF() .And. X3_PROPRI == "U"
							      	AADD(aCPed1,aCPed[nX])
							    EndIf
							Next nX
							//Não encontrou nenhum campo de usuário, invalida a utilização do PE
							If Len(aCPed1) == 0
								lMt120Ped:= .F.
								lContinua:= lMt120Ped  
	 							Aviso("SIGACOM",STR0157,{"Ok"})
							Else
								lMt120Ped:= .T.
							EndIf
	                   	Else
	                    	lMt120Ped:= .F.
	                    Endif
	      			Else
	    		    	lContinua:= .F.
						Aviso("SIGAGCT",STR0127,{"Ok"}) 
		   			EndIf
		   		EndIf
			EndIf
		EndIf
	EndIF    
EndIf   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verifica se o Pedido é Aglutinado por Central de Compras para Entrega na Filial Centralizadora |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  nOpcx == 6 .And. lContinua
	If AliasInDic("SDP") 
		dbSelectArea("SDP")
		dbSetOrder(4)
		If MsSeek(xFilial("SDP")+SC7->C7_FILENT+SC7->C7_NUM+SC7->C7_ITEM)
			Help(" ",1,"A120NPCEN")
			lContinua := .F.
		EndIf
	EndIf
EndIf

// Valida o array Rateio por CCusto - rotina automatica
If (Type('l120Auto') <> 'U' .And. l120Auto) .And. lContinua
	lContinua := a120RatAut(aRatCTBPC) 
	If lContinua 
		ACPISCH:=aClone(aRatCTBPC)
	EndIf
Endif

If lContinua
	Pergunte("MTA120",.F.)
	lWhenGet := IIf(ValType(lWhenGet) <> "L" , .F. , lWhenGet)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Define a funcao utilizada ( Incl.,Alt.,Visual.,Exclu.)  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Do Case
	Case aRotina[nOpcX][4] == 2
		l120Visual := .T.
	Case aRotina[nOpcX][4] == 3 .Or. lCopia
		l120Inclui	:= .T.
	Case aRotina[nOpcX][4] == 4
		l120Altera	:= .T.
	Case aRotina[nOpcX][4] == 5
		l120Deleta	:= .T.
		l120Visual	:= .T.
	EndCase

	If l120Inclui .Or. l120Altera .Or. l120Deleta
		lCtbOnLine := (MV_PAR05==1 .And. (VerPadrao("652") .Or. VerPadrao("657")))
		lAglutina  := MV_PAR06==1
		lDigita    := MV_PAR07==1
		nTpRodape  := MV_PAR04
	Else
		lCtbOnLine := .F.
		lAglutina  := .F.
		lDigita    := .F.
		nTpRodape  := 1
	EndIf
	
    If lMV_COEXCPC .And. l120Deleta
		lCtbOnLine := .T.
    Endif
    
	PRIVATE bFolderRefresh:= {|| (If(l120Auto, .T. ,A120REFRESH(@AVALORES)),IF(L120AUTO, .T. ,(A120FREFRESH(AOBJ))))}
	PRIVATE bGDRefresh    := {|| If(l120Auto,.T.,(oGetDados:oBrowse:Refresh())) }
	PRIVATE bZeraDesc     := {|| (nDesc1:=0),(nDesc2:=0),(nDesc3:=0)}
	PRIVATE bRefresh      := {|| (A120VDesc(nDesc1,nDesc2,nDesc3,@aValores)),(Eval(bFolderRefresh))}
	PRIVATE bListRefresh  := {|| (MaFisToCols(aHeader,aCols,,"MT120")),(Eval(bRefresh),Eval(bGDRefresh)) }
	PRIVATE bPIDRefresh   := {|| (Eval(bRefresh),Eval(bGDRefresh)) }
	PRIVATE cA120Num   	  := '' //-- O Tratamento desta variavel serah feito logo abaixo...
	PRIVATE dA120Emis     := If(l120Inclui,CriaVar("C7_EMISSAO"),SC7->C7_EMISSAO)
	PRIVATE cA120Forn     := If(l120Inclui.And. !lCopia,CriaVar("C7_FORNECE"),SC7->C7_FORNECE)
	PRIVATE cA120Loj      := If(l120Inclui.And. !lCopia,CriaVar("C7_LOJA"),SC7->C7_LOJA)
	PRIVATE cCondicao     := If(l120Inclui.And. !lCopia,CriaVar("C7_COND"),SC7->C7_COND)
	PRIVATE cDescCond     := If(l120Inclui.And. !lCopia,CriaVar("E4_DESCRI"),SE4->E4_DESCRI)
	PRIVATE cContato      := If(l120Inclui.And. !lCopia,CriaVar("C7_CONTATO"),SC7->C7_CONTATO)
	PRIVATE cFilialEnt    := If(l120Inclui.And. !lCopia,CriaVar("C7_FILENT"),SC7->C7_FILENT)
	PRIVATE cA120ProvEnt  := If(l120Inclui.And. !lCopia,If(SC7->(FieldPos("C7_PROVENT"))>0,CriaVar("C7_PROVENT"),""),Iif(SC7->(FieldPos("C7_PROVENT"))>0,SC7->C7_PROVENT,"") )
	PRIVATE cMsg          := If(l120Inclui.And. !lCopia,CriaVar("C7_MSG"),SC7->C7_MSG)
	PRIVATE cReajuste     := If(l120Inclui.And. !lCopia,CriaVar("C7_REAJUST"),SC7->C7_REAJUST)
	PRIVATE cTpFrete      := If(l120Inclui.And. !lCopia,RetTipoFrete(CriaVar("C7_TPFRETE",.T.)),RetTipoFrete(SC7->C7_TPFRETE))
	PRIVATE nDesc1        := If(l120Inclui.And. !lCopia,CriaVar("C7_DESC1"),SC7->C7_DESC1)
	PRIVATE nDesc2        := If(l120Inclui.And. !lCopia,CriaVar("C7_DESC2"),SC7->C7_DESC2)
	PRIVATE nDesc3	      := If(l120Inclui.And. !lCopia,CriaVar("C7_DESC3"),SC7->C7_DESC3)
	PRIVATE lNaturez      := SC7->(FieldPos("C7_NATUREZ")) > 0
	PRIVATE cCodNatu      := If(lNaturez,If(l120Inclui .And. !lCopia,CriaVar("C7_NATUREZ"),SC7->C7_NATUREZ),"")
	PRIVATE cTpOP	   	  := If(l120Inclui.And. !lCopia,CriaVar("C1_TPOP"),SC7->C7_TPOP)
	PRIVATE aCols         := {}
	PRIVATE aHeader    	  := {}
	PRIVATE n             := 1
	PRIVATE nMoedaPed     := If(l120Inclui.And. !lCopia,1,Max(SC7->C7_MOEDA,1))
	PRIVATE cDescMoed     := SuperGetMv("MV_MOEDA"+AllTrim(Str(nMoedaPed,2)))
	PRIVATE nTxMoeda 	  := If(l120Inclui.And. !lCopia,0,SC7->C7_TXMOEDA)
	PRIVATE lProvEnt	  := FieldPos("C7_PROVENT") > 0
	PRIVATE oGrade	      := MsMatGrade():New('oGrade',,"C7_QUANT",,'A120GValid()',,aCpsGrade)
	PRIVATE cCodDiario	  := ""
	PRIVATE c120LiqImp    := ""   
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Carrega campos enviados por Rotina Automatica 								 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
	If l120Inclui .And. l120Auto          
		nX:=aScan(aAutoCab,{|x| AllTrim(x[1]) == "C7_TPFRETE"})
		If nX>0        
			cTpFrete:=RetTipoFrete(aAutoCab[nX][2])
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Cria codigo do diario da contabilidade e liquidacao de importacao - Portugal ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() ) 
		cCodDiario := If(l120Inclui.And. !lCopia,CriaVar("C7_DIACTB"),SC7->C7_DIACTB)
	EndIf
	If cPaisLoc == "PTG"
		c120LiqImp := If(l120Inclui.And. !lCopia,CriaVar("C7_LIQIMP"),SC7->C7_LIQIMP)
	EndIf                      
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tratamento para que o sistema nao gere documentos com numeracao saltada quando executadas via rotina automatica ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If l120Inclui
		If l120Auto .And. ProcH('C7_NUM') > 0 .And. !Empty(aAutoCab[ProcH('C7_NUM'),2])
			cA120Num := aAutoCab[ProcH('C7_NUM'),2] //-- Considera o numero passado na rotina automatica
		Else
			cA120Num := CriaVar('C7_NUM', .T.) //-- Incrementa a numeracao
		EndIf
	Else
		cA120Num := SC7->C7_NUM
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o usuario tem permissao de delecao. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcX == 5
		If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
			aArea2 := GetArea()
			SC7->(dbSeek(xFilial("SC7")+cA120Num))
			While !SC7->(Eof()) .And. lContinua .And. SC7->C7_NUM == cA120Num
				If nTipoPed == 1 //Pedido de Compra
					lContinua := MaAvalPerm(1,{SC7->C7_PRODUTO,"MTA121",5})
				ElseIf nTipoPed == 2 //Autorizacao de Entrega
					lContinua := MaAvalPerm(1,{SC7->C7_PRODUTO,"MTA122",5})
				EndIf
				SC7->(dbSkip())
			End
			RestArea(aArea2)
			If !lContinua
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada executado após a inicialização das variáveis do cabeçalho do pedido    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistBlock("MT120CPE"))
		ExecBlock("MT120CPE",.F.,.F.,{nOpcX,lCopia})   
	EndIf	     

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se integrado ao SIGAPMS adiciona o Botao                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If IntePms() .And. (nTipoPed == 1 .Or. nTipoPed == 2)
		aadd(aButtons,{'PROJETPMS',{||Eval(bPmsDlgPC)},STR0122 })
	Endif

	If AliasInDic("SCH")
		Aadd(aButtons, {'S4WB013N'    ,{||oGetDados:oBrowse:lDisablePaint:=.T.,a120RatCC(aHeadSCH,aColsSCH,l120Altera .Or. l120Inclui,@aColsBKPRat ) ,oGetDados:oBrowse:lDisablePaint:=.F.,aBackColsSCH:=ACLONE(aColsSCH) }	,STR0159,STR0158})//"Rateio por Item do pedido"##"Rateio "  
	Endif
	
	If  (!(l120Visual .And. !l120Inclui) .And. Empty(SC7->(FieldGet(FieldPos("C7_NUMPR")))) .And. Empty(SC7->(FieldGet(FieldPos("C7_CODED"))))) .Or. l120Inclui
		aadd(aButtons,{"SOLICITA",     {|| a120PID(oGetDados,oCond,oDescCond,@aHeadSCH,@aColsSCH) },If(nTipoPed == 1, STR0070, STR0071 ),If(nTipoPed == 1, STR0105,STR0106)})	//"Solicitacoes"
		aadd(aButtons,{"PEDIDO",       {|| a120F4(oCond,oDescCond,@aHeadSCH,@aColsSCH) }			,If(nTipoPed == 1, STR0074, STR0075 ),If(nTipoPed == 1, STR0063,STR0107)})	//"Solicitacoes por item"
		
		aadd(aButtons,{"S4WB005N",     {|| A120ComView() }					    ,STR0091,STR0108})	//Historico de Produtos
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³O processo de Recebimento Antecipado estará disponivel ³
		//³apenas para TOP no Financeiro.                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If cPaisLoc $ "ANG|BRA|MEX" .and. AliasInDic("FIE") 
				aAreaAdt	:= SC7->( GetArea() )
				aRecnoSE2RA := FPedAdtPed("P", {cA120Num},,nOpcAdt)

				//Verifica se o produto possui algum item não atendido. 
				
				cAliasSC7 := "C7ATEND"
				cQuery := "SELECT COUNT(*) nCount"
				cQuery += " FROM "+RetSqlName("SC7")+" SC7"
				cQuery += " WHERE (SC7.C7_FILIAL = '"+xFilial("SC7")+"')"
				cQuery += " AND (SC7.C7_QUANT > SC7.C7_QUJE) "
				cQuery += " AND (SC7.C7_RESIDUO <> 'S') "
				cQuery += " AND (SC7.C7_NUM = '"+cA120Num+"') "
				cQuery += " AND (SC7.D_E_L_E_T_ <> '*')"
	
				cQuery := ChangeQuery(cQuery)
                                                                                    
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSC7,.T.,.T.)
				
				If (cAliasSC7)->nCount == 0 	
					lTotAtend := .T. 
				EndIf 
				(cAliasSC7)->(DbCloseArea())
				cQuery := ""
				
				If !l120Inclui .AND. lTotAtend // Pedido Atendido
					aAdd(aButtons,{"FINIMG32",{|| FPDxADTREL("P", cA120Num, 0, @aRecnoSE2RA, cA120Forn, cA120loj, .T.)},STR0145,STR0146}) //"Pagamento antecipado"##"Adiantamento"
				Else
					aAdd(aButtons,{"FINIMG32",{|| A120Adiant(cA120Num, cCondicao,  @aRecnoSE2RA, , cA120Forn, cA120loj,aRatCTBPC,aAdtPC,@cCondPAdt)},STR0145,STR0146}) //"Pagamento antecipado"##"Adiantamento"
				EndIf

				RestArea( aAreaAdt )
			EndIf
		#ENDIF
		SetKey( VK_F4, { || A120PID(oGetDados,oCond,oDescCond,@aHeadSCH,@aColsSCH) } )	
		SetKey( VK_F5, { || A120F4(oCond,oDescCond,@aHeadSCH,@aColsSCH) } )		
		SetKey( VK_F9, { || A120RATCC(aHeadSCH,aColsSCH,l120Altera .Or. l120Inclui,@aColsBKPRat )})		
	Else

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ATENCAO!!!Se for PYME retira a consulta a aprovacao do PC   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !__lPyme
			If AliasInDic("DBM") .And. FindFunction('MtExistDBM') .And. MtExistDBM('IP',SC7->C7_NUM)
				aadd(aButtons,{"BUDGET",   {|| a120Posic(cAlias,nReg,nOpcx,'IP')},STR0069,STR0110 }) //"Consulta Aprovacao por Item de Pedido"
			Else
				aadd(aButtons,{"BUDGET",   {|| a120Posic(cAlias,nReg,nOpcx,'PC')},STR0069,STR0110 }) //"Consulta Aprovacao por Pedido"
			EndIf
		EndIf                           		
		#IFDEF TOP                     
			If cPaisLoc $ "ANG|BRA|MEX" .and. AliasInDic("FIE")
				aRecnoSE2RA := FPedAdtPed("P", {cA120Num},,nOpcAdt)
				aadd(aButtons,{"FINIMG32",{|| FPDxADTREL("P", cA120Num, 0, @aRecnoSE2RA, cA120Forn, cA120loj, .T.)},STR0145,STR0146}) //"Pagamento antecipado"##"Adiantamento"		
			EndIf
		#ENDIF


		aadd(aButtons,{"S4WB005N",     {|| A120ComView() },              STR0091,STR0108 })  //Historico de Produtos

		If !AtIsRotina("A120TRACK")
			aadd(aButtons,{"BMPORD1",  {|| A120Track() },                STR0103, STR0109})  // "System Tracker"
		EndIf

	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Botao para exportar dados para EXCEL                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If FindFunction("RemoteType") .And. RemoteType() == 1
		aAdd(aButtons,{PmsBExcel()[1],{|| DlgToExcel({{"CABECALHO","",{RetTitle("C7_NUM") ,RetTitle("C7_EMISSAO"),RetTitle("C7_FORNECE"),RetTitle("C7_LOJA"),RetTitle("C7_COND"),RetTitle("C7_CONTATO"),RetTitle("C7_FILENT"),RetTitle("C7_MOEDA" ),RetTitle("C7_TXMOEDA")},{cA120Num,dA120Emis,cA120Forn,ca120Loj,cCondicao,cContato,cFilialEnt,nMoedaPed,nTxMoeda}},{"GETDADOS","",aHeader,aCols}}),Pergunte("MTA120",.F.)},PmsBExcel()[2],PmsBExcel()[3]})
	EndIf    
	
	If lPrjCni  
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Insere o botao de rateio financeiro                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l120Inclui
			Aadd(aButtons,{'DESTINOS',{|| F641RatFin("MATA121") },"Incluir Rateio Financeiro","Rat.Financ."}) 
		ElseIf l120Visual .or. l120Deleta
			Aadd(aButtons,{'DESTINOS',{|| F641AltRat("MATA121",2) },"Visualizar Rateio Financeiro","Rat.Financ."}) 
		ElseIf l120altera
			Aadd(aButtons,{'DESTINOS',{|| F641AltRat("MATA121",4) },"Alterar Rateio Financeiro","Rat.Financ."}) 
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Avalia botoes do usuario                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "MA120BUT" )
		If ValType( aUsButtons := ExecBlock( "MA120BUT", .F., .F. ) ) == "A"
			AEval( aUsButtons, { |x| AAdd( aButtons, x ) } ) 	 	
		EndIf 	
	EndIf 	

	dbSelectArea("SX3")
	dbSetOrder(2)
	cWhenCond  :=If(MsSeek("C7_COND"),AllTrim(SX3->X3_WHEN),.T.)
	cWhenMoed  :=If(MsSeek("C7_MOEDA"),AllTrim(SX3->X3_WHEN),.T.)
	bWhenCond  := { || !l120Visual .And. VisualSX3('C7_COND') }
	bWhenMoed  := { || !l120Visual .And. VisualSX3('C7_MOEDA') }
	If cPaisLoc == "PTG"
		cWhenLiq   :=If(MsSeek("C7_LIQIMP"),AllTrim(SX3->X3_WHEN),.T.)
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Valida a operacao com o pedido de compra ou AE                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !l120Inclui .Or. lCopia
		If l120Altera .Or. l120Deleta .Or. lCopia
			If !A120VldAlt(lCopia)
				lContinua := .F.
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa as variaveis utilizadas na exibicao do Pedido   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		A120Forn(SC7->C7_FORNECE,SC7->C7_LOJA,@aInfForn,.F.)
		A120CabOk(@oCond,@oca120Forn,@oca120Loj,aRefImpos)
		A120FormDesc(cMsg,@cDescMsg)
		A120FormReaj(cReajuste,@cDescFor)
		A120DescCnd(cCondicao,,@cDescCond)
		A120DescMoed(nMoedaPed,,@cDescMoed)
	EndIf

	If lContinua

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta aHeader e aCols utilizando a funcao FillGetDados.    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If l120Inclui .And. !lCopia

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			FillGetDados(nOpcX,"SC7",1,,,,aNoFields,,,,,.T.,,,,,{|aHeaderX| A120AfterH(l120Auto,aHeaderX)} )
			aCols[1][aScan(aHeader,{|x| Trim(x[2])=="C7_ITEM"})] := StrZero(1,Len(SC7->C7_ITEM))

		Else

			nX      := 0
			nY      := 0	
			cPedido := SC7->C7_NUM
			dbSelectArea("SC7")
			dbSetOrder(1)
			#IFDEF TOP
				aStruSC7 := SC7->(dbStruct())

				If !InTransaction() .And. !(l120Altera .Or. l120Deleta) .And. Empty(Ascan(aStruSC7,{|x| x[2]=="M"}))

					lQuery := .T.
					cQuery := "SELECT SC7.*,SC7.R_E_C_N_O_ SC7RECNO "
					cQuery += "FROM "+RetSqlName("SC7")+" SC7 "
					cQuery += "WHERE SC7.C7_FILIAL='"+xFilial("SC7")+"' AND "
					cQuery += "SC7.C7_NUM = '"+cPedido+"' AND "
					cQuery += "SC7.D_E_L_E_T_ = ' ' "
					cQuery += "ORDER BY "+SqlOrder(SC7->(IndexKey()))

					cQuery := ChangeQuery(cQuery)

					dbSelectArea("SC7")
					dbCloseArea()

				Else
			#ENDIF
				MsSeek(xFilial("SC7")+cPedido)
			#IFDEF TOP
				EndIf	
			#ENDIF		

			cSeek  := xFilial("SC7")+cPedido
			cWhile := "SC7->C7_FILIAL+SC7->C7_NUM"
			//Zera Matrix Fiscal
			MaFisClear()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			FillGetDados(nOpcX,"SC7",1,cSeek,{|| &cWhile },,aNoFields,,,cQuery,,,,, {|aColsX| A120AfterC(aColsX,aRefImpos,l120Altera,l120Deleta,lCopia,@lContinua,@cItCop,lGrade,l120Inclui)},,IIF(cModulo == "EIC",{|aHeaderX| A120AfterH(l120Auto,aHeaderX)},),"SC7")
			//-- Cópia de acols para verificar se houve mudança
			aColsBKPRat := aClone(aCols)

			If lQuery
				dbSelectArea("SC7")
				dbCloseArea()
				ChkFile("SC7",.F.)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Executa o Refresh nos valores de impostos.                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !l120Auto
				A120Refresh(@aValores)
			EndIf
			
			If AliasInDic("SCH")
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Monta o Array contendo as registros do SCH           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MsSeek(xFilial("SC7")+cPedido)
				DbSelectArea("SCH")
				DbSetOrder(1)
				cAliasSCH := "SCH"		
				#IFDEF TOP
					If TcSrvType()<>"AS/400"
						lQuery    := .T.
						aStruSCH  := SCH->(dbStruct())
						cAliasSCH := "A120NFISCAL"
						cQuery    := "SELECT SCH.*,SCH.R_E_C_N_O_ SCHRECNO "
						cQuery    += "FROM "+RetSqlName("SCH")+" SCH "
						cQuery    += "WHERE SCH.CH_FILIAL='"+xFilial("SCH")+"' AND "
						cQuery    += "SCH.CH_PEDIDO='"+SC7->C7_NUM+"' AND "
						cQuery    += "SCH.CH_FORNECE='"+SC7->C7_FORNECE+"' AND "
						cQuery    += "SCH.CH_LOJA='"+SC7->C7_LOJA+"' AND "
						cQuery    += "SCH.D_E_L_E_T_=' ' "
						cQuery    += "ORDER BY "+SqlOrder(SCH->(IndexKey()))
	
						cQuery := ChangeQuery(cQuery)
	
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCH,.T.,.T.)
						For nX := 1 To Len(aStruSCH)
							If aStruSCH[nX,2]<>"C"
								TcSetField(cAliasSCH,aStruSCH[nX,1],aStruSCH[nX,2],aStruSCH[nX,3],aStruSCH[nX,4])
							EndIf
						Next nX
						
					Else
				#ENDIF
					MsSeek(xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA)
					#IFDEF TOP
					EndIf
					#ENDIF
				dbSelectArea(cAliasSCH)
				While ( !Eof() .And. lContinua .And.;
						xFilial('SCH') == (cAliasSCH)->CH_FILIAL .And.;
						SC7->C7_NUM == (cAliasSCH)->CH_PEDIDO .And.;
						SC7->C7_FORNECE == (cAliasSCH)->CH_FORNECE .And.;
						SC7->C7_LOJA == (cAliasSCH)->CH_LOJA )
					If Empty(aBackSCH)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Montagem do aHeader                                          ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						DbSelectArea("SX3")
						DbSetOrder(1)
						MsSeek("SCH")
						While ( !EOF() .And. SX3->X3_ARQUIVO == "SCH" )
							If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CH_CUSTO#CH_FILIAL"
								aadd(aBackSCH,{ TRIM(X3Titulo()),;
									SX3->X3_CAMPO,;
									SX3->X3_PICTURE,;
									SX3->X3_TAMANHO,;
									SX3->X3_DECIMAL,;
									SX3->X3_VALID,;
									SX3->X3_USADO,;
									SX3->X3_TIPO,;
									SX3->X3_F3,;
									SX3->X3_CONTEXT })
							EndIf
							DbSelectArea("SX3")
							dbSkip()
						EndDo
					EndIf                  
					
					aHeadSCH  := aBackSCH

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					ADHeadRec("SCH",aHeadSCH)
					 
					If cItemSCH <> 	(cAliasSCH)->CH_ITEMPD
						cItemSCH	:= (cAliasSCH)->CH_ITEMPD
						aadd(aColsSCH,{cItemSCH,{}})
						nItemSCH++
					EndIf
	
					aadd(aColsSCH[nItemSCH][2],Array(Len(aHeadSCH)+1))       
					
					For nY := 1 to Len(aHeadSCH)
						If IsHeadRec(aHeadSCH[nY][2])
							aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := IIf(lQuery , (cAliasSCH)->SCHRECNO , SCH->(Recno())  )
						ElseIf IsHeadAlias(aHeadSCH[nY][2])
							aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := "SCH"
						ElseIf ( aHeadSCH[nY][10] <> "V")
							aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := (cAliasSCH)->(FieldGet(FieldPos(aHeadSCH[nY][2])))
						Else
							aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := (cAliasSCH)->(CriaVar(aHeadSCH[nY][2]))
						EndIf
						aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][Len(aHeadSCH)+1] := .F.
					Next nY
					DbSelectArea(cAliasSCH)
					dbSkip()
				EndDo
				aBackColsSCH:=ACLONE(aColsSCH)
				If lQuery
					DbSelectArea(cAliasSCH)
					dbCloseArea()
					DbSelectArea("SCH")
				EndIf
			EndIf
		EndIf

		If lContinua

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Se o Recurso de Grade de Produtos estiver Ativado, o aCols   ³
			//³sera processado pela funcao aColsGrade e a MatxFis sera      ³
			//³Finalizada e Reiniciada para sincronizar o novo aCols formado³
			//³pela aColsGrade().                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			
			If l120Altera .or. l120Deleta

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Estorna movimentos do processo liberação de pedido de compra ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								
				PcoIniLan("000055")
				For nX:=1 to Len(aCols)
	
					If aCols[nX][Len(aHeader)] >0

						dbSelectArea("SC7")
						MsGoto(aCols[nX][Len(aHeader)])
						PcoDetLan('000055','01','MATA097',.T.)
					
					EndIf
				
				Next
				
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Estorna movimentos do processo liberação de pedido de compra ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				
				If aCols[1][Len(aHeader)] >0
					dbSelectArea("SC7")
					MsGoto(aCols[1][Len(aHeader)])
					PcoDetLan('000055','02','MATA097',.T.)
				EndIf
				
			EndIf
				
			If lGrade
				If !l120Inclui .Or. lCopia
					aColsBkp := aClone(acols)
					aCols    := aColsGrade(oGrade, aCols, aHeader, "C7_PRODUTO", "C7_ITEM", "C7_ITEMGRD")
				Endif

				MaFisEnd()
				MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.,,,,,,,)

				For nX := 1 to Len(aCols)
					MaFisIniLoad(nX,,.T.)
					For nY	:= 1 To Len(aHeader)
						cValid	:= AllTrim(UPPER(aHeader[nY][6]))
						cRefCols := MaFisGetRf(cValid)[1]
						If !Empty(cRefCols) .AND. MaFisFound("IT",nX)
							MaFisLoad(cRefCols,aCols[nX][nY],nX)
						EndIf
					Next nY
					MaFisEndLoad(nX,1)
				Next nX

				MaFisAlt("NF_FRETE",avalores[FRETE])
				MaFisAlt("NF_DESPESA",avalores[VALDESP])
				MaFisAlt("NF_SEGURO",avalores[SEGURO])
				MaFisAlt("NF_DESCONTO",avalores[VALDESC])
				
				If cPaisLoc == "PTG"                     
					MaFisAlt("NF_DESNTRB",avalores[NTRIB])
					MaFisAlt("NF_TARA",avalores[TARA])
				Endif
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nTipoPed != 2
				PcoIniLan("000052")
			Else
				PcoIniLan("000053")
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Tratamentos para Rotina automatica.                         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If l120Auto				
				If nOpcX <> 5
					aValidGet := {}
					If nOpcX == 3
						AADD(aValidGet,{'cA120Num'   ,If(ProcH('C7_NUM') == 0 .Or. Empty(aAutoCab[ProcH('C7_NUM'), 2]), cA120Num, aAutoCab[ProcH('C7_NUM'),2]), "CheckSX3('C7_NUM',cA120Num)", .T.})
						AADD(aValidGet,{"dA120Emis"  ,aAutoCab[ProcH("C7_EMISSAO"),2],"CheckSX3('C7_EMISSAO',dA120Emis)" + If(cPaisLoc == "ARG"," .and. EmisProPC()","") ,.T.})
						AADD(aValidGet,{"cA120Forn"  ,aAutoCab[ProcH("C7_FORNECE"),2],"CheckSX3('C7_FORNECE',cA120Forn)" + If(cPaisLoc == "ARG"," .and. a120ProEnt()",""),.T.})
						AADD(aValidGet,{"cA120Loj"    ,aAutoCab[ProcH("C7_LOJA"   ),2],"A120Forn(cA120Forn,cA120Loj,@aInfForn) .And. CheckSX3('C7_LOJA',cA120Loj)",.T.})
					EndIf
					AADD(aValidGet,{"cCondicao"       ,aAutoCab[ProcH("C7_COND"   ),2],"CheckSX3('C7_COND',cCondicao)"           ,.T.})
					AADD(aValidGet,{"cContato"        ,aAutoCab[ProcH("C7_CONTATO"),2],"CheckSX3('C7_CONTATO',cContato)"         ,.F.})
					AADD(aValidGet,{"cFilialEnt"      ,aAutoCab[ProcH("C7_FILENT" ),2],"CheckSX3('C7_FILENT',cFilialEnt)",.T.})
					If ProcH("C7_MOEDA")<>0
						AADD(aValidGet,{"nMoedaPed"   ,aAutoCab[ProcH("C7_MOEDA"  ),2],"CheckSX3('C7_MOEDA',nMoedaPed)",.T.})
						AADD(aValidGet,{"nTxMoeda"    ,aAutoCab[ProcH("C7_TXMOEDA"),2],"CheckSX3('C7_TXMOEDA',nTxMoeda)" + IIf(cPaisLoc$"PER",".And. MaFisRef('NF_TXMOEDA','MT120',nTxMoeda)",""),.T.})
					EndIf
					If lNaturez .And. ProcH("C7_NATUREZ")<>0
						Aadd(aValidGet,{"cCodNatu"    ,aAutoCab[ProcH("C7_NATUREZ"),2],"ExistCpo('SED')",.T.})
					EndIf			
					If lProvEnt .And. ProcH("C7_PROVENT")<>0
//						AADD(aValidGet,{"cA120ProvEnt" ,aAutoCab[ProcH("C7_PROVENT" ),2],"ProvEntPC() .And. CheckSX3('C7_PROVENT',cA120ProvEnt)",.T.})
						AADD(aValidGet,{"cA120ProvEnt" ,aAutoCab[ProcH("C7_PROVENT" ),2],"ProvEntPC()",.T.})
					EndIf

					If !lWhenGet
						nOpcA := 1
					Endif	

					If ! SC7->(MsVldGAuto(aValidGet)) // consiste os gets
						nOpcA := 0
					EndIf
					If nOpcA == 0 .Or.!A120CabOk(@oCond,@oca120Forn,@oca120Loj,aRefImpos)
						nOpcA := 0
					EndIf

					If ( nOpcA == 1 .Or. lWhenGet ) .And. l120Inclui
						MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
						If cPaisLoc == 'ARG'
							SA2->(DbSetOrder(1))
							SA2->(MsSeek(xFilial("SA2")+ca120Forn+ca120Loj))
							MaFisAlt('NF_SERIENF',LocXTipSer('SA2',MVNOTAFIS))
						Endif
					EndIf

					If nOpcA <> 0 .Or. lWhenGet
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica o preenchimento do campo C7_ITEM                  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						cItem := StrZero(1,Len(SC7->C7_ITEM))
						For nX := 1 To Len(aAutoItens)
							nY := aScan(aAutoItens[nX],{|x| AllTrim(x[1])=="C7_ITEM"})
							If nY == 0
								aadd(aAutoItens[nX],{"C7_ITEM",cItem,Nil})
							EndIf
							cItem := Soma1(cItem)
						Next nX

						If !MsGetDAuto(aAutoItens,"A120LinOk",{|| A120TudOk()},aAutoCab,aRotina[nOpcx][4])
							nOpcA := 0
						EndIf
					EndIf

					If nOpcA <> 0
						aValidGet := {}
						If ProcH("C7_FRETE")<>0
							AADD(aValidGet,{"aValores[3]" ,aAutoCab[ProcH("C7_FRETE"  ),2],"A120VFold('NF_FRETE',aValores[3])"                                    ,.F.})
						EndIf
						If ProcH("C7_DESPESA")<>0
							AADD(aValidGet,{"aValores[4]" ,aAutoCab[ProcH("C7_DESPESA"),2],'A120VFold("NF_DESPESA",aValores[4])'                                ,.F.})
						EndIf
						If ProcH("C7_SEGURO")<>0
							AADD(aValidGet,{"aValores[7]" ,aAutoCab[ProcH("C7_SEGURO" ),2],'A120VFold("NF_SEGURO",aValores[7])'                                  ,.F.})
						EndIf
						If ProcH("C7_DESC1")<>0
							AADD(aValidGet,{"nDesc1"      ,aAutoCab[ProcH("C7_DESC1"  ),2],"A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores)"                         ,.F.})
						EndIf
						If ProcH("C7_DESC2")<>0
							AADD(aValidGet,{"nDesc2"      ,aAutoCab[ProcH("C7_DESC2"  ),2],"A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores)"                         ,.F.})
						EndIf
						If ProcH("C7_DESC3")<>0
							AADD(aValidGet,{"nDesc3"      ,aAutoCab[ProcH("C7_DESC3"  ),2],"A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores)"                         ,.F.})
						EndIf
						If ProcH("C7_MSG")<>0
							AADD(aValidGet,{"cMsg"        ,aAutoCab[ProcH("C7_MSG"    ),2],"CheckSX3('C7_MSG',cMsg).And.A120FormDesc(cMsg,@cDescMsg)"                       ,.F.})
						EndIf
						If ProcH("C7_REAJUST")<>0
							AADD(aValidGet,{"cReajuste"   ,aAutoCab[ProcH("C7_REAJUST"),2],"CheckSX3('C7_REAJUST',cReajuste).And.A120FormReaj(cReajuste,@cDescFor)",.F.})
						EndIf
						If lNaturez .And. ProcH("C7_NATUREZ")<>0
							Aadd(aValidGet,{"cCodNatu",aAutoCab[ProcH("C7_NATUREZ"),2],"ExistCpo('SED')",.T.})
						EndIf 
						If cPaisLoc == "PTG"
							If ProcH("C7_DESNTRB")<>0
								AADD(aValidGet,{"aValores[10]" ,aAutoCab[ProcH("C7_DESNTRB"  ),2],"A120VFold('NF_DESNTRB',aValores[10])"                                 ,.F.})
							Endif                    
							If ProcH("C7_TARA")<>0
								AADD(aValidGet,{"aValores[11]" ,aAutoCab[ProcH("C7_TARA"     ),2],"A120VFold('NF_TARA',aValores[11])"                                    ,.F.})
							EndIf
						Endif
						If !Empty(aValidGet) .And. !SC7->(MsVldGAuto(aValidGet))
							nOpcA := 0
						EndIf
						
						If nOpcA != 0  
							If !Empty(aRatProj)
								If !A120VldAJ7(nOpcX,cA120Num)// validar o Rateio por Projeto na Rotina Automatica
									nOpcA := 0
								EndIf
							EndIf
						EndIf						
						
					EndIf
				Else
					nOpcA := 1
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Quando a lWhenGet for .T. neste ponto e desligada a Roti ³
				//³na automatica l120Auto .F. para a Apresentacao da Dialog.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lWhenGet
					l120Auto := .F.
				EndIf		
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicio da Construcao da Dialog do Pedido de Compras / AE    ³
			//³-------------------------------------------------------------³
			//³                          ATENCAO !!!                        ³
			//³                                                             ³
			//³Quando for feita manutencao em alguma VALIDACAO dos GETs,    ³
			//³atualize as funcoes que se encontram no array aValidGet      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !l120Auto .Or. lWhenGet

				aObjects := {}  
				AAdd( aObjects, { 0,    75, .T., .F. } )				
				AAdd( aObjects, { 100, 100, .T., .T. } )
				AAdd( aObjects, { 0,    75, .T., .F. } )
				aInfo := { aSizeAut[ 1 ], aSizeAut[ 2 ], aSizeAut[ 3 ], aSizeAut[ 4 ], 3, 3 }
				aPosObj := MsObjSize( aInfo, aObjects )
				aPosGet := MsObjGetPos(aSizeAut[3]-aSizeAut[1],305,;
					{{10,40,105,140,200,234,275,200,225,260,285,265},;
					If(cPaisLoc<>"PTG",{10,40,105,140,200,234,63},{10,40,101,120,175,205,63,250,270}),;
					Iif(cPaisLoc<>"PTG",{5,70,160,205,295},{5,50,120,145,205,245,293}),;
					{6,34,200,215},;
					{6,34,80,113,160,185},;
					{6,34,245,268,260},;
					{10,50,150,190},;
					{273,130,190},;
					{8,45,80,103,139,173,200,235,270},;
					{133,190,144,190,289,293},;
					{142,293,140},;
					{9,47,188,148,9,146} } )
				lWhenCond := If( !Empty( cWhenCond ), &( cWhenCond ), .T. ) .And. Eval( bWhenCond )
				lWhenMoed := If( !Empty( cWhenMoed ), &( cWhenMoed ), .T. ) .And. Eval( bWhenMoed )

				DEFINE MSDIALOG oDlg FROM aSizeAut[7],0 TO aSizeAut[6],aSizeAut[5] TITLE cCadastro OF oMainWnd PIXEL

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada Disnibiliza  cordenadas da Dialog.           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMt120Get
					aPosObj := If(ValType(aPosObjPE:=ExecBlock("MT120GET",.F.,.F.,{aPosObj,nOpcx}))== "A",aPosObjPE,aPosObj)
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Definicao dos MsGETS do Cabecalho do Pedido de Compras        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				@ aPosObj[1][1],aPosObj[1][2] TO aPosObj[1][3]-16,aPosObj[1][4] LABEL '' OF oDlg PIXEL

				@ aPosObj[1][1]+5,aPosGet[1,1] SAY   STR0017 OF oDlg PIXEL SIZE 031,006               // "Numero"
				@ aPosObj[1][1]+4,aPosGet[1,2] MSGET cA120Num ;
				PICTURE PesqPict('SC7','C7_NUM') F3 CpoRetF3('C7_NUM');
				WHEN    l120Inclui .And. VisualSX3('C7_NUM') ;
				VALID   CheckSX3('C7_NUM',cA120Num)  .And. !ChkChaveSC7(cA120Num,.T.) OF oDlg PIXEL SIZE 031,006

				@ aPosObj[1][1]+5,aPosGet[1,3] SAY   STR0018 OF oDlg PIXEL SIZE 050,006               // "Data de Emissao"
				@ aPosObj[1][1]+4,aPosGet[1,4] MSGET dA120Emis ;
				PICTURE PesqPict('SC7','C7_EMISSAO') F3 CpoRetF3('C7_EMISSAO');
				WHEN    l120Inclui .And. VisualSX3('C7_EMISSAO') ;
				VALID   CheckSX3('C7_EMISSAO',dA120Emis) .And. If(cPaisLoc == "ARG",EmisProPC(),.T.) OF oDlg PIXEL SIZE 048,006 HASBUTTON

				@ aPosObj[1][1]+5,aPosGet[1,5]-12 SAY   STR0019    OF oDlg PIXEL SIZE 036,006            // "Fornecedor"
				@ aPosObj[1][1]+4,aPosGet[1,6]-25 MSGET oca120Forn VAR cA120Forn;
				PICTURE PesqPict('SC7','C7_FORNECE') F3 CpoRetF3('C7_FORNECE');
				WHEN    l120Inclui .And. VisualSX3('C7_FORNECE') ;
				VALID   A120Forn(cA120Forn,@cA120Loj,@aInfForn,IIF(lWhenGet,.F.,.T.),lCopia) .And. CheckSX3('C7_FORNECE',cA120Forn) .And. If(cPaisLoc == "ARG",a120ProEnt(),.T.) .And. A120VFold('NF_CODCLIFOR',ca120Forn) OF oDlg PIXEL SIZE 080,006 HASBUTTON

				@ aPosObj[1][1]+5,aPosGet[1,12]+10 SAY OemToAnsi(STR0139) OF oDlg PIXEL SIZE 019,006	   // "Loja"
				@ aPosObj[1][1]+4,aPosGet[1,7]+15 MSGET oca120Loj VAR cA120Loj;  
				PICTURE PesqPict('SC7','C7_LOJA')  F3 CpoRetF3('C7_LOJA');
				WHEN    l120Inclui.And. VisualSX3('C7_LOJA');
				VALID   A120Forn(cA120Forn,@cA120Loj,@aInfForn,IIF(lWhenGet,.F.,.T.),lCopia) .And. CheckSX3('C7_LOJA',cA120Loj) .And. A120VFold('NF_LOJA',ca120Loj) OF oDlg PIXEL SIZE 019,006

				@ aPosObj[1][1]+17,aPosGet[2,1] SAY   STR0020 OF oDlg PIXEL SIZE 030,006               // "Cond. Pagto"
				@ aPosObj[1][1]+16,aPosGet[2,2] MSGET oCond   VAR cCondicao  ;
				PICTURE PesqPict('SC7','C7_COND') F3 CpoRetF3('C7_COND');
				VALID   CheckSX3('C7_COND',cCondicao) .And. A120DescCnd(cCondicao,@oDescCond,@cDescCond,oGetDados) .And. A120ValCond(cCondicao);
				WHEN    lWhenCond .And. !lMt120Ped OF oDlg PIXEL SIZE 025,006 HASBUTTON

				@ aPosObj[1][1]+17,aPosGet[2,3] SAY   STR0021 OF oDlg PIXEL SIZE 038,006               // "Contato"
				@ aPosObj[1][1]+16,aPosGet[2,4] MSGET cContato  ;
				PICTURE PesqPict('SC7','C7_CONTATO') F3 CpoRetF3('C7_CONTATO');
				WHEN    !l120Visual .And. VisualSX3('C7_CONTATO') .And. !lMt120Ped ;
				VALID   CheckSX3('C7_CONTATO',cContato) OF oDlg PIXEL SIZE 074,006

				@ aPosObj[1][1]+16,aPosGet[2,7] MSGET oDescCond VAR cDescCond PICTURE PesqPict('SE4','E4_DESCRI') WHEN .F. OF oDlg PIXEL SIZE 055,006
        
				@ aPosObj[1][1]+17,aPosGet[2,5]-12 SAY   STR0022 OF oDlg PIXEL SIZE 050,006               // "Filial p/ Entrega"
				@ aPosObj[1][1]+16,aPosGet[2,6]-25 MSGET cFilialEnt  ;
				PICTURE PesqPict('SC7','C7_FILENT') F3 CpoRetF3('C7_FILENT');
				WHEN    FilEntWhen(l120Visual,lPcFilEnt) .And. !lMt120Ped ;
				VALID   CheckSX3('C7_FILENT',cFilialEnt) .And.	Eval(bGDRefresh) OF oDlg PIXEL SIZE 050,006 HASBUTTON
				
				@ aPosObj[1][1]+29,aPosGet[2,1] SAY   STR0089   OF oDlg PIXEL SIZE 030,006             // "Moeda"
				@ aPosObj[1][1]+28,aPosGet[2,2] MSGET oGetMoeda VAR nMoedaPed ;
				PICTURE PesqPict("SC7","C7_MOEDA") ;
				VALID   M->NMOEDAPED <= MoedFin().And. M->NMOEDAPED <> 0 .And. A120DescMoed(nMoedaPed,@oDescMoed,@cDescMoed,@nTxMoeda,aObj);
				WHEN    lWhenMoed .And. !lMt120Ped PIXEL SIZE 25,06 OF oDlg

				@ aPosObj[1][1]+28,aPosGet[2,7] MSGET oDescMoed VAR cDescMoed  WHEN .F. OF oDlg PIXEL SIZE 055,006

				@ aPosObj[1][1]+29,aPosGet[2,3] SAY   STR0090 OF oDlg PIXEL SIZE 030,006               // "Taxa da Moeda"
				@ aPosObj[1][1]+28,aposget[2,4] MSGET nTxMoeda OF oDlg ;
				PICTURE PesqPict("SC7","C7_TXMOEDA",11) F3 CpoRetF3('C7_TXMOEDA');
				WHEN    !l120Visual .And. VisualSX3('C7_TXMOEDA') .And. !lMt120Ped ;
				VALID   (CheckSX3('C7_TXMOEDA',nMoedaped) .And. Iif (cPaisLoc $ "PER",MaFisRef("NF_TXMOEDA","MT120",nTxMoeda),.T.)) PIXEL SIZE 074,006 HASBUTTON
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Get especifico para rotina de autorização de entrega.         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
				If nTipoPed == 2 .And. lTpOp
				   @ aPosObj[1][1]+41,aPosGet[2,1] SAY Alltrim(RetTitle("C7_TPOP")) Of oDlg PIXEL		//Firme ou previsto C7_TPOP		
			 		@ aPosObj[1][1]+40,aPosGet[2,2] COMBOBOX oTpOP VAR cTpOp ITEMS StrTokArr(x3cbox(),';') VALID Pertence('FP') SIZE 60,10;
			 		When l120Inclui .And. VisualSX3("C7_TPOP") Of oDlg PIXEL	
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Gets especificos para Versao Localizada Testa os Campos.      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lNaturez .And. cPaisLoc <> "PTG"
					@ aPosObj[1][1]+29,aPosGet[1,8] SAY Alltrim(RetTitle("C7_NATUREZ"))	     OF oDlg PIXEL SIZE 45,10	//"&Cod. Comprador"
					@ aPosObj[1][1]+28,aPosGet[1,9] MSGET cCodNatu F3 CpoRetF3("C7_NATUREZ") PICTURE PesqPict("SC7","C7_NATUREZ");
					WHEN !l120Visual .And. VisualSX3("C7_NATUREZ") VALID Vazio() .Or. ExistCpo("SED") OF oDlg PIXEL SIZE 45,006 HASBUTTON
				EndIf

				If cPaisLoc == "PTG"
					@ aPosObj[1][1]+29,aPosGet[2,5] SAY Alltrim(RetTitle("C7_NATUREZ"))	     OF oDlg PIXEL SIZE 45,10	//"&Cod. Comprador"
					@ aPosObj[1][1]+28,aPosGet[2,6] MSGET cCodNatu F3 CpoRetF3("C7_NATUREZ") PICTURE PesqPict("SC7","C7_NATUREZ");
					WHEN !l120Visual .And. VisualSX3("C7_NATUREZ") VALID Vazio() .Or. ExistCpo("SED") OF oDlg PIXEL SIZE 45,006 HASBUTTON

					@ aPosObj[1][1]+29,aPosGet[2,8] SAY   Alltrim(RetTitle("C7_LIQIMP"))    OF oDlg PIXEL SIZE 045,10 // Liq. Importacao
					@ aPosObj[1][1]+28,aPosGet[2,9] MSGET c120LiqImp PICTURE PesqPict('SC7','C7_LIQIMP');
					WHEN !l120Visual .And. IIf(&(cWhenLiq),.T.,.F.) OF oDlg PIXEL SIZE 45,006 HASBUTTON
				EndIf                                                                             

				If lProvEnt .And. cPaisLoc <> "PTG"
					@ aPosObj[1][1]+29,If(lNaturez,aPosGet[1,10],aPosGet[1,5]) SAY   Alltrim(RetTitle("C7_PROVENT"))    OF oDlg PIXEL SIZE 045,10 // Prov. Entrega
					@ aPosObj[1][1]+28,If(lNaturez,aPosGet[1,11],aPosGet[1,6]) MSGET oca120PrVE VAR cA120ProvEnt         PICTURE PesqPict('SC7','C7_PROVENT') F3 CpoRetF3('C7_PROVENT');
					WHEN l120Inclui.And. VisualSX3('C7_PROVENT')  Valid  ProvEntPC() OF oDlg PIXEL SIZE 019,006  HASBUTTON  // .AND.   MafisRef("NF_UFDEST","M100",cA120ProvEnt) OF oDlg PIXEL SIZE 019,006
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada Disnibiliza o Objeto da Dialog e cordenadas  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMt120TEL
					ExecBlock("MT120TEL",.F.,.F.,{@oDlg, aPosGet, aObj, nOpcx, nReg} )
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Criacao da Area da MsGetDados do PC                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If l120Visual .and. lGrade
					oGetdados := msGetDados():New(aPosObj[2,1]-20,aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],4,,,"",,{"C7_QUANT","C7_QTSEGUM","C7_DATPRF"},,,,,,,,,)
				Else
					if lMt120Ped
						oGetDados := MSGetDados():New(aPosObj[2,1]-20,aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcX,'A120LinOk','A120TudOk','+C7_ITEM',!l120Visual,aCPed1,,,Len(aCols),'A120FldOk()',,,'A120Del')
					Else
						oGetDados := MSGetDados():New(aPosObj[2,1]-20,aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpcX,'A120LinOk','A120TudOk','+C7_ITEM',!l120Visual,,,,MAXGETDAD,'A120FldOk()',,,'A120Del')
					EndIf
				EndIf

				oGetDados:oBrowse:bGotFocus	:= {||A120CabOk(@oCond,@oca120Forn,@oca120Loj,aRefImpos) }

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Criacao dos Folders da Area do Rodape do PC                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder := TFolder():New(aPosObj[3,1],aPosObj[3,2],aTitles,{"HEADER"},oDlg,,,, .T., .F.,aPosObj[3,4]-aPosObj[3,2],aPosObj[3,3]-aPosObj[3,1],)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³acerto no folder para nao perder o foco                       ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nX := 1 to Len(oFolder:aDialogs)
					DEFINE SBUTTON FROM 5000,5000 TYPE 5 ACTION Allwaystrue() ENABLE OF oFolder:aDialogs[nX]
				Next nX

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder dos totais                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[1]:oFont := oDlg:oFont 
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para Incluir Folders no Rodape P.E. usado em ³
				//³conjunto com o P.E. MT120Tel e a variavel aTitles.            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("MT120FOL")
					ExecBlock("MT120FOL",.F.,.F.,{nOpcx,aPosGet})
				EndIf		
				  
				If cPaisLoc <> "PTG"
					@ 006,aPosGet[3,1] SAY   STR0023  OF  oFolder:aDialogs[1] PIXEL SIZE 055,009 // "Valor da Mercadoria"
					@ 005,aPosGet[3,2] MSGET aObj[01] VAR aValores[VALMERC]   PICTURE    PesqPict('SC7','C7_TOTAL',,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 006,aPosGet[3,3] SAY   STR0024  OF  oFolder:aDialogs[1] PIXEL SIZE 049,009 // "Descontos"
					@ 005,aPosGet[3,4] MSGET aObj[02] VAR aValores[VALDESC]   PICTURE    PesqPict('SC7','C7_VLDESC',,nMoedaPed)  OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 020,aPosGet[3,1] SAY   STR0072  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Frete"
					@ 019,aPosGet[3,2] MSGET aObj[03] VAR aValores[FRETE]     PICTURE    PesqPict('SC7','C7_FRETE',,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 020,aPosGet[3,3] SAY   STR0073  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Despesas"
					@ 019,aPosGet[3,4] MSGET aObj[22] VAR aValores[VALDESP]   PICTURE    PesqPict('SC7','C7_DESPESA',,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 034,aPosGet[3,3] SAY   STR0040  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Seguro"
					@ 033,aPosGet[3,4] MSGET aObj[23] VAR aValores[SEGURO]    PICTURE    PesqPict('SC7','C7_DESPESA',,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 051,aPosGet[3,3] SAY   STR0029  OF  oFolder:aDialogs[1] PIXEL SIZE 058,009 // "Total do Pedido"
					@ 049,aPosGet[3,4] MSGET aObj[04] VAR aValores[TOTPED]    PICTURE    PesqPict('SC7','C7_TOTAL',,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 043,003 TO 46 ,aPosGet[3,5] LABEL '' OF oFolder:aDialogs[1] PIXEL
				Else 
					@ 005,aPosGet[3,1] SAY   STR0023  OF  oFolder:aDialogs[1] PIXEL SIZE 055,009 // "Valor da Mercadoria"
					@ 004,aPosGet[3,2] MSGET aObj[01] VAR aValores[VALMERC]   PICTURE    PesqPict('SC7','C7_TOTAL',17,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 005,aPosGet[3,3] SAY   STR0024  OF  oFolder:aDialogs[1] PIXEL SIZE 049,009 // "Descontos"
					@ 004,aPosGet[3,4] MSGET aObj[02] VAR aValores[VALDESC]   PICTURE    PesqPict('SC7','C7_VLDESC',17,nMoedaPed)  OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 005,aPosGet[3,5] SAY   STR0072  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Frete"
					@ 004,aPosGet[3,6] MSGET aObj[03] VAR aValores[FRETE]     PICTURE    PesqPict('SC7','C7_FRETE',17,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 019,aPosGet[3,1] SAY   STR0040  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Seguro"
					@ 018,aPosGet[3,2] MSGET aObj[23] VAR aValores[SEGURO]    PICTURE    PesqPict('SC7','C7_DESPESA',17,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 019,aPosGet[3,3] SAY   STR0073  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Despesas"
					@ 018,aPosGet[3,4] MSGET aObj[22] VAR aValores[VALDESP]   PICTURE    PesqPict('SC7','C7_SEGURO',17,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 019,aPosGet[3,5] SAY   STR0136  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Despesas não trib."
					@ 018,aPosGet[3,6] MSGET aObj[25] VAR aValores[NTRIB]     PICTURE    PesqPict('SC7','C7_DESNTRB',17,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 033,aPosGet[3,1] SAY   STR0137  OF  oFolder:aDialogs[1] PIXEL SIZE 050,009  // "Tara"
					@ 032,aPosGet[3,2] MSGET aObj[26] VAR aValores[TARA]      PICTURE    PesqPict('SC7','C7_TARA',17,nMoedaPed) OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 051,aPosGet[3,5] SAY   STR0029  OF  oFolder:aDialogs[1] PIXEL SIZE 058,009 // "Total do Pedido"
					@ 049,aPosGet[3,6] MSGET aObj[04] VAR aValores[TOTPED]    PICTURE    PesqPict('SC7','C7_TOTAL',17,nMoedaPed)   OF oFolder:aDialogs[1] PIXEL WHEN .F. SIZE 080,009
					@ 046,aPosGet[3,1] TO 047,aPosGet[3,7] LABEL '' OF oFolder:aDialogs[1] PIXEL
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder com as informacoes do fornecedor             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[2]:oFont := oDlg:oFont
				@ 006,aPosGet[4,1] SAY STR0030    OF   oFolder:aDialogs[2] PIXEL SIZE 037,009 // "Nome"
				@ 005,aPosGet[4,2] MSGET aObj[5]  VAR  aInfForn[1]         PICTURE PesqPict('SA2','A2_NOME')   WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 159,009
				@ 006,aPosGet[4,3] SAY STR0031    OF   oFolder:aDialogs[2] PIXEL SIZE 023,009 // "Tel."
				@ 005,aPosGet[4,4] MSGET aObj[6]  VAR  aInfForn[2]                                             WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 074,009
				@ 043,aPosGet[5,1] SAY STR0032    OF   oFolder:aDialogs[2] PIXEL SIZE 032,009 // "1a Compra"
				@ 042,aPosGet[5,2] MSGET aObj[7]  VAR  aInfForn[3]         PICTURE PesqPict('SA2','A2_PRICOM') WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 040,009
				@ 043,aPosGet[5,3] SAY STR0033    OF   oFolder:aDialogs[2] PIXEL SIZE 036,009 // "Ult. Compra"
				@ 042,aPosGet[5,4] MSGET aObj[8]  VAR  aInfForn[4]         PICTURE PesqPict('SA2','A2_ULTCOM') WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 040,009
				@ 043,aPosGet[5,5] SAY RTrim(RetTitle("A2_CGC")) OF oFolder:aDialogs[2] PIXEL SIZE 31 ,009 // "CNPJ / CPF"
				@ 042,aPosGet[5,6] MSGET aObj[21] VAR  aInfForn[7]         PICTURE Iif(SA2->A2_TIPO == 'F',Substr(PICPES(SA2->A2_TIPO),1,17),Substr(PICPES(SA2->A2_TIPO),1,21)) WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 76 ,009
				@ 024,aPosGet[6,1] SAY STR0034    OF   oFolder:aDialogs[2] PIXEL SIZE 049,009 // "Endereco"
				@ 023,aPosGet[6,2] MSGET aObj[9]  VAR  aInfForn[5]         PICTURE PesqPict('SA2','A2_END')    WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 205,009
				@ 024,aPosGet[6,3] SAY STR0035    OF   oFolder:aDialogs[2] PIXEL SIZE 032,009 // "Estado"
				@ 023,aPosGet[6,4] MSGET aObj[10] VAR  aInfForn[6]         PICTURE PesqPict('SA2','A2_EST')    WHEN .F. OF oFolder:aDialogs[2] PIXEL SIZE 021,009
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inclusão da função IsInCallStack para não ocorrer recursividade  ³
				//³de telas visualização do pedido de compras a partir  			³
				//³da consulta Posição Fornecedores  								³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !IsInCallStack("FINC030")
					@ 042,aPosGet[6,5] BUTTON STR0036 SIZE 030,010  FONT oDlg:oFont ACTION A120ToFC030()  OF oFolder:aDialogs[2] PIXEL // "Mais Inf."
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder das despesas acessorias                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[3]:oFont := oDlg:oFont 
				If cPaisLoc <> "PTG"
					@ 009,aPosGet[7,1] SAY STR0037    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 // "Tp. Frete"
					@ 008,aPosGet[7,2] MSCOMBOBOX aObj[11] VAR cTpFrete       ITEMS      aCombo ON CHANGE A120VldCombo(cTpFrete,@aValores) .And. A120VFold("NF_FRETE",aValores[FRETE]) WHEN !l120Visual .And. !lMt120Ped SIZE 065,050 OF oFolder:aDialogs[3] PIXEL
					@ 009,aPosGet[7,3] SAY STR0038    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 //"Valor do Frete"
					@ 008,aPosGet[7,4] MSGET aObj[12] VAR aValores[FRETE]     PICTURE    PesqPict('SC7','C7_FRETE',,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. cTpFrete=="C-CIF" .And. !lMt120Ped VALID A120VFold("NF_FRETE",aValores[FRETE]) SIZE 080,009 HASBUTTON
					@ 026,aPosGet[7,1] SAY STR0039    OF  oFolder:aDialogs[3] PIXEL SIZE 042,009 // "Despesas"
					@ 025,aPosGet[7,2] MSGET aObj[13] VAR aValores[VALDESP]   PICTURE    PesqPict('SC7','C7_FRETE',,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_DESPESA",aValores[VALDESP]) SIZE 080,009 HASBUTTON
					@ 026,aPosGet[7,3] SAY STR0040    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 // "Seguro"
					@ 025,aPosGet[7,4] MSGET aObj[14] VAR aValores[SEGURO]    PICTURE    PesqPict('SC7','C7_FRETE',,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_SEGURO",aValores[SEGURO]) SIZE 080,009 HASBUTTON
					@ 038,011 TO 40 ,aPosGet[8,1] LABEL '' OF oFolder:aDialogs[3] PIXEL
					@ 048,aPosGet[8,2] SAY STR0056    OF  oFolder:aDialogs[3] PIXEL SIZE 060,009 // "Total ( Frete+Despesas)"
					@ 047,aPosGet[8,3] MSGET aObj[24] VAR aValores[TOTF3]     PICTURE    PesqPict('SC7','C7_FRETE',,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN .F. .And. !lMt120Ped SIZE 080,009 HASBUTTON
				Else 
					@ 005,aPosGet[7,1] SAY STR0037    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 // "Tp. Frete"
					@ 004,aPosGet[7,2] MSCOMBOBOX aObj[11] VAR cTpFrete       ITEMS      aCombo ON CHANGE A120VldCombo(cTpFrete,@aValores) .And. A120VFold("NF_FRETE",aValores[FRETE]) WHEN !l120Visual .And. !lMt120Ped SIZE 065,050 OF oFolder:aDialogs[3] PIXEL
					@ 005,aPosGet[7,3] SAY STR0038    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 //"Valor do Frete"
					@ 004,aPosGet[7,4] MSGET aObj[12] VAR aValores[FRETE]     PICTURE    PesqPict('SC7','C7_FRETE',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. cTpFrete=="C-CIF" .And. !lMt120Ped VALID A120VFold("NF_FRETE",aValores[FRETE]) SIZE 080,009 HASBUTTON
					@ 019,aPosGet[7,1] SAY STR0040    OF  oFolder:aDialogs[3] PIXEL SIZE 035,009 // "Seguro"
					@ 018,aPosGet[7,2] MSGET aObj[14] VAR aValores[SEGURO]    PICTURE    PesqPict('SC7','C7_FRETE',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_SEGURO",aValores[SEGURO]) SIZE 080,009 HASBUTTON
					@ 019,aPosGet[7,3] SAY STR0039    OF  oFolder:aDialogs[3] PIXEL SIZE 042,009 // "Despesas"
					@ 018,aPosGet[7,4] MSGET aObj[13] VAR aValores[VALDESP]   PICTURE    PesqPict('SC7','C7_FRETE',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_DESPESA",aValores[VALDESP]) SIZE 080,009 HASBUTTON
					@ 033,aPosGet[7,1] SAY STR0136    OF  oFolder:aDialogs[3] PIXEL SIZE 050,009 // "Despesas não trib."
					@ 032,aPosGet[7,2] MSGET aObj[27] VAR aValores[NTRIB]     PICTURE    PesqPict('SC7','C7_DESNTRB',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_DESNTRB",aValores[NTRIB]) SIZE 080,009 HASBUTTON
					@ 033,aPosGet[7,3] SAY STR0137    OF  oFolder:aDialogs[3] PIXEL SIZE 042,009 // "Tara"
					@ 032,aPosGet[7,4] MSGET aObj[28] VAR aValores[TARA]     PICTURE    PesqPict('SC7','C7_TARA',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN !l120Visual .And. !lMt120Ped VALID A120VFold("NF_TARA",aValores[TARA]) SIZE 080,009 HASBUTTON
					@ 046,011 TO 47 ,aPosGet[8,1] LABEL '' OF oFolder:aDialogs[3] PIXEL
					@ 051,aPosGet[7,3] SAY STR0056    OF  oFolder:aDialogs[3] PIXEL SIZE 060,009 // "Total ( Frete+Despesas)"
					@ 050,aPosGet[7,4] MSGET aObj[24] VAR aValores[TOTF3]     PICTURE    PesqPict('SC7','C7_FRETE',14,nMoedaPed) OF oFolder:aDialogs[3] PIXEL WHEN .F. .And. !lMt120Ped SIZE 080,009 HASBUTTON
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder dos Descontos de rodape                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[4]:oFont := oDlg:oFont
				@ 009,aPosGet[09,1] SAY STR0041    OF  oFolder:aDialogs[4] PIXEL SIZE 040,009 // "Desconto 1"
				@ 008,aPosGet[09,2] MSGET aObj[15] VAR nDesc1              PICTURE    PesqPict('SC7','C7_DESC1',,nMoedaPed) OF oFolder:aDialogs[4] PIXEL WHEN !l120Visual .And. MaFisFound("NF") .And. !lMt120Ped VALID If(cPaisLoc!="BRA",A120AtuDes(nDesc1,nDesc2,nDesc3),.T.) .And. A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores) .And. Positivo() SIZE 030,009 HASBUTTON
				@ 009,aPosGet[09,3] SAY '%'        OF  oFolder:aDialogs[4] PIXEL SIZE 011,009
				@ 009,aPosGet[09,4] SAY STR0042    OF  oFolder:aDialogs[4] PIXEL SIZE 036,009 // "Desconto 2"
				@ 008,aPosGet[09,5] MSGET aObj[16] VAR nDesc2              PICTURE    PesqPict('SC7','C7_DESC2',,nMoedaPed) OF oFolder:aDialogs[4] PIXEL WHEN !l120Visual .And. MaFisFound("NF") .And. !lMt120Ped VALID If(cPaisLoc!="BRA",A120AtuDes(nDesc1,nDesc2,nDesc3),.T.) .And. A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores) .And. Positivo() SIZE 030,009 HASBUTTON
				@ 009,aPosGet[09,6] SAY '%'        OF  oFolder:aDialogs[4] PIXEL SIZE 009,009
				@ 009,aPosGet[09,7] SAY STR0043    OF  oFolder:aDialogs[4] PIXEL SIZE 042,009 // "Desconto 3"
				@ 008,aPosGet[09,8] MSGET aObj[17] VAR nDesc3              PICTURE    PesqPict('SC7','C7_DESC3',,nMoedaPed) OF oFolder:aDialogs[4] PIXEL WHEN !l120Visual .And. MaFisFound("NF") .And. !lMt120Ped VALID If(cPaisLoc!="BRA",A120AtuDes(nDesc1,nDesc2,nDesc3),.T.) .And. A120VDesc(@nDesc1,@nDesc2,@nDesc3,@aValores) .And. Positivo() SIZE 030,009 HASBUTTON
				@ 009,aPosGet[09,9] SAY '%'        OF  oFolder:aDialogs[4] PIXEL SIZE 012,009
				@ 027,aPosGet[10,1] SAY STR0044    OF  oFolder:aDialogs[4] PIXEL SIZE 048,009 //"Valor do Desconto"
				@ 026,aPosGet[10,2] MSGET aObj[18] VAR aValores[VALDESC]   PICTURE    PesqPict('SC7','C7_VLDESC',,nMoedaPed) OF oFolder:aDialogs[4] PIXEL WHEN !l120Visual .And. MaFisFound("NF") .And.(nDesc1+nDesc2+nDesc3==0) .And. !lMt120Ped VALID A120VFold("NF_DESCONTO",aValores[VALDESC]) SIZE 075,009 HASBUTTON
				@ 049,aPosGet[10,3] SAY STR0045    OF  oFolder:aDialogs[4] PIXEL SIZE 043,009 // "Total do Pedido"
				@ 048,aPosGet[10,4] MSGET aObj[19] VAR aValores[TOTPED]    PICTURE    PesqPict('SC7','C7_TOTAL',,nMoedaPed) OF oFolder:aDialogs[4] PIXEL WHEN .F. SIZE 075,009 HASBUTTON
				@ 038,005 TO 040,aPosGet[10,5] LABEL '' OF oFolder:aDialogs[4] PIXEL

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder do Resumo de Impostos                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[5]:oFont := oDlg:oFont
				If !lMt120Ped
				aObj[20] := MaFisRodape(nTpRodape,oFolder:aDialogs[5],,{5,3,aPosGet[10,6],53},bListRefresh,l120Visual)
				else
					aObj[20] := MaFisRodape(nTpRodape,oFolder:aDialogs[5],,{5,3,aPosGet[10,6],53},bListRefresh,.T.)
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³MsGets do Folder de Menssagem e Reajuste                      ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				oFolder:aDialogs[6]:oFont := oDlg:oFont
				@ 005,aPosGet[11,1] TO 055,aPosGet[11,2] LABEL STR0053 OF oFolder:aDialogs[6] PIXEL //"Reajuste"
				@ 005,003 TO 055,aPosGet[11,3] LABEL STR0054 OF oFolder:aDialogs[6] PIXEL // "Mensagem"
				@ 015,aPosGet[12,1] SAY   STR0055   OF oFolder:aDialogs[6] PIXEL SIZE 040,009 // "Cod. Formula"
				@ 014,aPosGet[12,2] MSGET cMsg      PICTURE PesqPict('SC7','C7_MSG')     F3 CpoRetF3('C7_MSG')     WHEN !l120Visual .And.VisualSX3('C7_MSG') .And. !lMt120Ped  VALID CheckSX3('C7_MSG',cMsg).And.A120FormDesc(cMsg,@cDescMsg) .And. A120FRefresh(aObj2) OF oFolder:aDialogs[6] PIXEL SIZE 023,009 HASBUTTON
				@ 014,aPosGet[12,3] MSGET cReajuste PICTURE PesqPict('SC7','C7_REAJUST') F3 CpoRetF3('C7_REAJUST') WHEN !l120Visual .And.VisualSX3('C7_REAJUST') .And. !lMt120Ped VALID CheckSX3('C7_REAJUST',cReajuste).And.A120FormReaj(cReajuste,@cDescFor) .And. A120FRefresh(aObj2) OF oFolder:aDialogs[6] PIXEL SIZE 023,009 HASBUTTON
				@ 015,aPosGet[12,4] SAY   STR0057   OF oFolder:aDialogs[6] PIXEL SIZE 040,009 // "Cod.Formula"
				@ 032,aPosGet[12,5] MSGET aObj2[1]  VAR cDescMsg  PICTURE "@!" OF oFolder:aDialogs[6] WHEN .F. PIXEL SIZE 124,009
				@ 031,aPosGet[12,6] MSGET aObj2[2]  VAR cDescFor  PICTURE "@!" OF oFolder:aDialogs[6] WHEN .F. PIXEL SIZE 140,009

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada que disponibiliza o Objeto da Dialog - oDlg  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMt120Scr
					ExecBlock("MT120SCR",.F.,.F.,@oDlg)
				EndIf	

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Execucao de Refresh necessario para Rotina automatica lWhenGet³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lWhenGet
					Eval(bRefresh)
				EndIf
				
				If lWhenGet
					ACTIVATE MSDIALOG oDlg ON INIT (IIf(lWhenGet,oGetDados:oBrowse:Refresh(),Nil),EnchoiceBar(oDlg,{||If(oGetDados:TudoOk() .And. A120aColsRa(aColsBKPRat,nOpcx,aColsSCH),(nOpcA:=1 , oDlg:End()),(nOpcA:=0,oGetDados:oBrowse:SetFocus()))},{|| oDlg:End()},,aButtons)) CENTERED
				Else
					ACTIVATE MSDIALOG oDlg ON INIT (IIf(lWhenGet,oGetDados:oBrowse:Refresh(),Nil),EnchoiceBar(oDlg,{||If(oGetDados:TudoOk() .And. A120aColsRa(aColsBKPRat,nOpcx,aColsSCH),(nOpcA:=1 , oDlg:End()),(nOpcA:=0,oGetDados:oBrowse:SetFocus()))},{|| oDlg:End()},,aButtons))
				EndIf

			EndIf
            
			If lPrjCni
				If (!ISINCALLSTACK("MTA120E"))
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Ponto de Entrada para Continuar ou nao a Exclusao             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If l120Deleta .And. ExistBlock("MTA120E")
						lMta120E := ExecBlock("MTA120E",.f.,.f.,{nOpcA,cA120Num})
						If ValType( lMta120E ) == "L" .And. !lMta120E
							nOpcA := 0
						EndIf
					EndIf
				EndIf 
			Else      

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para Continuar ou nao a Exclusao             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If l120Deleta .And. ExistBlock("MTA120E")
					lMta120E := ExecBlock("MTA120E",.f.,.f.,{nOpcA,cA120Num})
					If ValType( lMta120E ) == "L" .And. !lMta120E
						nOpcA := 0
					EndIf
				EndIf
			EndIf

			If nOpcA == 1
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Executa a chamada a função A120PvTran e A120PedAglut ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aL120PvTran   := A120PvTran(cA120Num,l120deleta)
				If aL120PvTran[1] 
					aL120PedAglut := A120PedAglut(cA120Num,l120deleta)
					If !aL120PedAglut[1]
						l120Inclui := .F.
						l120Altera := .F.
						l120Deleta := .F.
					EndIf
				Else
					l120Inclui := .F.
					l120Altera := .F.
					l120Deleta := .F.
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Ponto de Entrada para Continuar ou nao Inclusao/Alteracao.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If (l120Inclui .Or. l120Altera .Or. l120Deleta) .And. ExistTemplate("MT120GRV")
					lMt120GRV := ExecTemplate("MT120GRV",.F.,.F.,{cA120Num,l120Inclui,l120Altera,l120Deleta })
					If ValType( lMt120GRV ) == "L" .And. !lMt120GRV
						l120Inclui := .F.
						l120Altera := .F.
						l120Deleta := .F.
					EndIf
				EndIf

				If (l120Inclui .Or. l120Altera .Or. l120Deleta) .And. ExistBlock("MT120GRV")
					lMt120GRV := Execblock("MT120GRV",.F.,.F.,{cA120Num,l120Inclui,l120Altera,l120Deleta })
					If ValType( lMt120GRV ) == "L" .And. !lMt120GRV
						l120Inclui := .F.
						l120Altera := .F.
						l120Deleta := .F.
					EndIf
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Inicio para chamada da A120Grava() para Manutencao do PC / AE³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If l120Inclui .Or. l120Altera .Or. l120Deleta
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicializa a gravacao atraves das funcoes MATXFIS       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					MaFisWrite(1)

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Prepara a contabilizacao On-Line                        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lCtbOnLine .or. (l120Deleta .and. lLctPad65A) //Caso seja exclusao - estorno do rateio so podera ser online

						dbSelectArea("SX5")
						dbSetOrder(1)
						If MsSeek(xFilial()+"09COM")         			// Verifica o numero do lote contabil
							cLoteCtb := AllTrim(X5Descri())
						Else
							cLoteCtb := "COM "
						EndIf		

						If At(UPPER("EXEC"),X5Descri()) > 0  			// Executa um execblock
							cLoteCtb := &(X5Descri())
						EndIf				

						nHdlPrv:=HeadProva(cLoteCtb,"MATA120",Subs(cUsuario,7,6),@cArqCtb) // Inicializa o arquivo de contabilizacao
						If nHdlPrv <= 0
							HELP(" ",1,"SEM_LANC")
							lCtbOnLine := .F.
						EndIf

						If lCtbOnLine
							bCtbOnLine := {|x| nTotalCtb += IIf(x==1,DetProva(nHdlPrv,"652","MATA120",cLoteCtb,,,,,@c652,@aCT5),;
								IIf(!Empty(SC7->C7_DTLANC),DetProva(nHdlPrv,"657","MATA120",cLoteCtb,,,,,@c657,@aCT5),0)),;
								SC7->C7_DTLANC := dDataBase}
						EndIf

					EndIF

					If !l120Inclui

						Begin Transaction

							A120Grava(l120Deleta,cReajuste,nDesc1,nDesc2,nDesc3,cMsg,Substr(cTpFrete,1,1),bCtbOnLine,lCopia,NIL,aL120PvTran,aL120PedAglut,aHeadSCH,aColsSCH,@nHdlPrv,@nTotalCtb,cLoteCtb,lCtbOnLine)

							If SA2->(FieldPos("A2_IMPIP")) # 0 .And. !l120Deleta
								If (SA2->A2_IMPIP == '1') .Or. (SA2->A2_IMPIP $ '03 ' .And. SuperGetMV('MV_IMPIP',.F.,'3') == '1' )
									If FindFunction("ACDI10PD")
										ACDI10PD(cA120Num,.T.)
									ElseIf FindFunction("T_ACDI10PD")
										T_ACDI10PD(cA120Num,.T.)
								    EndIf
								EndIf
							EndIf

							EvalTrigger()

							While ( GetSX8Len() > nSaveSX8 )
								ConFirmSX8()
							EndDo

						End Transaction


					Else

						lGravaOk := A120Grava(l120Deleta,cReajuste,nDesc1,nDesc2,nDesc3,cMsg,Substr(cTpFrete,1,1),bCtbOnLine,lCopia,aRecnoSE2RA,aL120PvTran,aL120PedAglut,aHeadSCH,aColsSCH,@nHdlPrv,@nTotalCtb,cLoteCtb,lCtbOnLine)

						If SA2->(FieldPos("A2_IMPIP")) # 0 .and. !l120Deleta
							If (SA2->A2_IMPIP == '1') .or. (SA2->A2_IMPIP $ '03 ' .and. SuperGetMV('MV_IMPIP',.F.,'3') == '1' )
								If SuperGetMV('MV_IMPAUT',.F.,"1") <>  "0" .Or. !l120auto
								  	If FindFunction("ACDI10PD")
										ACDI10PD(cA120Num,.T.,l120auto .And. SuperGetMV('MV_IMPAUT',.F.,'1') == '2')
								  	ElseIf FindFunction("T_ACDI10PD")
										T_ACDI10PD(cA120Num,.T.,l120auto .And.SuperGetMV('MV_IMPAUT',.F.,'1') == '2')
								    EndIf
								EndIf
							EndIf
						EndIf

						If !lGravaOk

							Help(" ",1,"A120NAOREG")
							
							While ( GetSX8Len() > nSaveSX8 )
								RollBackSX8()
							EndDo

						Else

							EvalTrigger()

							While ( GetSX8Len() > nSaveSX8 )
								ConFirmSX8()
							EndDo

						EndIf

					EndIf

					If ExistBlock("MT120GOK")
						Execblock("MT120GOK",.F.,.F.,{cA120Num,l120Inclui,l120Altera,l120Deleta})
					EndIf
					
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		   			//³ cNumPCWS - Variavel utilizada na integracao com o RM Solum para   ³
		   			//³            recuperar o numero do PC gerada pela rotina Automatica.³
		   			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Type('cNumPCWS') <> "U"
						cNumPCWS := cA120Num
					EndIf 
					

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Envia os dados para o modulo contabil             ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lCtbOnLine .or. (l120Deleta .and. lLctPad65A)
						RodaProva(nHdlPrv,nTotalCtb)
						If nTotalCtb > 0
							If ( FindFunction( "UsaSeqCor" ) .And. UsaSeqCor() )
								cCodDiario := CTBAVerDia() 
								aCtbDia := {{"SC7",SC7->(RECNO()),cCodDiario,"C7_NODIA","C7_DIACTB"}}
							Else
							    aCtbDia := {}
							EndIf    
							cA100Incl(cArqCtb,nHdlPrv,1,cLoteCtb,lDigita,lAglutina,,,,,,aCtbDia)
						EndIf
					EndIf

				EndIf	
			
			ElseIf l120Altera .or. l120Deleta

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Recriar aprovação do pedido	³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
				PcoIniLan("000055")
				For nX:=1 to Len(aCols)
	
					If aCols[nX][Len(aHeader)] >0

						dbSelectArea("SC7")
						MsGoto(aCols[nX][Len(aHeader)])
						If SC7->C7_CONAPRO=="L"
							PcoDetLan('000055','01','MATA097')
						EndIf
					
					EndIf
				
				Next
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Recriar aprovação do pedido	³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
				If aCols[1][Len(aHeader)] >0
					dbSelectArea("SC7")
					MsGoto(aCols[1][Len(aHeader)])
					If SC7->C7_CONAPRO=="L"
						PcoDetLan('000055','02','MATA097')
					EndIf
				EndIf
					
			EndIf
            	 	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nTipoPed != 2
				PcoFinLan("000052")
			Else
				PcoFinLan("000053")
			EndIf
			If l120Altera .or. l120Deleta
				PcoFinLan("000055")
			EndIf
		EndIf
	EndIf

    If cPaisLoc $ "BRA|ANG|MEX" .and. nOpcA==0 .and. cCondPAdt="1" .and. nOpcx <> 4         
       	FPedAdtGrv("P", 2, cA120Num , aRecnoSE2RA,,,,aAdtPC,nOpcAdt)       	
       	If Len(aRecnoSE2RA)>0       	
			aAreaSE2 := GetArea()
	       	DbSelectArea("SE2")  
	       	If SE2->( DbGoTo( aRecnoSE2RA[1][2] ) ) 	//Exclusão deve ter o registro SE2 posicionado	                                 
				If !SE2->( Eof() ) 
					aExclPc := { 	{ "E2_PREFIXO" 	, SE2->E2_PREFIXO 	, NIL },;
			                	{ "E2_NUM"     	, SE2->E2_NUM     	, NIL },;
			                	{ "E2_FORNECE"  , SE2->E2_FORNECE   , NIL } }
				Endif
				MsExecAuto( { |x,y,z| FINA050(x,y,z)}, aExclPc,, 5)  // 5 - Exclusão				
				If lMsErroAuto
				    MostraErro()
				Endif
			Endif	    
		EndIf
    Endif
	SetKey( VK_F4,Nil ) 
	SetKey( VK_F5,Nil ) 
	SetKey( VK_F9,Nil )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Libera os bloqueios do SIGAPCO que nao foram efetivados   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTipoPed != 2
		PcoFreeBlq("000052",,,,,(l120Altera.And.nOpca!=1)/*lCancela*/)	
	Else
		PcoFreeBlq("000053",,,,,(l120Altera.And.nOpca!=1)/*lCancela*/)	
	EndIf
	
	PcoFreeBlq("000055",,,,,(l120Altera.And.nOpca!=1)/*lCancela*/)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Destrava os registros na aletaracao e exclusao            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While ( GetSX8Len() > nSaveSX8 )
		RollBackSX8()
	EndDo

	MsUnLockAll()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Destrava os registros utilizados na funcao A120PID        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ValType(aA120PID) == "A" .And. Len(aA120PID) > 0
		For nX := 1 to Len(aA120PID)			
			If nTipoPed != 2
				SC1->(MsGoto(aA120PID[nx]))
				If SimpleLock("SC1")		
					SC1->(MsRUnlock())
				Endif
			Else
				SC3->(MsGoto(aA120PID[nx]))
				If SimpleLock("SC3")		
					SC3->(MsRUnlock())
				Endif				
			Endif	
		Next nX
	Endif	

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Finaliza o uso das funcoes MATXFIS                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MaFisEnd()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Libera chaves obtidas por FreeForUse                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lQuery .And. Type( "bFiltraBRW" ) == "B" .And. Empty( SC7->( dbFilter() ) )
		Eval( bFiltraBRW )
		SC7->( dbSetOrder( 1 ) )
	EndIf

	FreeUsedCode()   
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto no final da rotina, para o usuario completar algum processo ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MT120FIM")
		Execblock("MT120FIM",.F.,.F.,{aRotina[nOpcX,4], cA120Num,nOpcA})
	EndIf

EndIf 


RestArea(aArea)
RestArea(aAreaSM0)    
Return(nOpcA)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120AfterH ³ Autor ³Alexandre Inacio Lemes³Autor ³28/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Acrescenta campos no aHeader construido pela FillGetDados   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Logica indicando se Rotina Automatica              ³±±
±±³          ³ ExpA1 = aHeader de Referencia utilizado na FillGetDados    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120AfterH(l120Auto,aHeaderX)

Local aAreaSX3 := SX3->(GetArea())

If l120Auto
	dbSelectArea("SX3")
	dbSetOrder(2)
	dbSeek("C7_TPOP")
	AADD(aHeaderX,{TRIM(X3Titulo()),SX3->X3_CAMPO,SX3->X3_PICTURE,SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,SX3->X3_USADO,SX3->X3_TIPO,SX3->X3_ARQUIVO,SX3->X3_CONTEXT } )
	dbSeek("C7_ORIGEM")
	AADD(aHeaderX,{TRIM(X3Titulo()),SX3->X3_CAMPO,SX3->X3_PICTURE,SX3->X3_TAMANHO,SX3->X3_DECIMAL,SX3->X3_VALID,SX3->X3_USADO,SX3->X3_TIPO,SX3->X3_ARQUIVO,SX3->X3_CONTEXT } )	
EndIf

RestArea(aAreaSX3)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120AfterC ³ Autor ³Alexandre Inacio Lemes³Data  ³28/12/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³A funcao trata a excecao na montagem do aCols pela FillGetDa³±±
±±³          ³dos tratando os campos que deverao ser alterados.           ³±±
±±³          ³Realiza a carga do aCols para a MatxFis.                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: aCols de Referencia para uso da funcao.              ³±±
±±³          ³ExpA2: Array contendo as referencias de Impostos da Tabela  ³±±
±±³          ³ExpL1: Logica indicando a opcao de Alteracao                ³±±
±±³          ³ExpL2: Logica indicando a opcao de Exclusao                 ³±±
±±³          ³ExpL3: Logica indicando a opcao de Copia                    ³±±
±±³          ³ExpL4: Logica condicional para continuar o processo.        ³±±
±±³          ³ExpC1: Variavel para Renumeracao dos itens do PC na Copia   ³±±
±±³          ³ExpL5: Indica se a Grade de Produtos esta sendo Utilizada.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: lContinua .T. ou .F.                            	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120AfterC(aColsX,aRefImpos,l120Altera,l120Deleta,lCopia,lContinua,cItCop,lGrade,l120Inclui)

Local nX := 0
Local nY := 0
Local nPosItGrd := GDFieldPos("C7_ITEMGRD")
Local cCpoValid := If(nTipoPed == 1,"C7_NUMSC/C7_ITEMSC/C7_DATPRF/C7_NUMCOT/C7_APROV/C7_QTDSOL/C7_RESIDUO/C7_QTDACLA/C7_CODED/C7_NUMPR","C7_DATPRF/C7_NUMCOT/C7_APROV/C7_RESIDUO/C7_CODED/C7_NUMPR")

Default l120Inclui:= .F.

If l120Altera .Or. l120Deleta
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trava os registros na alteracao e  exclusao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !SoftLock("SC7")
		lContinua := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o PC/AE pode ser excluido       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If l120Deleta .And. !MaCanDelPC("SC7")
		lContinua := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Registro esta Bloqueado.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lCopia
	SB1->(dbSetOrder(1))
	If SB1->(dbSeek(xFilial("SB1")+SC7->C7_PRODUTO))
		If !(lContinua := RegistroOk("SB1",.F.))
			Aviso(STR0141,STR0142+AllTrim(SB1->B1_COD)+" - '"+AllTrim(SB1->B1_DESC)+"'"+STR0143,{STR0111})//"O produto "##" encontra-se bloqueado. Libere o registro para efetuar a cópia."
		EndIf
	EndIf
EndIf

If lContinua
	For nY := 1 to Len(aHeader)
		If lCopia .And. !( Trim(aHeader[nY][2]) == "C7_ITEM" ) .And. Trim(aHeader[nY][2]) $ cCpoValid
			aColsX[Len(aColsX)][nY] := CriaVar(aHeader[nY][2],.T.)
		EndIf
		If lCopia .And. Trim(aHeader[nY][2]) == "C7_ITEM"
			If Alltrim(aColsX[Len(aColsX)][nPosItGrd]) == "001" .Or. Empty(aColsX[Len(aColsX)][nPosItGrd])	
				cItCop := Soma1(cItCop)
			Endif
			aColsX[Len(aColsX)][nY] := cItCop

		Endif
		If lCopia .And. Trim(aHeader[nY][2]) $ "C7_REC_WT"
			aColsX[Len(aColsX)][nY] := 0
		EndIf    
		If lCopia .And. Trim(aHeader[nY][2]) $ "C7_QUJE"
			aColsX[Len(aColsX)][nY] := 0
		EndIf		
	Next nY

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia a Carga do item nas funcoes MATXFIS  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If l120Inclui .And. !lCopia
		MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
	EndIf	
	
	MaFisIniLoad(Len(aColsX))
	For nX := 1 To Len(aRefImpos)
		MaFisLoad(aRefImpos[nX][3],SC7->(FieldGet(FieldPos(aRefImpos[nX][2]))),Len(aColsX))
	Next nX
	MaFisEndLoad(Len(aColsX),2)
	
EndIf

Return lContinua

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Produto³Revisor³Alexadre Inacio Lemes ³Data  ³27/07/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do produto digitado                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do produto                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³Dicionario de Dados - Campo:C7_PRODUTO                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Produto(cProduto)

Local aArea		 := GetArea()
Local cItem 	 := aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})]
Local cDescri	 := ""
Local lIncPrdCtr := SuperGetMv("MV_PRODCTR")
Local lGrade	 := MaGrade()
Local lReferencia:= .F.
Local lAchou     := .T.
Local lRet 		 := .T.
Local lAltprod   := iif(Type("lAltprod") == "L",lAltprod,.T. ) 
Local lProdCtb	 := SuperGetMv("MV_PRODCTB",.F.,.F.)    
Local nPosCodTab := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CODTAB"})
Local nPProduto  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nPGrade	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_GRADE"})
Local nPItGrd	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMGRD"})
Local nPRecno	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_REC_WT"})
Local nPQtd 	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosUM     := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_UM"}) 
Local nPosSegum  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_SEGUM"})  
Local nPosLocal  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_LOCAL"})  
Local nPosDesc   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_DESCRI"})  
Local nPosNumSC  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})  
Local nPosItSC   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})  
Local nPosCC     := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"})   
Local nPosConta  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CONTA"})    
Local nPosCLVL   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CLVL"})    
Local nPosItCta  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMCTA"})  
Local nPosTES    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TES"})    
Local nPosIPI    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_IPI"})     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao dos fontes      ³
//³ SIGACUS.PRW, SIGACUSA.PRX e SIGACUSB.PRX, aplicados no rpo do   |
//| cliente, assim verificando a necessidade de uma atualizacao     |
//| nestes fontes. NAO REMOVER !!!							        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(FindFunction("SIGACUS_V") .and. SIGACUS_V() >= 20050512)
	Final(STR0119) // Atualizar SIGACUS.PRX !!!
EndIf
If !(FindFunction("SIGACUSA_V") .and. SIGACUSA_V() >= 20050512)
	Final(STR0120) // "Atualizar SIGACUSA.PRX !!!"
EndIf
If !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20050512)
	Final(STR0121) // "Atualizar SIGACUSB.PRX !!!"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao do ATUALIZADOR  ³
//³ do dicionario do modulo de Compras necessario para o uso do     |
//| recurso de grade produtos no MP10 Relese I deverá ser retirado  |
//| no proximo Release da Versao quando o dicionario for Atualizado |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(FindFunction("UPDCOM01_V") .And. UPDCOM01_V() >= 20070807)
	Final(STR0135) // "Atualizar UPDCOM01_V.PRW ou checar o processamento deste UPDATE !!!"
EndIf

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.)// .T.=Permite preencher aCols /  .F.=Executando via VldHead()

cProdRef := cProduto

If Inclui
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o usuario tem permissao de inclusao. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
		If nTipoPed == 1 //Pedido de Compra
			lRet := MaAvalPerm(1,{cProduto,"MTA121",3})
		ElseIf nTipoPed == 2 //Autorizacao de Entrega
			lRet := MaAvalPerm(1,{cProduto,"MTA122",3})
		EndIf
		If !lRet
			Help(,,1,'SEMPERM')
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a grade esta ativa e se o produto digitado eh uma referencia³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGrade .And. !Empty(&(ReadVar()))

	lReferencia := MatGrdPrrf(@cProdRef)

	If (!lAltprod)
		Return .T.
	Endif

	If lGatilha	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta o AcolsGrade e o AheadGrade para este item     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oGrade:MontaGrade(n,cProdRef,.T.,,lReferencia,.T.)

		If ( lReferencia )
			If ( nPGrade > 0 )
				aCols[n][nPGrade] := "S"
				lReferencia := .T.
			EndIf

			aCols[n][nPQtd] := 0
			cDescri := oGrade:GetDescProd(cProdRef)
		Else
			If ( nPGrade > 0 )
				If aCols[n][nPGrade] == "S"
					aCols[n][nPProduto] := Pad(cProdRef, Len(SC7->C7_PRODUTO))
					aCols[n][nPGrade] := " "
					aCols[n][nPItGrd] := " "
				Endif				
			EndIf
		EndIf

	Endif

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Fornecedor x Produto possui bloqueio da Qualidade.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !lReferencia
	lRet := QieSitFornec(cA120Forn,cA120Loj,cProduto,.T.)
Endif

If Altera
	dbSelectArea("SC7")
	dbSetOrder(1)
	If MsSeek(xFilial("SC7")+cA120Num+cItem)
		If ( SC7->C7_ENCER == "E" .Or. SC7->C7_QUJE > 0 .Or. SC7->C7_QTDACLA > 0 )
			MaFisRef("IT_PRODUTO","MT120",SC7->C7_PRODUTO)
			Help(" ",1,"A120ALT")
			lRet := .F.
		ElseIf SC7->C7_RESIDUO == "S"
			MaFisRef("IT_PRODUTO","MT120",SC7->C7_PRODUTO)
			Help(" ",1,"A120RESID")
			lRet := .F.
		EndIf
	EndIf
EndIf

If lRet
	dbSelectArea("SB1")
	dbSetOrder(1)
	If MsSeek(xFilial()+cProdRef,.F.) .Or. lReferencia
		If (nTipoPed == 2 .And. SB1->B1_CONTRAT <> "S") .Or. (nTipoPed == 1 .And. SB1->B1_CONTRAT == "S" .And. !lIncPrdCtr)
			If SB1->B1_CONTRAT <> "A".And.!lReferencia
				If nTipoPed == 2
					Help(" ",1,"A125CONTR")
				Else
					Help(" ",1,"A120CONTR")
				EndIf
				lRet := .F.
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o Produto tem Fornecedor exclusivo(Canal).       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet .And. SB1->B1_MONO=="S" .And. SB1->B1_PROC != ca120forn .And. !lReferencia
			Help(" ",1,"A12020")
			lRet := .F.
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o Registro esta Bloqueado.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRet .And. !RegistroOk("SB1") .And. !lReferencia
			lRet := .F.
		EndIf

		If lRet

			cDescri := If(lReferencia, oGrade:GetDescProd(cProdRef), SB1->B1_DESC )

			If mv_par02 == 2
				dbSelectArea("SB5")
				dbSetOrder(1)
				MsSeek(xFilial()+cProdRef,.F.)
				If !Empty(B5_CEME)
					cDescri := B5_CEME
				EndIf
			EndIf
			dbSelectArea("SB1")
			
			If !lReferencia
				aCols[N][nPosUM]    := SB1->B1_UM    // Unidade de medida
				aCols[N][nPosSegum] := SB1->B1_SEGUM // Segunda Unidade
				If nPosIPI <> 0
					aCols[N][nPosIPI]   := SB1->B1_IPI   // Percentual de IPI
				Endif	
				aCols[N][nPosLocal] := RetFldProd(SB1->B1_COD,"B1_LOCPAD")
				
				If nPosCC <> 0 .And. nPosCLVL <> 0 .And. nPosConta <> 0 .And. nPosItCta <> 0       
				
					If !lProdCtb   				
						//MAAtuField ira verificar se a ordem co C7_CC vem primeiro que o C7_PRODUTO      |
						//caso o cliente possua os campos na ordem padrao a funcao ira retornar semre .T. |
						if MAAtuField("C7_PRODUTO","C7_CC",aCols[N][nPosCC],"SC7") 
							aCols[N][nPosCC]:= IIf(Empty(Alltrim(aCols[N][nPosCC]))   ,SB1->B1_CC     ,aCols[N][nPosCC])
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Os campos contabeis serao vinculados da tabela SB1 (se estiverem  ³
						//³preenchidos no Produto) somente se aCols do PC pertinentes a esses³
						//³ campos estiverem vazios, pois esse processo tem como finalidade  ³
						//³priorizar o conteudo digitado pelo usuario no proprio PC          ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
						aCols[N][nPosCLVL]  := IIf(Empty(Alltrim(aCols[N][nPosCLVL])) ,SB1->B1_CLVL   ,aCols[N][nPosCLVL])
						aCols[N][nPosConta] := IIf(Empty(Alltrim(aCols[N][nPosConta])),SB1->B1_CONTA  ,aCols[N][nPosConta])
						aCols[N][nPosItCta] := IIf(Empty(Alltrim(aCols[N][nPosItCta])),SB1->B1_ITEMCC ,aCols[N][nPosItCta])
					Else  
						//MAAtuField ira verificar se a ordem co C7_CC vem primeiro que o C7_PRODUTO      |
						//caso o cliente possua os campos na ordem padrao a funcao ira retornar semre .T. |
						if MAAtuField("C7_PRODUTO","C7_CC",aCols[N][nPosCC],"SC7") 
							aCols[N][nPosCC]:= IIf(!Empty(SB1->B1_CC)   ,SB1->B1_CC     ,aCols[N][nPosCC])
						Endif
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Os campos contabeis serao vinculados da tabela SB1 (se estiverem  ³
						//³preenchidos no Produto) somente se aCols do PC pertinentes a esses³
						//³ campos estiverem vazios, pois esse processo tem como finalidade  ³
						//³priorizar o conteudo digitado pelo usuario no proprio PC          ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
						aCols[N][nPosCLVL]  := IIf(!Empty(SB1->B1_CLVL)  ,SB1->B1_CLVL   ,aCols[N][nPosCLVL])
						aCols[N][nPosConta] := IIf(!Empty(SB1->B1_CONTA) ,SB1->B1_CONTA  ,aCols[N][nPosConta])
						aCols[N][nPosItCta] := IIf(!Empty(SB1->B1_ITEMCC),SB1->B1_ITEMCC ,aCols[N][nPosItCta])
					
					EndIf
	            EndIf
	            
	            If Empty(aCols[N][nPosTES])
    				aCols[N][nPosTES] := RetFldProd(SB1->B1_COD,"B1_TE")
    	 	    Else
    	 	    	aCols[N][nPosTES] := If( !Empty(RetFldProd(SB1->B1_COD,"B1_TE")),RetFldProd(SB1->B1_COD,"B1_TE"),aCols[N][nPosTES])
    	 	    EndIf
    	 	    
    	 	    FillCTBEnt("SB1")
    	 	    
				If !Empty(aCols[N][nPosTES])
					MaFisAlt("IT_TES",aCols[N][nPosTES],N)
				EndIf
			Else
				If MatOrigGrd() == "SB4" 
					aCols[N][nPosUM]    := SB4->B4_UM    // Unidade de medida
					aCols[N][nPosSegum] := SB4->B4_SEGUM // Segunda Unidade
					If nPosIPI <> 0
						aCols[N][nPosIPI]   := SB4->B4_IPI   // Percentual de IPI
					Endif	
					aCols[N][nPosLocal] := If(Empty(aCols[N][nPosLocal]), SB4->B4_LOCPAD, aCols[N][nPosLocal])
					
					If cPaisLoc <> "BRA"
						aCols[N][nPosTES] := If(Empty(aCols[N][nPosTES]), SB4->B4_TE, aCols[N][nPosTES])
						If !Empty(aCols[N][nPosTES])
							MaFisAlt("IT_TES",aCols[N][nPosTES],N)
						EndIf
					EndIf
				ElseIf MatOrigGrd() == "SBQ" 
					aCols[N][nPosUM]    := SBR->BR_UM    // Unidade de medida
					aCols[N][nPosLocal] := If(Empty(aCols[N][nPosLocal]), SBR->BR_LOCPAD, aCols[N][nPosLocal])
				EndIf
			EndIf
			
			A100SegUm()

			If lReferencia .And. cPaisLoc == "BRA"
				MaFisAlt("IT_ALIQIPI",aCols[N][nPosIPI],N)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Carrega a Tabela de Preco se a mesma estiver informada no cadastro Produto X Fornecedor³
			//³e for valida conforme a condicao de pagamento informada no cabecalho do Pedido Compras.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
			If nPosCodTab > 0
				dbSelectArea("SA5")
				dbSetOrder(1)
				lAchou := MsSeek(xFilial("SA5")+cA120Forn+cA120Loj+cProduto,.F.)
				If !lAchou .And. lReferencia
					DbSelectarea("SA5")
					Dbsetorder(9)
					lAchou := MsSeek(Xfilial("SA5")+cA120Forn+cA120Loj+cProdRef,.F.)
				Endif	
				If lAchou
					If !Empty(SA5->A5_CODTAB)
						If MaVldTabCom(cA120Forn,cA120Loj,SA5->A5_CODTAB,cCondicao,/*cHelp*/,dA120Emis)
							aCols[n][nPosCodTab] := SA5->A5_CODTAB
							A120Tabela()
						EndIf
					Else
						lAchou := .F.
					EndIf
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Carrega a Tabela de Preco se nao estiver informada no cadastro Produto X Fornecedor	  ³
				//³mas existe no cadastro de Grupo x Fornecedor valida conforme cond. de pagamento do PC  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ					
				If !lAchou
					dbSelectArea("SB1")
					dbSetOrder(1)
					If lReferencia
						MsSeek(xFilial("SB1")+cProdRef)
					Else
						MsSeek(xFilial("SB1")+cProduto)					
					EndIf
					cGrProd:= SB1->B1_GRUPO
                    
					If !Empty(cGrProd)
						dbSelectArea("SAD")
						dbSetOrder(1)
						lAchou:= MsSeek(xFilial("SAD")+cA120Forn+cA120Loj+cGrProd,.F.)
						If lAchou
							If !Empty(SAD->AD_CODTAB)
								If MaVldTabCom(cA120Forn,cA120Loj,SAD->AD_CODTAB,cCondicao,/*cHelp*/,dA120Emis)
									aCols[n][nPosCodTab] := SAD->AD_CODTAB
									A120Tabela()
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf

			If Empty(aCols[N][nPosNumSC]) .And. Empty(aCols[N][nPosItSC]) .And. nPosDesc > 0
				If Len(aCols[N][nPosDesc]) > Len(cDescri)
					aCols[N][nPosDesc] := cDescri+Space(Len(aCols[N][nPosDesc])-Len(cDescri))
				Else
					aCols[N][nPosDesc] := SubStr(cDescri,1,Len(aCols[N][nPosDesc]))
				EndIf
			EndIf

		EndIf
	Else
		Help("  ",1,"REGNOIS")
		lRet := .F.
	EndIf

EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Quant³ Autor ³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao da quantidade digitada.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Quantidade digitada                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Dicionario de Dados - Campo:C7_QUANT                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Quant(nQuant,nEvento)

Local aArea		:= GetArea()
Local cItem 	:= aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})]
Local nPosPrc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosNumSc := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItSc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosIPI   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_IPI"})
Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])== "C7_PRODUTO"})
Local lAltPed   := If(SuperGetMv("MV_ALTPEDC")=="S",.T.,.F.)
Local lRet 		:= .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O parametro MV_CONTQTD e usado para restringir a quantidade³
//³ do item na autorizacao de entrega para que nao ultrapasse  ³
//³ a quantidade original do contrato de parceria vinculado    ³
//³ o DEFAULT do parametro e 2 - desativado                    ³
//³ MV_CONTQTD = 1 - Restringe a QTD da AE ao MAXIMO da QTD    ³
//³ que consta no contrato de parceria original.               ³
//³ MV_CONTQTD = 2 - Desativa a Restricao (DEFAULT)            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lContQtd  := ( GetNewPar( "MV_CONTQTD", "2" ) == "1" )

DEFAULT nEvento := 1
lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead()

If Altera
	If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
		If nTipoPed == 1 //Pedido de Compra
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA121",4})
		ElseIf nTipoPed == 2 //Autorizacao de Entrega
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA122",4})
		EndIf
		If !lRet
			Help(,,1,'SEMPERM')
		EndIf
	EndIf
	
	If lRet
		dbSelectArea("SC7")
		dbSetOrder(1)
		If MsSeek(xFilial("SC7")+cA120Num+cItem)
			Do Case
			Case (SC7->C7_QUJE >= SC7->C7_QUANT) .And. !lAltPed
				Help(" ",1,"A120ALTPC")
				lRet := .F.
			Case (SC7->C7_QUJE > nQuant .Or. SC7->C7_QTDACLA > nQuant)
				Help(" ",1,"A120MAIO")
				lRet := .F.
			Case SC7->C7_RESIDUO == "S"
				Help(" ",1,"A120RESID")
				lRet := .F.
			Case nTipoPed == 2 .and. lContQtd
				dbSelectArea("SC3")
				dbSetOrder(1)
				If MsSeek(xFilial()+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
					If nQuant > SC3->C3_QUANT - (SC3->C3_QUJE - SC7->C7_QUANT)
						Aviso(STR0098,STR0112,{STR0111})
						lRet := .F.
					EndIf
				EndIf
			EndCase
		EndIf
	EndIf
	
	//Quantidade nao podera ser alterado se pedido estiver vinculado a um edital	
	If lRet .And. SC7->(FieldPos("C7_CODED")) > 0 
	    If !Empty(SC7->C7_CODED) .And. SC7->C7_QUANT <> M->C7_QUANT 
	  		Aviso(STR0175,STR0185,{"OK"}) //-- Este campo não pode ser alterado pois este item esta vinculado a um Edital.
			lRet := .F.
		EndIf                                                                                       
	EndIf
EndIf

If inclui .And. nTipoPed == 2 .and. lContQtd
	dbSelectArea("SC3")
	dbSetOrder(1)
	If MsSeek(xFilial()+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
		If nQuant > (SC3->C3_QUANT-SC3->C3_QUJE)
			Aviso(STR0098,STR0112,{STR0111})
			lRet := .F.
		EndIf
	EndIf
EndIf

If lRet .And. lGatilha
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade referente a Solicitacao      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	a120QtdSol(nQuant,nEvento)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade da Segunda UM                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	A100SegUm()
	If nEvento == 1
		MaFisAlt("IT_VALMERC",NoRound(aCols[n][nPosPrc]*M->C7_QUANT,TamSx3("C7_TOTAL")[2]),n)
	Endif
EndIf
     
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿    
//³ Calculo do Desconto  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet
	A120CALCDESC()
EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Preco³ Autor ³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao do preco unitario digitado                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Preco digitado                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Dicionario de Dados - Campo:C7_PRECO                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Preco(nPreco)

Local aArea		 := GetArea()
Local cAltPrcCtr := A120PrCom()
Local cItem 	 := aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})]
Local nPosNumSc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItSc   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])== "C7_PRODUTO"})
Local lAltPed    := IIF(SuperGetMv("MV_ALTPEDC")=="S",.T.,.F.)
Local lRet 		 := .T.

If Altera
	If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
		If nTipoPed == 1 //Pedido de Compra
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA121",4})
		ElseIf nTipoPed == 2 //Autorizacao de Entrega
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA122",4})
		EndIf
		If !lRet
			Help(,,1,'SEMPERM')
		EndIf
	EndIf
	
	If lRet
		dbSelectArea("SC7")
		dbSetOrder(1)
		If MsSeek(xFilial("SC7")+cA120Num+cItem)
			If (SC7->C7_QUJE > 0 .And. SC7->C7_PRECO <> nPreco) .And. !lAltPed
				Help(" ",1,"A120ALTPC")
				lRet := .F.
			ElseIf SC7->C7_RESIDUO == "S"
				Help(" ",1,"A120RESID")
				lRet := .F.
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o preco digitado esta divergente do Contrato de Parceria ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. nTipoPed == 2 .And. cAltPrcCtr <> "0" .And. !Empty(aCols[n][nPosNumSC]) .And. !Empty(aCols[n][nPosItSC])
	SC3->(dbSetOrder(1))
	If SC3->(MsSeek(xFilial("SC3")+aCols[n][nPosNumSC]+aCols[n][nPosItSC]))
		If cAltPrcCtr $ "4#5#6"
			If SC3->C3_PRECO <> nPreco
				Aviso(STR0102,STR0126,{STR0111}, 2 ) //-- "Atencao"###""PreÇo informado divergente do Contrato de Parceria, verifique o conteúdo do parâmetro MV_ALTPRCC""###"Ok"###
				lRet := .F.
			EndIf
		EndIf
	EndIf
EndIf

If lRet
	A120CalcDesc()
EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Total³ Autor ³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao do valor total digitado                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Valor Total                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Dicionario de Dados - Campo:C7_TOTAL                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Total(nTotal)

Local aArea		:= GetArea()
Local cItem 	:= aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})]
Local nQuant	:= aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})]
Local nPreco	:= aCols[n][aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})]
Local nPQtSegUm := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QTSEGUM"})
Local nPQuant   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPPreco   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nDif		:= 0
Local lAltPed   := IIF(SuperGetMv("MV_ALTPEDC")=="S",.T.,.F.)
Local lRet 		:= .T.

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols /  .F.=Executando via VldHead()

If lGatilha

	Do Case
	Case ( cPaisLoc == "BRA" )
		nDif := NoRound(nQuant*nPreco,2)-nTotal
	Case ( cPaisLoc $ "CHI|PAR" ) .And. ( nMoedaPed = 1 )
		nDif := Round( (nQuant*nPreco), MsDecimais(1) ) - Round( nTotal, MsDecimais(1) )
	Otherwise
		nDif := NoRound(nQuant*nPreco,MsDecimais(nMoedaPed))-NoRound(nTotal,MsDecimais(nMoedaPed))
	EndCase

	If nDif < 0
		nDif := -(nDif)
	EndIf

	// Total pela segunda unidade de medida
	If GetMv("MV_CALC2UM")		// indica se ira recalcular o valor unitario pelo total caso exista 2 unidade de medida
		If nPQtSegUm > 0
			If aCols[n][nPQtSegUm] > 0 .And. nDif > 0.49
				aCols[n][nPPreco] := nTotal / aCols[n][nPQuant]
				If	MaFisFound("IT",n)
					MaFisAlt("IT_PRCUNI",aCols[n][nPPreco],n)
				EndIf
				nDif := Abs(NoRound(aCols[n][nPQuant]*aCols[n][nPPreco],2) - nTotal)
			EndIf
        EndIf 
	EndIf

	If ( Type("l120Auto") == "U" .Or. !l120Auto )
		If Altera
			dbSelectArea("SC7")
			dbSetOrder(1)
			If MsSeek(xFilial("SC7")+cA120Num+cItem)
				Do Case
				Case ( SC7->C7_QUJE>0 .And. nTotal <> SC7->C7_TOTAL ) .And. !lAltPed
					Help(" ",1,"A120ALTPC")
					lRet := .F.
				Case nDif > 0.09
					Help(" ",1,"A12003")
					lRet := .F.
				Case nDif > 0.09 .And. SC7->C7_RESIDUO == "S"
					Help(" ",1,"A120RESID")
					lRet := .F.
				EndCase
			EndIf
		Else
			If nDif > 0.09
				Help(" ",1,"A12003")
				lRet := .F.
			EndIf
		EndIf
	EndIf

EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120FilEnt³ Rev.  ³ Edson Maricate       ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verif. existencia da Filial para Entrega do Pedido em SM0. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A120FilEnt(ExpC1)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 := Codigo da Filial de Entrega                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120, MatA150                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120FilEnt(cFilialEnt)

Local aArea		:= GetArea()

Local lRet 		:= .T.
Local cFilBk	:=	cFilAnt
Local cNEmpBk	:=	cNumEmp
Local cEstent   := ""
Local aDadosFil := {}
Local nRecno    := 0

Do Case                
Case FWModeAccess(aArea[1])=="E"  .And. FWModeAccess("SC7")=="C"
	Help(" ",1,"FILENTC")
	lRet := .T.
Case FWModeAccess(aArea[1]) == "C" .And. FWModeAccess("SC7")=="C"
	lRet := .T.
Case FWModeAccess(aArea[1]) == "C" .And. !FWModeAccess("SC7")=="E"
	Help(" ",1,"FILENTE")
	lRet := .F.
OtherWise
	aDadosFil := FWArrFilAtu(,cFilialEnt)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Procura pelo Numero da Empresa e Filial para Entrega.        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(aDadosFil)
		Help(" ",1,"C7_FILENT")
		lRet := .F.
	EndIf
	If lRet
		cFilAnt	:= aDadosFil[SM0_FILIAL]
		cNumEmp	:= aDadosFil[SM0_EMPRESA]
		nRecno  := aDadosFil[SM0_RECNO]
		If MaFisFound("NF") 
			SM0->(DbGoto(nRecno))  
			cEstent := SM0->M0_ESTENT
			MaFisAlt("NF_UFDEST",cEstent)
			MaFisToCols(aHeader,aCols,,"MT120")
		EndIf
	EndIf
EndCase

cFilAnt	:=	cFilBk
cNumEmp	:=	cNEmpBk
RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Refresh³ Autor ³ Edson Maricate       ³ Data ³ 10.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa o Refresh do Folder.                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array com os valores do Rodape                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Refresh(aValores)

Local aArea	:= GetArea()

aValores[VALMERC]	:= MaFisRet(,"NF_VALMERC")
aValores[VALDESC]	:= MaFisRet(,"NF_DESCONTO")
aValores[FRETE]		:= MaFisRet(,"NF_FRETE")
aValores[TOTPED]	:= MaFisRet(,"NF_TOTAL")
aValores[SEGURO]	:= MaFisRet(,"NF_SEGURO")
aValores[VALDESP]	:= MaFisRet(,"NF_DESPESA")

If cPaisLoc == "PTG"
	aValores[NTRIB]	:= MaFisRet(,"NF_DESNTRB")
	aValores[TARA]	:= MaFisRet(,"NF_TARA")
Endif

aValores[TOTF1]	:= aValores[VALDESP]+aValores[SEGURO]+Iif(cPaisLoc=="PTG",aValores[NTRIB]+aValores[TARA],0)
aValores[TOTF3]	:= aValores[FRETE]+aValores[SEGURO]+aValores[VALDESP]+Iif(cPaisLoc=="PTG",aValores[NTRIB]+aValores[TARA],0)
aValores[IMPOSTOS]	:= aClone(MaFisRet(,"NF_IMPOSTOS"))

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120FRefre³ Autor ³ Edson Maricate        ³ Data ³ 10.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa o refresh nos objetos do array.                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array contendo os Objetos                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120FRefresh(aObj)

Local nX := 0

For nX := 1 to Len(aObj)
	aObj[nX]:Refresh()
Next nX

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120CabOk ³ Autor ³ Edson Maricate        ³ Data ³ 10.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Executa  as validacoes dos Gets.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Expo1 = Objeto da condicao de pagamento                    ³±±
±±³          ³ Expo2 = Objeto do codigo do fonecedor                      ³±±
±±³          ³ Expo3 = Objeto da loja do fornecedor                       ³±±
±±³          ³ ExpA1 = Array contendo os impostos suportados              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120CabOk(oCond,oca120Forn,oca120Loj,aRelImp)

Local lRet 	:= .T.
Local lGrade  := MaGrade()

If !A120Forn(cA120Forn,,,.F.)
	If oca120Forn<>Nil
		oca120Forn:SetFocus()
	EndIf
	lRet := .F.
EndIf

If lRet .And. !A120Forn(cA120Forn,cA120Loj,,.F.) 
	If oca120Loj<>Nil
		oca120Loj:SetFocus()
	EndIf
	lRet := .F.
EndIf

If lGrade
	dbSelectArea("SA2")
	dbSetOrder(1)
	If dbSeek(xFilial("SA2")+ca120Forn+ca120Loj)
		MaFisAlt("NF_NATUREZA", SA2->A2_NATUREZ)
	EndIf
EndIf

If lRet
	If !MaFisFound("NF")
		MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRelImp,,.T.)
		If cFilialEnt <> Criavar("C7_FILENT")
			A120FilEnt(cFilialEnt)
		EndIf
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120VFold ³ Autor ³ Edson Maricate        ³ Data ³ 10.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Exucuta o calculo de valores para campos Totalizadores.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Referencia ( vide MATXFIS)                         ³±±
±±³          ³ ExpC2 = Valor da Referencia                                ³±±
±±³          ³ ExpL3 = .T./.F.- Executa o Refresh do folder               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Campos Totalizadores do MATA120                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120VFold(cReferencia,xValor,lRefre)

Local aArea	   := GetArea()
Local lRetorno := .T.

If ValType(xValor)== "N" .And. xValor < 0
	lRetorno := .F.
EndIf

If lRetorno

	If lRefre == Nil
		lRefre := .T.
	EndIf

	If MaFisFound("NF")
		MaFisAlt(cReferencia,xValor)
		If cPaisLoc == "ARG" .And. (cReferencia=="NF_CODCLIFOR" .Or.cReferencia=="NF_LOJA")
			SA2->(DbSetOrder(1))
			SA2->(MsSeek(xFilial("SA2")+MaFisRet(,"NF_CODCLIFOR")+MaFisRet(,"NF_LOJA")))
			MaFisAlt("NF_SERIENF",LocXTipSer("SA2",MVNOTAFIS))
		Endif
		MaFisToCols(aHeader,aCols,,"MT120")
		If lRefre
			Eval(bRefresh)
			Eval(bGDRefresh)
		EndIf
	EndIf
EndIf

RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120ZeraDesc³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Zera os percentuais de desconto do Rodape.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120ZeraDesc()

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.)// .T.=Permite preencher aCols /  .F.=Executando via VldHead()

If lGatilha
	Eval(bZeraDesc)
	Eval(bFolderRefresh)
Endif

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120ToFC030 ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Compatibilizacao de variaveis utilizadas no FINC030.        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120TOFC030()

Local aArea	:= GetArea()

PRIVATE cCadastro  := STR0060 //"Consulta Posi‡„o Fornecedores"
PRIVATE nVlGeralNf := 0
PRIVATE nJuros     := 0
PRIVATE nTotal1    := 0 
PRIVATE nTotal2    := 0
PRIVATE nTotal3    := 0
PRIVATE aTotal5    := {0.00,0,0.00,0}
PRIVATE dBaixa     := dDataBase

M->nJuros := 0

If Pergunte("FIC030",.T.)
	Finc030("Fc030Con")
EndIf
Pergunte("MTA120",.F.)

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120VldCombo³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao do Combo utilizado para o tipo de Frete.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Tipo de Frete                                      ³±±
±±³          ³ ExpA1 = Array contendo os valores do rodape                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120VldCombo(cTpFrete,aValores)

If Substr(cTpFrete,1,1)!="C" 
	aValores[FRETE] := 0
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120VDesc  ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao e calculo do Desconto.                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 : Primeiro Valor do desconto                         ³±±
±±³          ³ ExpN2 = Segundo Valor do Desconto                          ³±±
±±³          ³ ExpN3 = Terceiro Valor do Desconto                         ³±±
±±³          ³ ExpA1 = Array contendo os valores do rodape                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120VDesc(nDesc1,nDesc2,nDesc3,aValores)

Local aArea	  	:= GetArea()
Local cReadVar  := ReadVar()
Local nTotal  	:= MaFisRet(,"NF_VALMERC")
Local nPosDesc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_DESC"})
Local lDescItem	:= .F.
Local lRet 		:= .T.
Local lOpc		:= .T.

If nDesc1+nDesc2+nDesc3 > 0
	aEval(aCols,{|x| lDescItem := If(!Empty(x[nPosDesc]),.T.,lDescItem)})
	If lDescItem .And. !l120Auto
		lOpc := MsgYesNo(STR0058,STR0059)
	EndIf
	If lOpc
		aEval(aCols,{|x| x[nPosDesc]:= 0 })
		aValores[VALDESC] := (CalcDesc(nTotal,nDesc1,nDesc2,nDesc3))
		A120VFold("NF_DESCONTO",aValores[VALDESC],.F.)
		MaFisToCols(aHeader,aCols,,"MT120")
		Eval(bGDRefresh)
		Eval(bFolderRefresh)
	Else
		lRet := .F.
	EndIf
	If nDesc1 < 0 .Or. nDesc2 < 0 .Or. nDesc3 < 0
		lRet := .F.
	EndIf
ElseIf !l120Auto
	If ( nDesc1 < 0 .Or. nDesc2 < 0 .Or. nDesc3 < 0 )
		aValores[VALDESC] := 0
	EndIf	
	If "NDESC" $ cReadVar
		aEval(aCols,{|x| x[nPosDesc]:= 0 })
		A120VFold("NF_DESCONTO",aValores[VALDESC],.F.)
		MaFisToCols(aHeader,aCols,,"MT120")
		Eval(bGDRefresh)
		Eval(bFolderRefresh)
	EndIf
	If nDesc1 < 0 .Or. nDesc2 < 0 .Or. nDesc3 < 0
		lRet := .F.
	EndIf
EndIf

RestArea(aArea)

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³  A120F4    ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Monta uma tela com as Solicitacoes/Contratos em Aberto      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Expo1 : Objeto da condicao de pagamento                    ³±±
±±³          ³ Expo2 = Objeto da descricao da condicao de pagamento       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120F4(oCond,oDescCond,aHeadSCH,aColsSCH)

Local aArea	    := GetArea()
Local aAreaSC1	:= SC1->(GetArea())
Local aAreaSC3	:= SC3->(GetArea())
Local aAreaSB1	:= SB1->(GEtArea())
Local aGrupo	:= UsrGrComp(RetCodUsr())
Local aCamposC1	:= {"C1_NUM","C1_ITEM","C1_PRODUTO","C1_QUANT","C1_DESCRI","C1_GRADE","C1_ITEMGRD"}
Local aCamposC3	:= {"C3_NUM","C3_ITEM","C3_PRODUTO","C3_QUANT","C3_OBS","C3_GRADE","C3_ITEMGRD"}
Local aCampos	:= If(nTipoPed!=2,aCamposC1,aCamposC3)
Local aButEnc	:= {{"relatorio",{||a120VisuSC(aSavRec[oQual:nAt])},STR0007}}	//"Visualizar"
Local aHeadCpos	:= {" "}
Local aHeadUser := {}
Local aNew      := {}
Local aLineNew  := {}
Local aNewF4    := {}
Local aLineF4   := {}
Local aArrayF4	:= {}
Local aSavRec	:= {}
Local aFiltro   := {}
Local aFilUsr   := {}
Local bWhile    := { || .T. }
Local bIf       := { || .T. }
Local nPosQtSol	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QTDSOL"})
Local nPosNumSc := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})
Local nPosItSc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nPosPrc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosQuant := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosDsc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_VLDESC"})
Local nPosTotal	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"})
Local nPosGrade	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_GRADE"})
Local nPosItGra	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMGRD"})
Local nPosCC	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"})    
Local nPosCodTab:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CODTAB"})
Local nOpcA     := 0
Local nSavQual  := 0
Local nX        := 0
Local nY        := 0
Local nExistIT  := 0
Local nInclui   := 0 
Local nLin      := 0
Local cVar		:= aCols[n][nPosCod]    
Local cCadastro := ""
Local cAliasQry := ""
#IFDEF TOP
	Local cQuery := ""
#ENDIF
Local cDescr    := ""
Local cLine     := ""
Local bLine     := ""
Local cItem     := Strzero(1,len(SC7->C7_ITEM))
Local oOk		:= LoadBitMap(GetResources(), "LBOK")
Local oNo		:= LoadBitMap(GetResources(), "LBNO")
Local oDlg
Local oQual
Local lSolic	:= IF(SuperGetMv("MV_RESTCOM")=="S",.T.,.F.)
Local lQuery    := .F.
Local lAprovado := .T.
Local lRet      := .T.
Local bKeyF4	:=  SetKey( VK_F4 )
Local bKeyF5	:=  SetKey( VK_F5 )
Local cChave 	:= " "
Local uMT120Lct 
Local nTamAcols

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O parametro MV_CONTVLD e usado para validar a data final do³
//³ contrato de parceria quando o mesmo e vinculado a Autoriza ³
//³ cao de entrega, deve ser criado com DEFAULT = 2 para nao   ³
//³ ativar o filtro pela data do contrato, conteudos a seguir :³
//³ MV_CONTVLD = 1 - Filtra os contratos de parceria com data  ³
//³ final menor que a data base do sistema                     ³
//³ MV_CONTVLD = 2 - Desativa o filtro (DEFAULT)               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lContVld  := ( GetNewPar( "MV_CONTVLD", "2" ) == "1" ) 
Local lMT120VIT := ExistBlock('MT120VIT')
Local aMt120VIT 
Local cFlag     := " "
Local cProdRef  := " "
Local i
Local lGrade    := MaGrade()
Local aRefImpos := MaFisRelImp('MT100',{"SC7"})
Local lReferencia := .F.
Local aAMarcaF4   := {}
Local nPrazo      := 0     
Local nLinFim	:= 86
Local aRatFin     := {}
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local lA120F42	:= .F.
Default aHeadSCH := {}
Default aColsSCH := {}

Static lMt120C1D  := Nil, lMt120C1C := Nil

SetKey( VK_F4,Nil )
SetKey( VK_F5,Nil )

If lMt120C1D == Nil .Or. lMt120C1C == Nil
	lMt120C1D := ExistBlock("MT120C1D")
	lMt120C1C := ExistBlock("MT120C1C")
Endif

If cPaisLoc <> "BRA"
	If (ExistBlock("A120F4CP"))
		ExecBlock("A120F4CP",.F.,.F.)
		lRet := .F.
	EndIf
EndIf     

//Guarda a linha atual //
nLin:=N
	
If !Empty(cVar) .And. lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada para manipulação dos campos do array aCols da SC e Contrato de Parceria (ITENS)		³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
	
 	If lMT120VIT
  		aMt120VIT  := ExecBlock( "MT120VIT", .F., .F.,{aCampos,nTipoPed})     
 		If ( ValType(aMt120VIT ) == 'A' )
 			aCampos := aClone(aMt120VIT)
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o Header com os titulos do MsSelect             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX3")
	dbSetOrder(2)
	For nx	:= 1 to Len(aCampos)
		If MsSeek(aCampos[nx])
			AADD(aHeadCpos,AllTrim(X3Titulo()) )
		EndIf
	Next      
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o filtro de usuario                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "A120F4FI" )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Estrutura do array                                           ³
		//³ 1 - String - Filtro no SC1 para ISAM ( Sintaxe xBase )       ³
		//³ 2 - String - Filtro no SC1 para SQL  ( Sintaxe SQL   )       ³
		//³ 3 - String - Filtro no SC3 para ISAM ( Sintaxe xBase )       ³
		//³ 4 - String - Filtro no SC3 para SQL  ( Sintaxe SQL   )       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aFilUsr := 	ExecBlock( "A120F4FI", .F., .F. )				
		If ValType( aFilUsr ) == "A"
			aFiltro := aClone(aFilUsr)
		EndIf
	EndIf 	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o produto e uma referencia de grade               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lGrade
		cProdRef := cVar
		lReferencia := MatGrdPrrf(@cProdRef)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o arquivo a ser pesquisado                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lReferencia
		If nTipoPed != 2
			dbSelectArea("SC1")
			dbgotop()
			dbSetOrder(2)
			If MsSeek(xFilial("SC1")+cVar)
				bFiltro := { || .T. }

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Adiciona filtro de usuario para ISAM                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty( aFiltro )
					If ValType( aFiltro[ 1 ] ) == "C"
						bFiltro := { || &( aFiltro[ 1 ] ) }
					EndIf 	
				EndIf

				#IFDEF TOP

					If TcSrvType() <> "AS/400"

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Bloco para SQL                                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						cAliasQry := CriaTrab( , .F. )

						cQuery := ""

						cQuery += "SELECT R_E_C_N_O_ SC1RECNO FROM " + RetSqlName( "SC1" ) + " "
						cQuery += "WHERE "
						cQuery += "C1_FILIAL='"  + xFilial( "SC1" ) + "' AND "
						cQuery += "C1_PRODUTO='" + cVar             + "' AND "
						If SC1->(FieldPos("C1_ACCPROC")) > 0
							cQuery += "C1_ACCPROC <> '1' AND "
						EndIf
						If SC1->(FieldPos("C1_TPSC")) > 0
							cQuery += "C1_TPSC <> '2' AND "
						EndIf						
						cQuery += "C1_QUJE<C1_QUANT AND "
						cQuery += "C1_TPOP<>'P' AND "
						cQuery += "C1_APROV IN(' ','L') AND "
						cQuery += "(C1_COTACAO ='"+Space(Len(C1_COTACAO))+"' OR C1_COTACAO = '"+Replicate("X",Len(C1_COTACAO))+"') AND "
						cQuery += "C1_FLAGGCT <> '1' AND " //-- Integracao com o Modulo de Gestao de Contratos
						If lPrjCni
							cQuery += "(C1_FORNECE||C1_LOJA = '"+ca120Forn+ca120Loj+"' OR C1_FORNECE||C1_LOJA = '') AND "
                        EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Adiciona filtro de usuario para SQL                   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Len( aFiltro ) >= 2
							If ValType( aFiltro[ 2 ] ) == "C"
								cQuery  += aFiltro[ 2 ] + " AND "
								bFiltro := { || .T. }
							EndIf 	
						EndIf 	

						cQuery += "D_E_L_E_T_<>'*' "
						cQuery += "ORDER BY "+SqlOrder(SC1->(IndexKey()))
						cQuery := ChangeQuery( cQuery )

						dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

						bWhile  := { || !( cAliasQry )->( Eof() ) } 	
						bIf     := { || .T. }

						lQuery := .T.

					Else

				#ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Bloco para ISAM                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cAliasQry := "SC1"

					bWhile  := { || !EOF() .And. xFilial("SC1")+cVar == C1_FILIAL+C1_PRODUTO }
					If lPrjCni
						bIf		:= { || If(FieldPos("C1_ACCPROC")>0,C1_ACCPROC<>'1',.T.) .And. C1_QUJE < C1_QUANT .And. C1_TPOP <> "P" .And. C1_APROV $ " ,L" .AND. (C1_FORNECE+C1_LOJA == ca120Forn+ca120Loj .OR. AllTrim(C1_FORNECE+C1_LOJA)=="").And.(C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == Replicate("X",Len(C1_COTACAO)))}
 	               	Else
						bIf		:= { || If(FieldPos("C1_ACCPROC")>0,C1_ACCPROC<>'1',.T.) .And. C1_QUJE < C1_QUANT .And. C1_TPOP <> "P" .And. C1_APROV $ " ,L" .And.(C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == Replicate("X",Len(C1_COTACAO)))}		        	
					EndIf
					lQuery  := .F.

					#IFDEF TOP
					EndIf 		
					#ENDIF

				While Eval( bWhile )

					If lQuery
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Posiciona o SC1                                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SC1->( MsGoto( ( cAliasQry )->SC1RECNO ) )					
						dbSelectArea( "SC1" )
					EndIf

					If Eval( bIf ) .And. Eval( bFiltro )

						If !( lSolic .And. aScan(aGrupo,SC1->C1_GRUPCOM) <= 0 ) .Or. Empty(SC1->C1_GRUPCOM)

							nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
							If nSaldo > 0

								AADD(aArrayF4,{SC1->C1_NUM,SC1->C1_ITEM,SC1->C1_PRODUTO,TransForm(nSaldo,PesqPictQt("C1_QUANT")),SC1->C1_DESCRI," "," "})		
								AADD(aSavRec,RecNo())

								If lMT120C1D
									aNew := ExecBlock("MT120C1D", .f., .f., aArrayF4[Len(aArrayF4)])
									If ValType(aNew) == "A"
										aArrayF4[Len(aArrayF4)] := aNew
									Endif	
								Endif

							EndIf

						EndIf

					EndIf	

					dbSelectArea( cAliasQry )
					dbSkip()
				EndDo
			Else
				Help(" ",1,"A120F4")
			EndIf
		Else
			dbSelectArea("SC3")
			dbSetOrder(3)
			If MsSeek(xFilial()+cVar)

				bFiltro := { || .T. }

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Adiciona filtro de usuario para ISAM                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Len( aFiltro ) >= 3
					If ValType( aFiltro[ 3 ] ) == "C"
						bFiltro := { || &( aFiltro[ 3 ] ) }
					EndIf 	
				EndIf

				#IFDEF TOP

					If TcSrvType() <> "AS/400"

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Bloco para SQL                                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

						cAliasQry := CriaTrab( , .F. )

						cQuery := ""

						cQuery += "SELECT R_E_C_N_O_ SC3RECNO FROM " + RetSqlName( "SC3" ) + " "
						cQuery += "WHERE "
						cQuery += "C3_FILIAL='"  + xFilial( "SC3" ) + "' AND "
						cQuery += "C3_PRODUTO='" + cVar             + "' AND "
						If SC1->(FieldPos("C3_ACCPROC")) > 0
							cQuery += "C3_ACCPROC <> '1' AND "
						EndIf
						cQuery += "C3_QUJE<C3_QUANT AND "
						If !GetNewPar("MV_CTRSELF",.T.)
							cQuery += "C3_FORNECE='" + ca120Forn + "' AND "
							cQuery += "C3_LOJA='"    + ca120Loj  + "' AND "
						EndIf
						cQuery += "C3_RESIDUO='" + Space( Len( SC3->C3_RESIDUO ) ) + "' AND "

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Filtra os contratos com data final < que a database.  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
						If lContVld
							cQuery += "C3_DATPRF >='"+DTOS(dDataBase)+"' AND "
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Filtra os contratos Aprovados                         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	                	                 	    		
						cQuery += "C3_CONAPRO <> 'B' AND "

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Adiciona filtro de usuario para SQL                   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Len( aFiltro ) >= 4
							If ValType( aFiltro[ 4 ] ) == "C"
								cQuery += aFiltro[ 4 ] + " AND "
								bFiltro := { || .T. }
							EndIf 	
						EndIf 	

						cQuery += "D_E_L_E_T_<>'*'"

						cQuery := ChangeQuery(  cQuery )

						dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

						bWhile  := { || !( cAliasQry )->( Eof() ) } 	
						bIf     := { || .T. }

						lQuery := .T.

					Else

				#ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Bloco para ISAM                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

					cAliasQry := "SC3"

					bWhile  := { || !Eof() .And. xFilial("SC3")+cVar == C3_FILIAL+C3_PRODUTO } 	

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Filtra os contratos com data final < que a database.  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
					If lContVld
						If !GetNewPar("MV_CTRSELF",.T.)
							bIf     := { || C3_QUJE < C3_QUANT .And. C3_FORNECE+C3_LOJA == ca120Forn+ca120Loj .And. Empty(C3_RESIDUO) .And. C3_DATPRF >= dDataBase }
						Else
							bIf     := { || C3_QUJE < C3_QUANT .And. Empty(C3_RESIDUO) .And. C3_DATPRF >= dDataBase }
						EndIf
					Else
						If !GetNewPar("MV_CTRSELF",.T.)
							bIf     := { || C3_QUJE < C3_QUANT .And. C3_FORNECE+C3_LOJA == ca120Forn+ca120Loj .And. Empty(C3_RESIDUO) }
						Else
							bIf     := { || C3_QUJE < C3_QUANT .And. Empty(C3_RESIDUO) }
						EndIf
					EndIf

					lQuery := .F.

					#IFDEF TOP
					EndIf 		
					#ENDIF

				While Eval( bWhile )

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona o SC3                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lQuery
						SC3->( MsGoto( ( cAliasQry )->SC3RECNO ) )
						dbSelectArea( "SC3" )
					EndIf

					lAprovado := C3_CONAPRO <> "B" 

					If Eval( bIf ) .And. Eval( bFiltro ) .And. lAprovado

						nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
						If nSaldo > 0

							AADD(aArrayF4,{SC3->C3_NUM,SC3->C3_ITEM,SC3->C3_PRODUTO,TransForm(nSaldo,PesqPictQt("C1_QUANT")),SC3->C3_OBS,""," "})
							AADD(aSavRec,RecNo())

							If lMT120C1D
								aNew := ExecBlock("MT120C1D", .f., .f., aArrayF4[Len(aArrayF4)])
								If ValType(aNew) == "A"
									aArrayF4[Len(aArrayF4)] := aNew
								Endif
							EndIf

						EndIf

					EndIf	

					dbSelectArea( cAliasQry )
					dbSkip()

				EndDo
			Else
				Help(" ",1,"A120F4")
			EndIf
		EndIf
	Else // produto eh referência
		If nTipoPed != 2

			dbSelectArea("SC1")
			dbgotop()
			dbSetOrder(2)
			If MsSeek(xFilial("SC1")+Alltrim(cVar),.T.)

				bFiltro := { || .T. }

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Adiciona filtro de usuario para ISAM                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty( aFiltro )
					If ValType( aFiltro[ 1 ] ) == "C"
						bFiltro := { || &( aFiltro[ 1 ] ) }
					EndIf 	
				EndIf

				#IFDEF TOP

					If TcSrvType() <> "AS/400"

						cAliasQry := CriaTrab( , .F. )

						cQuery := ""
						cQuery += "SELECT R_E_C_N_O_ SC1RECNO FROM " + RetSqlName( "SC1" ) + " "
						cQuery += "WHERE "
						cQuery += "C1_FILIAL='"  + xFilial( "SC1" ) + "' AND "
						cQuery += "C1_PRODUTO LIKE'" + ALLTRIM(cVar) + "%' AND "
						If SC1->(FieldPos("C1_ACCPROC")) > 0
							cQuery += "C1_ACCPROC <> '1' AND "
						EndIf
						If SC1->(FieldPos("C1_TPSC")) > 0
							cQuery += "C1_TPSC <> '2' AND "
						EndIf						
						cQuery += "C1_QUJE<C1_QUANT AND "
						cQuery += "C1_TPOP<>'P' AND "
						cQuery += "C1_APROV IN(' ','L') AND "
						cQuery += "(C1_COTACAO ='"+Space(Len(C1_COTACAO))+"' OR C1_COTACAO = '"+Replicate("X",Len(C1_COTACAO))+"') AND "
						cQuery += "C1_FLAGGCT <> '1' AND " //-- Integracao com o Modulo de Gestao de Contratos
						If lPrjCni
							cQuery += "(C1_FORNECE||C1_LOJA = '"+ca120Forn+ca120Loj+"' OR C1_FORNECE||C1_LOJA = '') AND "
						EndIf
	

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Adiciona filtro de usuario para SQL                   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Len( aFiltro ) >= 2
							If ValType( aFiltro[ 2 ] ) == "C"
								cQuery  += aFiltro[ 2 ] + " AND "
								bFiltro := { || .T. }
							EndIf 	
						EndIf 	

						cQuery += "D_E_L_E_T_<>'*' "
						cQuery := ChangeQuery( cQuery )

						dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

						bWhile  := { || !( cAliasQry )->( Eof() ) } 	
						bIf     := { || .T. }

						lQuery := .T.

					Else

				#ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Bloco para ISAM                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cAliasQry := "SC1"

					bWhile  := { || !EOF() .And. xFilial("SC1")+alltrim(cVar) == C1_FILIAL+LEFT(C1_PRODUTO,Len(Alltrim(cVar))) } 
					If lPrjCni
						bIf		:= { || If(FieldPos("C1_ACCPROC")>0,C1_ACCPROC<>'1',.T.) .And. C1_QUJE < C1_QUANT .And. C1_TPOP <> "P" .And. C1_APROV $ " ,L" .AND. (C1_FORNECE+C1_LOJA == ca120Forn+ca120Loj .OR. AllTrim(C1_FORNECE+C1_LOJA)=="").And.(C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == Replicate("X",Len(C1_COTACAO)))}
	               	Else
				   		bIf		:= { || If(FieldPos("C1_ACCPROC")>0,C1_ACCPROC<>'1',.T.) .And. C1_QUJE < C1_QUANT .And. C1_TPOP <> "P" .And. C1_APROV $ " ,L" .And.(C1_COTACAO == Space(Len(C1_COTACAO)) .Or. C1_COTACAO == Replicate("X",Len(C1_COTACAO)))}		        	
					EndIf
					lQuery := .F.

					#IFDEF TOP
					EndIf 		
					#ENDIF

				While Eval( bWhile )

					If lQuery
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Posiciona o SC1                                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						SC1->( MsGoto( ( cAliasQry )->SC1RECNO ) )					
						dbSelectArea( "SC1" )
					EndIf

					If Eval( bIf ) .And. Eval( bFiltro )

						If !( lSolic .And. aScan(aGrupo,SC1->C1_GRUPCOM) <= 0 ) .Or. Empty(SC1->C1_GRUPCOM)

							nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
							If nSaldo > 0

								AADD(aArrayF4,{SC1->C1_NUM,SC1->C1_ITEM,SC1->C1_PRODUTO,TransForm(nSaldo,PesqPictQt("C1_QUANT")),SC1->C1_DESCRI,SC1->C1_GRADE,SC1->C1_ITEMGRD})		
								AADD(aSavRec,RecNo())

								If lMT120C1D
									aNew := ExecBlock("MT120C1D", .f., .f., aArrayF4[Len(aArrayF4)])
									If ValType(aNew) == "A"
										aArrayF4[Len(aArrayF4)] := aNew
									Endif	
								Endif

							EndIf

						EndIf

					EndIf	

					dbSelectArea( cAliasQry )
					dbSkip()
				EndDo
			Else
				Help(" ",1,"A120F4")
			EndIf
		Else
			dbSelectArea("SC3")
			dbSetOrder(3)
			If MsSeek(xFilial("SC3")+Alltrim(cVar),.F.)

				bFiltro := { || .T. }

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Adiciona filtro de usuario para ISAM                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Len( aFiltro ) >= 3
					If ValType( aFiltro[ 3 ] ) == "C"
						bFiltro := { || &( aFiltro[ 3 ] ) }
					EndIf 	
				EndIf

				#IFDEF TOP

					If TcSrvType() <> "AS/400"

						cAliasQry := CriaTrab( , .F. )

						cQuery := ""
						cQuery += "SELECT R_E_C_N_O_ SC3RECNO FROM " + RetSqlName( "SC3" ) + " "
						cQuery += "WHERE "
						cQuery += "C3_FILIAL='"  + xFilial( "SC3" ) + "' AND "
						cQuery += "C3_PRODUTO LIKE'" + ALLTRIM(cVar) + "%' AND "
						cQuery += "C3_QUJE<C3_QUANT AND "
						If !GetNewPar("MV_CTRSELF",.T.)
							cQuery += "C3_FORNECE='" + ca120Forn + "' AND "
							cQuery += "C3_LOJA='"    + ca120Loj  + "' AND "
						EndIf
						cQuery += "C3_RESIDUO='" + Space( Len( SC3->C3_RESIDUO ) ) + "' AND "
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Filtra os contratos com data final < que a database.  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
						If lContVld
							cQuery += "C3_DATPRF >='"+DTOS(dDataBase)+"' AND "
						EndIf

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Filtra os contratos Aprovados                         ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	                	                 	    		
						cQuery += "C3_CONAPRO <> 'B' AND "

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Adiciona filtro de usuario para SQL                   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If Len( aFiltro ) >= 4
							If ValType( aFiltro[ 4 ] ) == "C"
								cQuery += aFiltro[ 4 ] + " AND "
								bFiltro := { || .T. }
							EndIf 	
						EndIf 	

						cQuery += "D_E_L_E_T_<>'*'"

						cQuery := ChangeQuery(  cQuery )

						dbUseArea( .T., "TOPCONN", TcGenQry( ,,cQuery ), cAliasQry, .F., .T. )

						bWhile  := { || !( cAliasQry )->( Eof() ) } 	
						bIf     := { || .T. }

						lQuery := .T.

					Else

				#ENDIF

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Bloco para ISAM                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					cAliasQry := "SC3"

					bWhile  := { || !EOF() .And. xFilial("SC3")+AllTrim(cVar) == C3_FILIAL+Left(C3_PRODUTO,(Len(Alltrim(cVar)))) } 	

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Filtra os contratos com data final < que a database.  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
					If lContVld
						If !GetNewPar("MV_CTRSELF",.T.)
							bIf     := { || C3_QUJE < C3_QUANT .And. C3_FORNECE+C3_LOJA == ca120Forn+ca120Loj .And. Empty(C3_RESIDUO).And. C3_DATPRF >= dDataBase }
						Else
							bIf     := { || C3_QUJE < C3_QUANT .And. Empty(C3_RESIDUO).And. C3_DATPRF >= dDataBase }
						EndIf
					Else
						If !GetNewPar("MV_CTRSELF",.T.)
							bIf     := { || C3_QUJE < C3_QUANT .And. C3_FORNECE+C3_LOJA == ca120Forn+ca120Loj .And. Empty(C3_RESIDUO) }
						Else
							bIf     := { || C3_QUJE < C3_QUANT .And. Empty(C3_RESIDUO) }
						EndIf
					EndIf

					lQuery := .F.

					#IFDEF TOP
					EndIf 		
					#ENDIF

				While Eval( bWhile )

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Posiciona o SC3                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lQuery
						SC3->( MsGoto( ( cAliasQry )->SC3RECNO ) )
						dbSelectArea( "SC3" )
					EndIf

					lAprovado := C3_CONAPRO <> "B" 

					If Eval( bIf ) .And. Eval( bFiltro ) .And. lAprovado

						nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
						If nSaldo > 0

							AADD(aArrayF4,{SC3->C3_NUM,SC3->C3_ITEM,SC3->C3_PRODUTO,TransForm(nSaldo,PesqPictQt("C1_QUANT")),SC3->C3_OBS,SC3->C3_GRADE,SC3->C3_ITEMGRD})
							AADD(aSavRec,RecNo())

							If lMT120C1D
								aNew := ExecBlock("MT120C1D", .f., .f., aArrayF4[Len(aArrayF4)])
								If ValType(aNew) == "A"
									aArrayF4[Len(aArrayF4)] := aNew
								Endif
							EndIf

						EndIf

					EndIf	

					dbSelectArea( cAliasQry )
					dbSkip()

				EndDo
			Else
				Help(" ",1,"A120F4")
			EndIf
		EndIf
	Endif

	dbSelectArea("SB1")
	MsSeek(xFilial("SB1")+cVar)
	cDescr := Substr(SB1->B1_DESC,1,TAMSX3("B1_DESC")[1])

	If mv_par02 == 2
		dbSelectArea("SB5")
		MsSeek(xFilial("SB5")+cVar)
		If !Empty(B5_CEME)
			cDescr := substr(SB5->B5_CEME,1,15)
		EndIf
	EndIf
	If nTipoPed != 2
		cCadastro := STR0061	//"Solicita‡„o de Compras"
	Else
		cCadastro := STR0062 //"Contrato de Parceria"
	EndIf

	aNewF4 := {}

	For nX := 1 To Len( aArrayF4 ) 	
		aLineF4 := aArrayF4[ nX ]
		aLineNew := { .F. }		
		AEval( aLineF4, { |x| AAdd( aLineNew, x ) } ) 				
		AAdd( aNewF4, aLineNew ) 	
	Next nX

	aArrayF4 := AClone( aNewF4 )

	If Len(aArrayF4) > 0
		nOpcA := 0

		cLine := "{If(aArrayF4[oQual:nAt,1],oOk,oNo)"

		If lMT120C1C
			aHeadUser := AClone( aHeadCpos )
			aLineNew  := aHeadUser[ 1 ]
			ADel( aHeadUser, 1 )
			ASize( aHeadUser, Len( aHeadUser ) - 1 )

			dbSelectArea(If(nTipoPed != 2, "SC1", "SC3"))
			If ValType( aNew := ExecBlock( "MT120C1C", .F., .F., aHeadUser ) ) == "A"
				aHeadUser := aNew
				aHeadCpos := {} 			
				AAdd( aHeadCpos, aLineNew )
				AEval( aHeadUser, { |x| AAdd( aHeadCpos, x ) } )
			EndIf
		EndIf

		For nX := 2 To Len( aHeadCpos )
			cLine += ",aArrayF4[oQual:nAT][" + AllTrim( Str( nX ) ) + "]"
		Next nX

		cLine += " } "

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta dinamicamente o bline do CodeBlock                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		bLine := &( "{ || " + cLine + " }" )

		DEFINE MSDIALOG oDlg FROM 30,30 TO 265,600 TITLE cCadastro OF oMainWnd PIXEL

		@ 015,004 SAY   STR0094 PIXEL //"Produto"
		@ 014,030 MSGET cDescr  WHEN .F. PIXEL	
		nLinFim := If(VAL(GetVersao(.F.)) > 11 .Or. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R5"),70,86)
		oQual:= TWBrowse():New( 29,4,278,nLinFim,,aHeadCpos,,oDlg,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
		oQual:SetArray(aArrayF4)
		oQual:bLDblClick := { || A120MarF4(@aArrayF4,@oQual) }
		oQual:bLine := bLine

		ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||(nOpcA := 1,nSavQual:= oQual:nAT,oDlg:End())},{||(nOpcA := 0,nSavQual:= oQual:nAt,oDlg:End())},,aButEnc)

		If nOpcA == 1
			nTamAcols := Len(aCols) //variavel para ser usada quando tiver produto grade no aCols
			For nX := 1 to Len(aArrayF4)

				If aArrayF4[nX][1]

					If nTipoPed != 2
						dbSelectArea("SC1")
						dbSetOrder(2)
						MsSeek(xFilial("SC1")+aArrayF4[nx][4]+aArrayF4[nx][2]+aArrayF4[nx][3])
					Else
						dbSelectArea("SC3")
						dbSetOrder(3)
						MsSeek(xFilial("SC3")+aArrayF4[nx][4]+aArrayF4[nx][2]+aArrayF4[nx][3])
					EndIf

					If nTipoPed == 2
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Varre o aCols e compara se ja' existe o item do contrato;   ³
						//³ se existir, nao sera' incluso na AE.                        ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nExistIT := Ascan(aCols,{|x| x[nPosNumSc] == aArrayF4[nx][2] .And. x[nPosItSc] == aArrayF4[nx][3] })
						If nExistIT > 0
						    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						    //³Ponto de Entrada MT120LCT  - Permite incluir o produto mais de uma vez na AE ³
						    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
							If (ExistBlock( "MT120LCT" ))
								uMT120Lct:=ExecBlock("MT120LCT",.F.,.F.)
						   	    If ValType(uMT120Lct)=='L'
						   	        If uMT120Lct = .F.       
						   	            Loop
						   	        EndIf
							    EndIf
							else
							    Loop
							EndIf	
						EndIf
					EndIf

					nInclui := aScan(aCols,{|x| x[nPosQuant] = 0 .And. x[nPosTotal] = 0})			

					AAdd(aAMarcaf4,Recno())

					If ValType(aA120PID) == "A"
						AAdd(aA120PID,Recno())
					Endif												

					cFlag := A120Flag()

					If !Empty(cFlag)
						If nTipoPed != 2
							MsgInfo( STR0130+" - "+STR0063+": "+aArrayF4[nx][2]+"/"+aArrayF4[nx][3], STR0102 ) //Registro utilizado por outro usuário.
						Else
							MsgInfo( STR0130+" - "+STR0107+": "+aArrayF4[nx][2]+"/"+aArrayF4[nx][3], STR0102 ) //Registro utilizado por outro usuário.
						Endif	
						Loop
					Endif

					If nInclui == 0

						cItem := IIf(Empty(aCols),StrZero(1,Len(SC7->C7_ITEM)),SomaIt(aCols[Len(aCols)][nPosItem]))

                        If lReferencia 
							nExistGra := aScan(aCols,{|x| x[nPosNumSc] == FieldGet(FieldPos(aCampos[1])) .And. x[nPosItSc] == FieldGet(FieldPos(aCampos[2]))})
							If nExistGra > 0
								cItem := aCols[nExistGra][nPosItem]
							Endif	
                        EndIf
                        
						AADD(aCols,Array(Len(aHeader)+1))

						For nY := 1 to Len(aHeader)
							If Trim(aHeader[nY][2]) == "C7_ITEM"
								aCols[Len(aCols)][nY] 	:=cItem
							Elseif Trim(aHeader[nY][2]) == "C7_ALI_WT"
								aCols[Len(aCols)][nY] 	:="SC7"
							Elseif Trim(aHeader[nY][2]) == "C7_REC_WT"
								aCols[Len(aCols)][nY] 	:= 0
							ElseIf ( aHeader[nY][10] != "V")
								aCols[Len(aCols)][nY] := CriaVar(aHeader[nY][2])
							EndIf
							aCols[Len(aCols)][Len(aHeader)+1] := .F.
						Next nY
						N := Len(aCols)
						If nPosCodTab>0
							aCols[Len(aCols)][nPosCodTab]:=aCols[nLin][nPosCodTab]
						EndIf
					EndIf

					If nTipoPed == 2 .And. MaFisFound("IT",n)
						aValores[FRETE] += SC3->C3_VALFRE
					Endif

					A120MovCampos(SuperVal(aArrayF4[nX][5]))

					If nTipoPed == 1
						aCols[n,nPosGrade]:=SC1->C1_GRADE
						aCols[n,nPosItGra]:=SC1->C1_ITEMGRD
					Endif

					If nTipoPed == 2
						aCols[n,nPosGrade]:=SC3->C3_GRADE
						aCols[n,nPosItGra]:=SC3->C3_ITEMGRD

						If nPosCC > 0
							aCols[n][nPosCC]:=SC3->C3_CC
						EndIf                	
						cCondicao := SC3->C3_COND

						cTpFrete := RetTipoFrete(SC3->C3_TPFRETE)

					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicia a Carga do item nas funcoes MATXFIS  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If MaFisFound("IT",n)
						MaFisAlt("IT_QUANT",SuperVal(aArrayF4[nx][5]),N)
						MaColsToFis(aHeader,aCols,n,"MT120",.T.)
					EndIf

					If nInclui == 0
						MaFisAdd(aCols[n][nPosCod],"",aCols[n][nPosQuant],aCols[n][nPosPrc],aCols[n][nPosDsc],"","",,0,0,0,0,aCols[n][nPosTotal])
					EndIf

					MaFisAlt("IT_FRETE",SC3->C3_VALFRE,n)
					A120Tabela("C7_QUANT",SuperVal(aArrayF4[nx][5])) 
					
					If lPrjCni 
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Controle do Rateio Financeiro                                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nTipoPed != 2
							If SC1->C1_RATFIN == "1"
								cChaveRat := "SC1"+SC1->C1_FILIAL+SC1->C1_NUM
								F641TrfRat(cChaveRat,@aRatFin,SC1->C1_QUANT)
							EndIf							
						EndIf
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Carrega o rateio da solicitacao de compra para o pedido  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nTipoPed <> 2 .And. AliasIndic("SCX")
						cChaveRat := SC1->(C1_NUM+C1_ITEM)
						A120BuRtSC(cChaveRat,@aHeadSCH,@aColsSCH,.T.)
					EndIf
				Endif
			Next nX
			If nTipoPed == 2
				oCond:Refresh()
				A120DescCnd(cCondicao,oDescCond,@cDescCond)
			EndIf

			Eval(bListRefresh)
			Eval(bGDRefresh)

		Else

			For nX := 1 to Len(aArrayF4)
				If nTipoPed != 2
					dbSelectArea("SC1")
				Else
					dbSelectArea("SC3")
				EndIf
				dbSetOrder(1)
				MsSeek(xFilial()+aArrayF4[nx][2]+aArrayF4[nx][3])

				If nTipoPed != 2
					If SimpleLock("SC1")
						SC1->(MsRUnlock())
					Endif
				Else
					If SimpleLock("SC3")
						SC3->(MsRUnlock())
					Endif						
				Endif			
			Next nX

		EndIf
	EndIf	
EndIf

RestArea(aAreaSC1)
RestArea(aAreaSC3)
RestArea(aAreaSB1)
RestArea(aArea)

If lGrade .And. Len(aAMarcaF4) > 0

	aCols := aColsGrade(oGrade, aCols, aHeader, "C7_PRODUTO", "C7_ITEM", "C7_ITEMGRD",,,nTamAcols-1)

	MaColsToFis(aHeader,aCols,,"MT120",.T.)

	MaFisAlt("NF_FRETE",avalores[FRETE])
	MaFisAlt("NF_DESPESA",avalores[VALDESP])
	MaFisAlt("NF_SEGURO",avalores[SEGURO])
	MaFisAlt("NF_DESCONTO",avalores[VALDESC])
	
	If cPaisLoc == "PTG"
		MaFisAlt("NF_DESNTRB",avalores[NTRIB])
		MaFisAlt("NF_TARA",avalores[TARA])
	Endif

Endif

SetKey( VK_F4,bKeyF4 )
SetKey( VK_F5,bKeyF5 )

If lPrjCni 
	//Grava rateio financeiro
	If Len(aRatFin) > 0
		cChaveRat := "SC7"+xFilial("SC7")+ca120num
		F641GrvRat(cChaveRat,aRatFin)
		aRatFin := {}
	EndIf
EndIf


Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120SaldoSC ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Retorna o saldo da solicitacao/contrato posicionado.        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Pedido de compras / autorizacao de entrega         ³±±
±±³          ³ ExpN2 = Posicao do aCols do codigo do produto              ³±±
±±³          ³ ExpN3 = Posicao do aCols do numero da solicitacao          ³±±
±±³          ³ ExpN4 = Posicao do aCols do item da solicitacao            ³±±
±±³          ³ ExpN5 = Posicao do aCols do item do Pc                     ³±±
±±³          ³ ExpC1 = Codigo do pedido de compras                        ³±±
±±³          ³ ExpA1 = Array grupo de compras do usuario                  ³±±
±±³          ³ ExpL1 = conteudo do paramento MV_RESTCOM                   ³±±
±±³          ³ ExpN6 = Posicao do aCols da quantidade Solicitada          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cNumPed,aGrupo,lSolic,nPosQtSol)

Local aArea		:= GetArea()
Local nSaldo	:= 0
Local nX        := 0
Local lVerSaldo := ( GetNewPar( "MV_SALDOF5", "1" ) == "1" ) //Verifica saldo do item no acols via F5 na AE - Especifico Ripasa

If nTipoPed != 2
	nSaldo	:= SC1->C1_QUANT - SC1->C1_QUJE
	For nX := 1 to Len(aCols)
		If !aCols[nX][Len(aCols[nX])].And.!ATail(aCols[nX]) .And. ;
				(aCols[ nX, nPosCod  ] == C1_PRODUTO) .And. ;
				(aCols[ nX, nPosNumSC] == C1_NUM) .And. ;
				(aCols[ nX, nPosItSC ] == C1_ITEM)
			dbSelectArea("SC7")
			dbSetOrder(1)
			If MsSeek(xFilial("SC7")+cNumPed+aCols[nX,nPosItem])
				If aCols[n,nPosItem] == SC7->C7_ITEM
					nSaldo +=  SC7->C7_QTDSOL
				Else
					nSaldo -= aCols[nX][nPosQtSol] - SC7->C7_QTDSOL
				EndIf
			Else
					nSaldo -= aCols[nX][nPosQtSol]
			EndIf
		EndIf
	Next nX
Else
	nSaldo	:= SC3->C3_QUANT - SC3->C3_QUJE
	If lVerSaldo
		For nX := 1 to Len(aCols)
			If !aCols[nX][Len(aCols[nX])] .And. !ATail(aCols[nX]) .And. ;
					(aCols[ nX, nPosCod  ] == C3_PRODUTO) .And. ;
					(aCols[ nX, nPosNumSC] == C3_NUM) .And. ;
					(aCols[ nX, nPosItSC ] == C3_ITEM)
				dbSelectArea("SC7")
				dbSetOrder(1)
				If MsSeek(xFilial("SC7")+cA120Num+aCols[nX,nPosItem])
					If aCols[n,nPosItem] == SC7->C7_ITEM
						nSaldo += SC7->C7_QTDSOL
					Else
						nSaldo -= aCols[nX][nPosQtSol] - SC7->C7_QTDSOL
					EndIf
				Else
					If n != nX
						nSaldo -= aCols[nX][nPosQtSol]
					EndIf
				EndIf
			EndIf
		Next nX
	Endif
EndIf

nSaldo := If(nSaldo > 0, nSaldo , 0 )

RestArea(aArea)

Return(nSaldo)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120QtdSol ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Preenche a quantidade disponivel da sol./contr.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Quantidade Pedida                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120QtdSol(nQuant,nEvento)

Local aArea		:= GetArea()
Local aGrupo    := UsrGrComp(RetCodUsr())
Local nSaldo	:= 0
Local nPosQtSol	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QTDSOL"})
Local nPosNumSc := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})
Local nPosItSc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local lSolic    := IF(SuperGetMv("MV_RESTCOM") == "S" , .T. , .F. )

DEFAULT nEvento := 1

dbSelectArea("SC7")
dbSetOrder(1)
MsSeek(xFilial("SC7")+cA120Num+aCols[n,nPosItem])

If !Empty(aCols[n][nPosNumSC])

	If nTipoPed != 2
		If nEvento == 1
			dbSelectArea("SC1")
			dbSetOrder(1)
			MsSeek(xFilial("SC1")+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
			While !Eof().and.xFilial("SC1")+aCols[n][nPosNumSC]+aCols[n][nPosItSC] == SC1->C1_FILIAL+SC1->C1_NUM+SC1->C1_ITEM

				nSaldo	+= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)

				dbSelectArea("SC1")
				dbSkip()
			Enddo
		Else
			dbSelectArea("SC1")
			dbSetOrder(2)
			MsSeek(xFilial("SC1")+aCols[n][nPosCod]+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
			nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
		Endif
	Else
		If nEvento == 1
			dbSelectArea("SC3")   //contrato de parceria
			dbSetOrder(1)
			MsSeek(xFilial("SC3")+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
			While !Eof().And.xFilial("SC3")+aCols[n][nPosNumSC]+aCols[n][nPosItSC] == SC3->C3_FILIAL+SC3->C3_NUM+SC3->C3_ITEM
				nSaldo	+= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)

				dbSelectArea("SC3") 
				dbSkip()
			Enddo
		Else
			dbSelectArea("SC3")   //contrato de parceria
			dbSetOrder(3)
			MsSeek(xFilial("SC3")+aCols[n][nPosCod]+aCols[n][nPosNumSC]+aCols[n][nPosItSC])
			nSaldo	:= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)
		Endif
	EndIf

	aCols[n][nPosQtSol]	:= nQuant
Else

	If !Empty(SC7->C7_NUMCOT)
		dbSelectArea("SC8")
		dbSetOrder(3)
		MsSeek(xFilial("SC8")+SC7->C7_NUMCOT+SC7->C7_PRODUTO+SC7->C7_FORNECE+SC7->C7_LOJA)

		While ( !Eof() .And. xFilial("SC8") == SC8->C8_FILIAL .And.;
				SC7->C7_NUMCOT == SC8->C8_NUM     .And.;
				SC7->C7_PRODUTO== SC8->C8_PRODUTO .And.;
				SC7->C7_FORNECE== SC8->C8_FORNECE .And.;
				SC7->C7_LOJA   == SC8->C8_LOJA )

			If ( SC8->C8_NUMPED == SC7->C7_NUM .And. SC8->C8_ITEMPED == SC7->C7_ITEM )

				dbSelectArea("SC1")
				dbSetOrder(5)
				MsSeek(xFilial("SC1")+SC8->C8_NUM+SC8->C8_PRODUTO+SC8->C8_IDENT)
				While ( !Eof() .And. xFilial("SC1") == SC1->C1_FILIAL .And.;
						SC8->C8_NUM     == SC1->C1_COTACAO .And.;
						SC8->C8_PRODUTO == SC1->C1_PRODUTO .And.;
						SC8->C8_IDENT   == SC1->C1_IDENT )

					nSaldo	+= A120SaldoSC(nTipoPed,nPosCod,nPosNumSC,nPosItSC,nPosItem,cA120Num,aGrupo,lSolic,nPosQtSol)

					dbSelectArea("SC1")
					dbSkip()
				EndDo

			EndIf

			dbSelectArea("SC8")
			dbSkip()

		EndDo

		aCols[n][nPosQtSol]	:= nQuant
	Else
		aCols[n][nPosQtSol] := 0
	EndIf

EndIf

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120Forn ³ Autor ³ Edson Maricate        ³ Data ³06.12.1999³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica o Fornecedor                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A120Fornec(@ExpC1,@ExpC2,@ExpA1,ExpL1,ExpL2)               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do Fornecedor                               ³±±
±±³          ³ ExpC2 = Loja do Fornecedor                                 ³±±
±±³          ³ ExpA1 = Array contendo as informacoes sobre o fonecedor    ³±±
±±³          ³         utilizado no folder de dados do fornecedor.        ³±±
±±³          ³ ExpL1 = Indica se deve disparar os gatilhos com informacoes³±±
±±³          ³         do fornecedor como Condicao de Pagamento,Contato,  ³±±
±±³          ³         etc. ( DEFAULT = .T. )                             ³±±
±±³          ³ ExpL2 = Na COPIA, indica se deve consistir o bloqueio do   ³±±
±±³          ³ 		  fornecedor (somente ao passar pelo campo forn./loja)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Forn(cFornece,cCodLoja,aInfForn,lAtuInfo,lCopia)

Local lRet		:= .F.
Local nPosNumSc := ASCAN(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItSc  := ASCAN(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nX        := 0
Local lMt120Cnd := .T.

DEFAULT lAtuInfo := .T.
DEFAULT lCopia	 := .F.

dbSelectArea("SA2")

If !Empty(cFornece)
	If Empty(cCodLoja)
		SA2->(dbSetOrder(1))
		SA2->(MsSeek(xFilial("SA2")+cFornece))
		If SA2->(Found())
			cCodLoja := SA2->A2_LOJA
			lRet := .T.
		EndIf
	Else
		SA2->(dbSetOrder(1))
		SA2->(MsSeek(xFilial("SA2")+cFornece+cCodLoja))
		If SA2->(Found())
			cCodLoja := SA2->A2_LOJA
			lRet := .T.
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o Registro esta Bloqueado.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If INCLUI .Or. lCopia
			If lRet .And. !RegistroOk("SA2")
				lRet := .F.
			EndIf
		EndIf			
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Validacao: AE c/ Itens de contrato para outro fornecedor (MV_CTRSELF)   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	                	                 	    		
	If lRet .And. nTipoPed == 2 .And. !GetNewPar("MV_CTRSELF",.T.)
		SC3->(dbSetOrder(1))
		For nX := 1 To Len(aCols)
			If !aCols[nx][Len(aCols[nx])] .And. !Empty(aCols[nX][nPosNumSC]+aCols[nX][nPosItSC])
				If SC3->(MsSeek(xFilial('SC3')+aCols[nX][nPosNumSC]+aCols[nX][nPosItSC]))
					If SC3->(C3_FORNECE+C3_LOJA) <> ca120Forn+ca120Loj
						Help(" ",1,"A120AESELF")
						lRet := .F.
						Exit
					EndIf
				EndIf
			EndIf
		Next
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o array que contem os dados do Fornecedor      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. aInfForn != Nil
	aInfForn[1]	:= SA2->A2_NOME						// Nome
	aInfForn[2] := IIF(!Empty(SA2->A2_DDI),"( "+TransForm(SA2->A2_DDI,PesqPict("SA2","A2_DDI"))+") ","");
	+TransForm(alltrim(SA2->A2_DDD),PesqPict("SA2","A2_DDD"))+" "+TransForm(SA2->A2_TEL,PesqPict("SA2","A2_TEL")) // Telefone
	aInfForn[3]	:= SA2->A2_PRICOM	    			//Primeira Compra
	aInfForn[4] := SA2->A2_ULTCOM      				//Ultima Compra
	aInfForn[5]	:= SA2->A2_END+" - "+SA2->A2_MUN	//Endereco
	aInfForn[6]	:= SA2->A2_EST         				//Estado
	aInfForn[7]	:= SA2->A2_CGC         				//cnpj
	If lAtuInfo
		If ExistBlock("MT120CND")
			lMt120Cnd := Execblock("MT120CND",.F.,.F.)
		EndIf  
		If lMt120Cnd 
			cCondicao 	:= SA2->A2_COND
		EndIf
		cContato	:= SA2->A2_CONTATO
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Grava ³ Rev.  ³ Edson Maricate        ³ Data ³05.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Grava as informacoes do pedido de compra                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = .F. - Inclusao/Alteracao , .T. - Exclusao          ³±±
±±³          ³ ExpC2 = Formula de Reajuste                                ³±±
±±³          ³ ExpN3 = Percentual de Desconto 1                           ³±±
±±³          ³ ExpN4 = Percentual de Desconto 2                           ³±±
±±³          ³ ExpN5 = Percentual de Desconto 3                           ³±±
±±³          ³ ExpC6 = Formula da Mensagem                                ³±±
±±³          ³ ExpC7 = Tipo de Frete                                      ³±±
±±³          ³ ExpB8 = Codeblock de contabilizacao                        ³±±
±±³          ³ ExpA9: Array com Adiantamentos relacionado ao Pedido (Opc) ³±±
±±³          ³ ExpA10 = Array com aRecnoSE2RA 							  ³±± 
±±³          ³ ExpA11 = Array Indicação de PV em Transito				  ³±±
±±³          ³ ExpA12 = Array Indicando de PC Aglutinados por C.Compras   ³±±
±±³          ³ ExpA13 = Array aHeader de rateio de pedido de compra       ³±±
±±³          ³ ExpA14 = Array aCols de rateio de pedido de compra         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Grava(lDeleta,cReajuste,nDesc1,nDesc2,nDesc3,cMsg,cTpFrete,bCtbOnLine,lCopia,aRecnoSE2RA,aL120PvTran,aL120PedAglut,aHeadSCH,aColsSCH,nHdlPrv,nTotalCtb,cLoteCtb,lCtbOnLine)
Local cQrySC, cTpCto, cNewAlias := "TRB_SC" 
Local aArea     := GetArea()
Local aAreaSC6  := {}
Local aAreaSC7  := {}
Local aAreaSM0  := {}
Local aAreaBkp	:= {}
Local aRetG1    := {}
Local aAreaCent := {} 
Local cGrupo	:= SuperGetMv("MV_PCAPROV")
Local cGrComPad := Space(Len(SC7->C7_GRUPCOM))
#IFDEF TOP
	Local cQuery     := ""
	Local cBanco     := ""
#ENDIF
Local cPedAnt	:= ""
Local cVerSCY   := ""
Local cMT120APV := ""

Local nPosRecno := Len(aHeader)
Local nA		:= 0
Local nB		:= 0
Local nX		:= 0
Local nY		:= 0
Local nz		:= 0
Local nw		:= 0
Local lGeraSCR	:= .F.
Local lAeAprov := SuperGetMV("MV_AEAPROV",.F.,.T.)  // indica se AE tem controle de alcada
Local lFirstNiv := .F.
Local lTravou   := .F.
Local lMta120G3 := ExistBlock("MTA120G3",,.T.)
Local lGrade    := MaGrade()
Local lA120QUJE := ExistBlock("A120QUJE") .And. ExecBlock("A120QUJE",.F.,.F.)
Local lAltAprov := .F.
Local lAltGrup	:= .F.
Local lTrocNum	:= .F.
Local cNumAnt		:= ""

Local aRefImpos := MaFisRelImp('MT100',{"SC7"})           
Local aMT120APV :={}
Local aFiliais  := {}
Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nPosPrc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosQuant := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosDsc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_VLDESC"})
Local nPosTotal	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"})
Local nPosQtSol	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QTDSOL"})
Local nPosTes	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TES"})
Local nPosProv  := ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PROVENT"})
Local nPedACC   := ascan(aHeader,{|x| Alltrim(x[2]) == "C7_ACCPROC"})
Local nCont     := 1
Local nLoop     := 1
Local nLoop2    := 1
Local nLoop3    := 1
Local nGrp      := 0     
Local lGeraCRG3
Local cUnico   
Local cCodEnt   
Local cAliasSC6 := "SC6"
Local cAliasSC7 := "SC7"
Local nUsadoSCH := Len(aHeadSCH)
Local lUsaACC   := If(FindFunction("WebbConfig"),WebbConfig(),.F.)
Local lMktPlace	:= SuperGetMv("MV_MKPLACE",.F.,.F.)
Local cDocACC   := ""
Local lPedACC	:= .F.
Local lLctPadRat:= (VerPadrao("659") .and. VerPadrao("652")) 	// So podera existir lancamento para rateio caso exista lancamento para pedido
Local lSb1TES   := SC7->(FieldPos("C7_ESTOQUE")) > 0 .And. SuperGetMv("MV_SB1TES",.F.,.F.)  
Local cGCTAlc   := "N"

Local cRatFin	:= "2"
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Local lBloqIP	 := .F.

DEFAULT aRecnoSE2RA   := {}
DEFAULT lCopia        := .F.
DEFAULT aL120PvTran   := {}
DEFAULT aL120PedAglut := {}
DEFAULT aHeadSCH  	  := {}
DEFAULT aColsSCH      := {}  

DEFAULT nHdlPrv		:= 0
DEFAULT nTotalCtb	:= 0
DEFAULT cLoteCtb	:= ""
DEFAULT lCtbOnLine	:= .F.

Private n120TotLib:= 0

Pergunte("MTA120",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada MTA120G1                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (ExistBlock("MTA120G1"))
	aRetG1 := ExecBlock("MTA120G1",.F.,.F.)
	If ValType( aRetG1 ) <> "A"
		aRetG1 := {}
	EndIf
EndIf

If INCLUI .OR. lCopia
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o numero do pedido a ser atualizado                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !SuperGetMv("MV_PCFILEN")// Numeração por Filial 
		dbSelectArea("SC7")
		dbSetOrder(1)
		If MsSeek(xFilial("SC7")+cA120Num)    
			cPedAnt := NextNumero("SC7",1,"C7_NUM",.F.,cA120Num)
			If cA120Num # cPedAnt
				cNumAnt  := cA120Num
				cA120Num := cPedAnt
				lTrocNum := .T.
				If !l120Auto
					HELP(" ",1,"NUMSEQ",,cPedAnt,4,15)
				EndIf
			EndIf
		EndIf
	Else					       // Numeração por Empresa
		aAreaSM0 := SM0->( GetArea() )    
		SM0->( DbSetOrder(1) ) 
		SM0->( DbSeek( cEmpAnt ) )
	 	Do While SM0->( !Eof() ) .And. SM0->M0_CODIGO == cEmpAnt
			AAdd( aFiliais,FWGETCODFILIAL)
			SM0->( DbSkip() )
	 	EndDo
		RestArea( aAreaSM0 )  
		                                                       
		dbSelectArea("SC7")
		dbSetOrder(1)
		For nX := 1 to len(aFiliais) 
			If MsSeek(aFiliais[nX]+cA120Num)
				cPedAnt := CriaVar('C7_NUM', .T.)
				If cA120Num # cPedAnt
					cNumAnt  := cA120Num
					cA120Num := cPedAnt
					lTrocNum := .T.
					If !l120Auto
						HELP(" ",1,"NUMSEQ",,cPedAnt,4,15)
					EndIf
					Exit
				EndIf
			EndIf
		Next nX
	EndIf
Else 
	If lDeleta .And. SC7->C7_ORIGEM == "WSMATA12" .AND. !l120Auto
		// Não excluir se veio por integração do TOP    //Wilson em 14/06/2011
		aArea     := GetArea()
		aAreaAJ7  := AJ7->(GetArea())
		aAreaSC7  := SC7->(GetArea())
		dbSelectArea("AJ7")
		dbSetOrder(2)
		MsSeek(xFilial()+(cAliasSC7)->C7_NUM+(cAliasSC7)->C7_ITEM) 	
		If AJ7->(FieldPos('AJ7_VIAINT')) > 0 
			If AJ7->AJ7_VIAINT == "S"
				MsgAlert(STR0174) // "Pedido de Compra gerado pelo TOP, somente pode ser Excluido pelo TOP."
				Return .F.
			Endif
		Endif
		RestArea(aAreaSC7)
		RestArea(aAreaAJ7)
		RestArea(aArea)
		MsUnLockAll()		
   Endif  
   
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a ultima versao de alteracao do pedido no SCY e   ³
	//³ disponibiliza a proxima versao disponivel para a alteracao.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
	If AliasInDic("SCY") // Esta funcao verifica a existencia desta tabela no dicionario para executar esta operacao

		cVerSCY := StrZero(0,Len(SCY->CY_VERSAO))

		#IFDEF TOP
			If ( TcSrvType()<>"AS/400" )
				cQuery := "SELECT MAX(CY_VERSAO) VERSCY "
				cQuery += "FROM "+RetSqlName("SCY")+" SCY "
				cQuery += "WHERE CY_FILIAL='"+xFilial("SCY")+"' AND "
				cQuery += "CY_NUM ='"+cA120Num+"' AND "
				cQuery += "SCY.D_E_L_E_T_=' '"
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"MA120GRVQ2",.T.,.T.)
				cVerSCY := Substr(VERSCY,1,TamSX3("CY_VERSAO")[1])
				dbCloseArea()
				dbSelectArea("SCY")
			Else
		#ENDIF
			dbSelectArea("SCY")
			dbSetOrder(1)
			If MsSeek(xFilial("SCY")+cA120Num, .F.)
				Do While ( !Eof() .And. CY_FILIAL == xFilial("SCY") .And. CY_NUM == cA120Num )
					cVerSCY  := CY_VERSAO
					dbSkip()
				EndDo
			EndIf
			#IFDEF TOP
			EndIf
			#ENDIF

		cVerSCY := Soma1(cVerSCY,Len(SCY->CY_VERSAO))

	EndIf

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se houve alteracao no numero do pedido verifica se foi     ³
//³ gerado titulo de adiantamento e altera a numeracao.        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
If lTrocNum .And. Type("aAdtSE2") == "A"
	DbSelectArea( "SE2" )
	For nX :=1 to Len(aAdtSE2)
		SE2->( DbGoTo( aAdtSE2[nX] ) )
		If !SE2->( Eof() )
			DbSelectArea( "FIE" )
			dbSetOrder(3)
			If MsSeek(xFilial("FIE")+"P"+SE2->(E2_FORNECE+E2_LOJA+E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO)+cNumAnt)
				RecLock( "FIE", .F. )
				FIE->FIE_PEDIDO	:= cA120Num
				MsUnLock() 
			EndIf
		EndIf
	Next
EndIf

//Montagem dos dados da execauto de rateio
If Type( "aRatCTBPC" ) == "A" .And. Len(aRatCTBPC) > 0
	DbSelectArea("SX3")
	DbSetOrder(1)
	MsSeek("SCH")
	aHeadSCH := {}
	aColsSCH := {} 
	While ( !EOF() .And. SX3->X3_ARQUIVO == "SCH" )
		If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CH_CUSTO#CH_FILIAL"
			aadd(aHeadSCH,{ TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			SX3->X3_VALID,;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_F3,;
			SX3->X3_CONTEXT })
		EndIf
		DbSelectArea("SX3")
		dbSkip()
	EndDo
	nUsadoSCH := Len(aHeadSCH)
	aColsSCH  := M120AutRat(aClone(aRatCTBPC),aHeadSCH)
	// Previne gravacao de campos ao acionar rotina automatica do GCT para campos que estao no dicionario mas nao foram enviados
	If IsInCallStack("Cn120Ence") .And. Len(aColsSCH) > 0
		nUsadoSCH := Len(aColsSCH[1,2,1]) - 1
	Endif
Endif

//Caso Alteração Automatica deleta os rateios
If Type( "nAutoAdt" ) == "N" .And. nAutoAdt==4 .And. Len(aRatCTBPC) > 0			
	aAreaSCH := GetArea()
	SCH->(DbSetOrder(1)) //CH_FILIAL+CH_PEDIDO+CH_FORNECE+CH_LOJA+CH_ITEMPD+CH_ITEM
	If SCH->(MsSeek(xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA))
		While !SCH->(EOF()) .and. (xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA==SCH->CH_FILIAL+SCH->CH_PEDIDO+SCH->CH_FORNECE+SCH->CH_LOJA)
			RecLock("SCH",.F.)
			SCH->(dbDelete())
			MsUnlock()
			SCH->(DbSkip())
		Enddo
	EndIf
	RestArea(aAreaSCH)
Endif  

If lPrjCni
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se existe rateio financeiro                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cChaveRat := "SC7"+xFilial("SC7")+cA120Num
	FRZ->(dbSetOrder(2))
	FRZ->(dbSeek(xFilial("FRZ")+SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1])))
	While FRZ->(!eof()) .and. SubStr(cChaveRat+Space(TamSX3("FRZ_CHAVE")[1]),1,TamSX3("FRZ_CHAVE")[1]) == FRZ->FRZ_CHAVE
		cRatFin := "1"
		Exit
	EndDo  
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicio da gravacao do Pedido :                             ³
//³ 1 - Estorna todos os itens   (Alteracao,Exclusao)          ³
//³ 2 - Grava os itens do Pedido (Inclusao,Alteracao)          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC7")
dbSetOrder(1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Tratamento do aCols para Grade de Produtos, quando a grade ³
//³ estiver ativa o aCols devera ser restaurado (Expandido)    ³
//³ pela funcao a120Grd2Acols()                                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGrade
	If INCLUI .Or. ALTERA
		a120Grd2Acols()
	Else
		aCols:=aClone(aColsBkp)
	Endif	
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Efetua tratamento para pedidos Aglutinados por Central de Compras ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lDeleta
  	aAreaCent := GetArea()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //| Limpa Amarração de Pedido de Vendas em Transito vinculados ao Pedido de Compras |
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	if aL120PvTran[1] .And. aL120PvTran[2] == 2
		If SC6->(FieldPos('C6_FILPED')) > 0 .And. SC6->(FieldPos('C6_PEDCOM')) > 0 .And. SC6->(FieldPos('C6_ITPC')) > 0
			Begin Transaction
				cQuery := "Select SC6.C6_FILPED, SC6.C6_NUM, SC6.C6_PEDCOM, SC6.C6_ITPC, SC6.R_E_C_N_O_ SC6RECNO "
				cQuery += "  From " + RetSQLTab( 'SC6' )
				cQuery += " Where SC6.C6_FILPED = '" + xFilial('SC7') + "'"
				cQuery += "   And SC6.C6_PEDCOM = '" + cA120Num + "'"
				cQuery += "   And SC6.D_E_L_E_T_ = ' ' "
		
				cAliasSC6 := GetNextAlias()
				cQuery    := ChangeQuery( cQuery )
				DbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasSC6, .T., .F. )
				
				While !(cAliasSC6)->( Eof() )
					SC6->(DbGoTo((cAliasSC6)->SC6RECNO))
					RecLock( 'SC6', .F. )  
						SC6->C6_FILPED := ''
						SC6->C6_PEDCOM := ''
						SC6->C6_ITPC   := ''
						SC6->( MsUnLock() )
					(cAliasSC6)->( DbSkip() )
				EndDo
				(cAliasSC6)->( DbCloseArea() )
			End Transaction
		EndIf 
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
    //| Limpa indicador de Resíduos dos Pedido de Compras gerados para Filial de Entrega |
    //ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
   	if aL120PedAglut[1] .And. (aL120PedAglut[2] == 1 .Or.  aL120PedAglut[2] == 2)
		SC7->(DbSetOrder(1))
		SC7->(DbSeek(xFilial('SC7')+cA120Num))
		If Empty( SC7->C7_RESIDUO )                
			dbSelectArea("SDP")
			dbSetOrder(4)
			MsSeek(xFilial("SDP")+cFilialEnt+cA120Num)
			Begin Transaction
				While !Eof().and.xFilial("SDP")+cFilialEnt+cA120Num == SDP->DP_FILIAL+DP_FILCEN+DP_PEDCEN
	    			SC7->( DbSetOrder(14) ) //--C7_FILENT+C7_NUM+C7_ITEM
	    			If SC7->(DbSeek(SDP->DP_FILNEC+SDP->DP_PEDORI+SDP->DP_ITPCOR))
						If aL120PedAglut[2] == 1
			    			//--Retorna o Pedido original...		
				   			RecLock('SC7',.F.)
					   		SC7->C7_RESIDUO := ' '
				   			SC7->( MsUnLock())
		
							//--Atualiza os dados do SB2 (B2_SALPEDI)
							SB2->( DbSetOrder(1) )
							SB2->( DbSeek( SC7->(C7_FILENT + C7_PRODUTO + C7_LOCAL) ) )
							GravaB2Pre( '+' , SDP->DP_QUANT, 'F' )
						EndIf
						
						//--Elimina o saldo na tabela auxiliar de controle de saldos previstos...
						RecLock('SDP',.F.)
						SDP->(DbDelete())
						SDP->(MsUnLock())
					EndIf
					SDP->(DbSkip())
				EndDo
			End Transaction
		EndIf
	EndIf
	RestArea(aAreaCent)
EndIf

For nX :=1 to Len(aCols)
	Begin Transaction
		lTravou := .F.
		If aCols[nX][nPosRecno] > 0
			dbSelectArea("SC7")
			MsGoto(aCols[nX][nPosRecno])
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Antes de atualizar o Pedido de Compras SC7 com a alteracao ³
			//³ atual, grava o SCY com os dados do SC7 gerando assim um    ³
			//³ historico com as versoes anteriores da alteracoes do PC.   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			RecLock("SCY",.T.)
			dbSelectArea("SCY")
			For nA := 1 to SCY->(FCount())
				nB := SC7->(FieldPos("C7"+SubStr(SCY->(FieldName(nA)),3)))
				If ( nB <> 0 )
					FieldPut(nA,SC7->(FieldGet(nB)))
				EndIf
			Next nA
			SCY->CY_VERSAO := cVerSCY
			
			RecLock("SC7")
			MaAvalPC("SC7",2,Nil,Nil,Nil,Nil,bCtbOnLine)
			lTravou := .T.
		Else
			If !(aCols[nX][Len(aCols[nX])])
				RecLock("SC7",.T.)
				lTravou := .T.
			EndIf
		EndIf		
		If lTravou		
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Efetua a Exclusao do Item                                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (aCols[nX][Len(aCols[nX])] .Or. lDeleta)
			    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso integrada ao Portal MarketPlace, libera a SC                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        		If lMktPlace .And. AllTrim(SC7->C7_RESIDUO) <> "S" .And. !Empty(SC7->C7_ACCNUM)
        			cDocACC := SC7->C7_NUM
       				dbSelectArea("SC1")
        			dbSetOrder(1)
        			dbSeek(xFilial("SC1")+SC7->(C7_NUMSC+C7_ITEMSC))
        			While !SC1->(EOF()) .And. SC1->(C1_FILIAL+C1_NUM+C1_ITEM) == xFilial("SC1")+SC7->(C7_NUMSC+C7_ITEMSC)
       					RecLock("SC1",.F.)
       					SC1->C1_ACCPROC := '1'
       					SC1->C1_ACCNUM  := Space(Len(SC1->C1_ACCNUM))
       					SC1->C1_ACCITEM := Space(Len(SC1->C1_ACCITEM))
       					MsUnLock()
       					SC1->(dbSkip())
       				End
       				dbSelectArea("SC7")
        		EndIf			
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Efetua a Exclusão do Rateio³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
                If AliasInDic("SCH")
    				aAreaSCH := GetArea()
					If (nY	:= aScan(aColsSCH,{|x| x[1] == SC7->C7_ITEM})) > 0
						For nZ := 1 To Len(aColsSCH[nY][2])                             				
								SCH->(DbSetOrder(1)) //CH_FILIAL+CH_PEDIDO+CH_FORNECE+CH_LOJA+CH_ITEMPD+CH_ITEM
								If SCH->(MsSeek(xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA+SC7->C7_ITEM+GdFieldGet("CH_ITEM",nz,NIL,aHeadSCH,ACLONE(aColsSCH[NY,2]))))
					  					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
										//³Contabilizacao e lancamento orcamentario  para estorno do rateio do pedido de compra³
										//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
										If nTipoPed != 2
									  		PcoDetLan("000052","08","MATA121",.T.)  
								  		Else
									  		PcoDetLan("000053","04","MATA122",.T.)
								  		EndIf
	
								  		If nHdlPrv > 0 .And. !Empty(SC7->C7_DTLANC)
								  			nTotalCtb	+= DetProva(nHdlPrv,"65A","MATA120",cLoteCtb,,,,,,,,,{"SCH",SCH->(RECNO())})
								        EndIf 
									RecLock("SCH",.F.)
									SCH->(dbDelete())
									MsUnlock()
                                EndIf
						Next nZ
					EndIf
					RestArea(aAreaSCH)
                EndIf
                
				MaAvalPC("SC7",3,(nX == Len(aCols)))
					SX2->( dbSetOrder( 1 ) ) 
						If SX2->(dbSeek("SC7"))  
							If !Empty(SX2->X2_UNICO)
                  		cUnico   := SX2->X2_UNICO 
		   					cCodEnt  := &cUnico 
								MsDocGrv("SC7",cCodEnt,,.T.)
        					Endif
             		Endif   
             		
        		//Caio.Santos - 11/01/13 - Req.72
				If lPrjCni
					RSTSCLOG("PED",2,/*cUsrWF*/,SC7->(C7_NUM+C7_ITEM))
				EndIf
             		
				dbDelete()
				MsUnlock()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso o PC tenha sido gerado por sugestao de compras reabre a sugestao    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
				If lDeleta .And. nX == Len(aCols)
					SFJ->(dbSetOrder(2))
					If SFJ->(dbSeek(xFilial("SFJ")+ca120Num))
						RecLock("SFJ",.F.)
						SFJ->FJ_SOLICIT:=""
						SFJ->FJ_FORNECE:=""
						SFJ->FJ_LOJA   :=""
						SFJ->FJ_FILENT :=""
						SFJ->FJ_TIPGER :=""
						SFJ->FJ_COND   :=""
						MsUnlock()
						SDF->(MsSeek(xFilial("SDF")+SFJ->FJ_CODIGO))
						While (SDF->DF_CODIGO == SFJ->FJ_CODIGO) .and. xFilial("SDF")==SDF->DF_FILIAL .and. ! SDF->(Eof())
							RecLock("SDF",.F.)
							SDF->DF_FLAG    := "A"
							SDF->(MsUnlock())
							SDF->(DbSkip())
						EndDo
					EndIf
				EndIf
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza os dados contidos na GetDados                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nY := 1 To Len(aHeader)
					If aHeader[nY][10] <> "V"  .And. Trim(aHeader[nY][2]) != "C7_USERLGI" .And. Trim(aHeader[nY][2]) != "C7_USERLGA" .And. IIf(lA120QUJE,.T.,Trim(aHeader[nY][2]) != "C7_QUJE")
						SC7->(FieldPut(FieldPos(aHeader[nY][2]),aCols[nX][nY]))
					EndIf
				Next nY	
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza os Campos do Cabecalho/Rodape          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				SC7->C7_NUM     := cA120Num
				SC7->C7_FILIAL  := xFilial("SC7")
				SC7->C7_FILENT  := xFilEnt(cFilialEnt)
				If SC7->(FieldPos("C7_FISCORI")) > 0 .And. Empty(SC7->C7_FISCORI)
					If l120Auto
						SC7->C7_FISCORI := SC7->(RetFISCORI(C7_ITEM,C7_PRODUTO))
					Else
						SC7->C7_FISCORI := SC7->C7_FILIAL
					EndIf
				EndIf
				SC7->C7_TIPO    := nTipoPed
				SC7->C7_EMISSAO := dA120Emis
				SC7->C7_FORNECE := cA120Forn
				SC7->C7_LOJA    := cA120Loj
				SC7->C7_COND    := cCondicao
				SC7->C7_CONTATO := cContato
				SC7->C7_MOEDA   := nMoedaped
				SC7->C7_TxMoeda := nTxMoeda
				SC7->C7_REAJUST := cReajuste
				SC7->C7_DESC1   := nDesc1
				SC7->C7_DESC2   := nDesc2
				SC7->C7_DESC3   := nDesc3
				SC7->C7_COND    := cCondicao
				SC7->C7_MSG 	:= cMSG								
				SC7->C7_IPIBRUT := "B"
				SC7->C7_TPFRETE := cTpFrete

				If SuperGetMV("MV_TPOPDOC",.F.,.F.)
					SC7->C7_TPOP := cTpOP
				EndIf    
				
				//Rodrigo Guerato - 16/01/13 - Req.72
				If lPrjCni
					RSTSCLOG("PED",1,/*cUsrWF*/,IIf(Type("cA120Num")=="C",cA120Num+aCols[nX][aScan(aHeader,{|x| AllTrim(x[2])=="C7_ITEM"})],Nil))
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		   		//³ cNumPCWS - Variavel utilizada na integracao com o RM Solum para   ³
		   		//³            recuperar o numero do PC gerada pela rotina Automatica.³
		   		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If Type('cNumPCWS') <> "U"
					cNumPCWS := cA120Num
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ C7_ESTOQUE - campo para controlar o B2_SALPEDI           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
				If lSb1TES
					SF4->(dbSetOrder(1))
					If SF4->(MsSeek(xFilial("SF4")+aCols[nX,nPosTes]))
	     				SC7->C7_ESTOQUE := SF4->F4_ESTOQUE
	     			EndIf
				EndIf
				
				If lNaturez
					SC7->C7_NATUREZ := cCodNatu
				EndIf
				If lProvEnt
		 //			Replace C7_PROVENT	With aCols[nX,nPosProv]
				    SC7->C7_PROVENT := aCols[nX,nPosProv]
				EndIf
				If cPaisLoc == "PTG"                           
					SC7->C7_LIQIMP := c120LiqImp
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza os Campos tratados pela funcao Fiscal  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ		
				SF4->(MaFisWrite(2,"SC7",nX))
				SF4->(MaAvalPC("SC7",1,nX==Len(aCols),NIL,Nil,MV_PAR01==1,bCtbOnLine,,MV_PAR08==2))
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ So Atualiza o valor da nova liberacao se o item nao possue Residuo Eliminado³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If C7_RESIDUO <> "S"	
					n120Totlib += MaFisRet(nX,"IT_TOTAL")
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se deve gerar o arquivo de pedidos bloqueados   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If SC7->C7_QUJE < SC7->C7_QUANT
					If (SuperGetMv("MV_APRPCEC",.F.,.F.)) .And. FindFunction("MaEntCtb") 
						SC7->C7_CONAPRO := "B"  
					ElseIf Empty(SC7->C7_APROV)
						SC7->C7_CONAPRO := "L"     
					Else
						SC7->C7_CONAPRO := "B"
					EndIf
					SC7->C7_ENCER   := Space(len(SC7->C7_ENCER))
					lGeraSCR := .T.
				EndIf  
				
				If lPrjCni
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Rateio financeiro                                  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SC7->C7_RATFIN := cRatFin  // 1 = Sim; 2 = Nao
					
					//Caio.Santos - 11/01/13 - Req.72
					RSTSCLOG("LIB",2,/*cUsrWF*/)
     			EndIf

 				// Na inclusao do pedido, se foi assinalado Sim para o rateio, mas não foi colocado nenhum percentual,  
 				// força o campo c7_rateio como Não.
 				//
 				
   			                
                If  Empty(aColsSCH)  .or.  (Len(aColsSCH) > 0 .And. Empty(aColsSCH[1][2]))
               	    SC7->C7_RATEIO := '2'
                Endif
                  

				MsUnlock()				
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se removeu residuo, envia mensagem MarketPlace ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lMktPlace .And. AllTrim(SC7->C7_RESIDUO) == "S" .And. !Empty(SC7->C7_ACCNUM) 
					cDocACC := SC7->C7_NUM
       				SC1->(dbSetOrder(1))
       				SC1->(dbSeek(xFilial("SC1")+SC7->(C7_NUMSC+C7_ITEMSC)))
       				While !SC1->(EOF()) .And. SC1->(C1_FILIAL+C1_NUM+C1_ITEM) == xFilial("SC1")+SC7->(C7_NUMSC+C7_ITEMSC)
       					RecLock("SC1",.F.)
       					SC1->C1_ACCPROC := '2'
       					SC1->C1_ACCNUM := Space(Len(SC1->C1_ACCNUM))
       					SC1->C1_ACCITEM := Space(Len(SC1->C1_ACCITEM))
       					MsUnLock()
       					SC1->(dbSkip())
       				End
        		EndIf

				If AliasInDic("SCH") 	
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Atualizacao do rateio dos itens do Pedido de Compras                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					SCH->(DbSetOrder(1)) //CH_FILIAL+CH_PEDIDO+CH_FORNECE+CH_LOJA+CH_ITEMPD+CH_ITEM					
					If (nY	:= aScan(aColsSCH,{|x| x[1] == SC7->C7_ITEM})) > 0
						For nZ := 1 To Len(aColsSCH[nY][2])
							nItemSCH := aScan(aHeadsch, {|x| AllTrim (x[2])=="CH_ITEM"})
							cItemSCH := aColsSCH[nY][2][nZ][nItemSCH]
							lAchou := SCH->(MsSeek(xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA+SC7->C7_ITEM+cItemSCH))
							If !aColsSCH[nY,2,nZ,nUsadoSCH+1]
								RecLock("SCH",!lAchou)
								For nW := 1 To nUsadoSCH
									If aHeadSCH[nW][10] <> "V"
										SCH->(FieldPut(FieldPos(aHeadSCH[nW][2]),aColsSCH[nY][2][nZ][nW]))
									EndIf
								Next nW
								SCH->CH_FILIAL	:= xFilial("SCH")
								SCH->CH_PEDIDO	:= SC7->C7_NUM
								SCH->CH_FORNECE	:= SC7->C7_FORNECE
								SCH->CH_LOJA	:= SC7->C7_LOJA
								SCH->CH_ITEMPD	:= SC7->C7_ITEM
								MsUnlock()
                                
			  					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Contabilizacao e lancamento orcamentario  para inclusao do rateio do pedido de compra³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
								If nTipoPed != 2
							  		PcoDetLan("000052","08","MATA121")  
						  		Else
							  		PcoDetLan("000053","04","MATA122")
						  		EndIf
								  		
								If lCtbOnLine .and. lLctPadRat
									nTotalCtb	+= DetProva(nHdlPrv,"659","MATA120",cLoteCtb,,,,,,,,,{"SCH",SCH->(RECNO())})
								EndIf			
							ElseIf lAchou
								RecLock("SCH",.F.)
								SCH->(dbDelete())
								MsUnlock()	
							EndIf
						Next nZ
						
						If ALTERA                                                                                                             
						    //.. Exclui do BD os rateios que foram marcados para delecao 
							SCH->(MsSeek(xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA+SC7->C7_ITEM ))    
							While !SCH->(EOF()) .and. (xFilial("SCH")+SC7->C7_NUM+SC7->C7_FORNECE+SC7->C7_LOJA+SC7->C7_ITEM==SCH->CH_FILIAL+SCH->CH_PEDIDO+SCH->CH_FORNECE+SCH->CH_LOJA+SCH->CH_ITEMPD)
								If !aScan(aColsSCH[nY][2],{|x| x[nItemSCH] == SCH->CH_ITEM}) > 0
							  		
									RecLock("SCH",.F.)
									SCH->(dbDelete())
									MsUnlock()
									
								EndIf	
								SCH->(DbSkip())
							Enddo    
						EndIf
						
					EndIf    
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Efetua Tratamento para Pedidos Gerados por Central de Compras ³
				//³ ou Alteracao no Pedido de Venda vinculado ao Pedido de Compras³
				//| Quando se tratar de uma Previsão de Entrada, vincula o pedido |
				//| de compra ao pedido de venda que originou o documento         |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				if (IsInCallStack( "MATA177" ) .And. IsInCallStack( "A177GrvDist" )) .Or. IsInCallStack( "MATA410" ) 
					If SC6->( FieldPos('C6_PEDCOM') ) > 0 .And. SC6->( FieldPos('C6_ITPC') ) > 0
						SC6->( DbSetOrder(2) ) //--C6_FILIAL+C6_PRODUTO+C6_NUM+C6_ITEM
						If SC6->( DbSeek( SC5->C5_FILIAL + SC7->C7_PRODUTO + SC5->C5_NUM ) )
							RecLock( 'SC6', .F. )
								SC6->C6_FILPED := SC7->C7_FILIAL
								SC6->C6_PEDCOM := SC7->C7_NUM
								SC6->C6_ITPC   := SC7->C7_ITEM
							SC6->( MsUnLock() )
						EndIf
					EndIf
				EndIf
			                                  
 				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada: MT120G2 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				IF ExistBlock("MTA120G2",,.T.)
					ExecBlock("MTA120G2",.F.,.F.,aRetG1)
				EndIf

				If lMta120G3
					lGeraCRG3 := ExecBlock("MTA120G3",.F.,.F.,{aRetG1,lGeraSCR})
					If Valtype(lGeraCRG3) == "L"
						lGeraSCR := lGeraCRG3
					Endif
				EndIf
			EndIf
		EndIf
	End Transaction
Next nX

If lUsaACC .And. (SC7->(FieldPos("C7_ACCPROC")) > 0) .And. lPedACC
	MsgRun(STR0170,STR0076,{|| Webb506("SC7",NIL,cA120Num,ALTERA)})	//Aguarde, Enviando os itens do pedido de compra para portal ACC.
EndIf

If lGrade
	For nLoop:=1 to Len(oGrade:aRecno)
		For nLoop2:=1 to len(oGrade:aRecno[nLoop])
			For nLoop3:=1 to len(oGrade:aRecno[nloop,nLoop2])
				If Valtype(oGrade:aRecno[nLoop,nLoop2,nLoop3])=="N"
					nRecno:=oGrade:aRecno[nLoop,nLoop2,nLoop3]
				Else
					nRecno:=0
				Endif
				If  nRecno>0

					If Ascan(acols,{|x| x[nPosRecno]==nRecno})==0

						dbSelectArea("SC7")
						MsGoto(nRecno)

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Antes de atualizar o Pedido de Compras SC7 com a alteracao ³
						//³ atual, grava o SCY com os dados do SC7 gerando assim um    ³
						//³ historico com as versoes anteriores da alteracoes do PC.   ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						RecLock("SCY",.T.)
						dbSelectArea("SCY")
						For nA := 1 to SCY->(FCount())
							nB := SC7->(FieldPos("C7"+SubStr(SCY->(FieldName(nA)),3)))
							If ( nB <> 0 )
								FieldPut(nA,SC7->(FieldGet(nB)))
							EndIf
						Next nA
						
						SCY->CY_VERSAO := cVerSCY  
						
						//Caio.Santos - 11/01/13 - Req.72
						If lPrjCni
							RSTSCLOG("PED",2,/*cUsrWF*/,SC7->(C7_NUM+C7_ITEM))
						EndIf
						
						RecLock("SC7",.F.)
						dbDelete()
						MsUnlock()

					Endif	
				Endif
			Next
		Next
	Next
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ao excluir o PC verifica se ha versao do PC no historico de alteracoes (SCY) e exclui.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lDeleta 
	dbSelectArea("SCY")
	dbSetOrder(1)
	If MsSeek(xFilial("SCY")+cA120Num)
		Do While ( !Eof() .And. CY_FILIAL == xFilial("SCY") .And. CY_NUM == cA120Num )
			Reclock("SCY",.F.,.T.)
			dbDelete()
			MsUnlock()
			dbSkip()
		EndDo
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se na alteracao existe grupo de compras ou grupo de aprovador preenchido ³
//³para preservar nos novos itens de pedido											 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aAreaBkp:= GetArea()
If ALTERA
	DbSelectArea("SC7")
	DbSetOrder(1)
	If MsSeek(xFilial("SC7")+cA120Num) .And.;
	C7_FILIAL == xFilial("SC7") .And. C7_NUM == cA120Num .And. !Empty(C7_GRUPCOM) 
		If Empty(cGrComPad) .And. !Empty(C7_GRUPCOM) 
			cGrComPad:= C7_GRUPCOM
			lAltGrup:= .T.
		EndIf
	EndIf
	If MsSeek(xFilial("SC7")+cA120Num) .And.;
	C7_FILIAL == xFilial("SC7") .And. C7_NUM == cA120Num .And. !Empty(C7_APROV)
		If Empty(cGrupo) .Or. (!Empty(cGrupo) .And. cGrupo <> C7_APROV)
			cGrupo:= C7_APROV
			lAltAprov:= .T.
		EndIf
	EndIf	
EndIf
RestArea(aAreaBkp)   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se medicao do contrato possui alcada            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If INCLUI .And. l120Auto   
  nX:=aScan(aAutoCab,{|x| AllTrim(x[1]) == "ALCADA"}) 
  
  If nX>0
	  cGCTAlc := aAutoCab[nX][2] 
  EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gera arquivo de controle de alcadas SCR.                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Begin Transaction

	If (lGeraSCR .And. ((nTipoPed == 2 .And. lAeAprov) .Or. nTipoPed <> 2)) .And. n120TotLib > 0.and. (cGCTAlc== "N" .And. FunName() != "CNTA150" )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Limpa o Filtro do SCR caso ele exista                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SCR")
		DbClearFilter()
		aAreaSC7:= SC7->(GetArea())	
		dbSelectArea("SC7")
		If !lDeleta
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o grupo de aprovacao do Comprador.                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			dbSelectArea("SY1")
			dbSetOrder(3)
			If MsSeek(xFilial()+RetCodUsr())
				If !lAltAprov
					cGrupo		:= If(!Empty(Y1_GRAPROV),SY1->Y1_GRAPROV,cGrupo)
				EndIf
				If !lAltGrup
					cGrComPad	:= If(!Empty(Y1_GRUPCOM),SY1->Y1_GRUPCOM,Space(Len(SC7->C7_GRUPCOM)))
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada para alterar o Grupo de Aprovacao.          								³
			//³ Obs.: Na alteracao do pedido, pode ser usado para alterar o saldo do mesmo (var. n120TotLib)³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("MT120APV")
			    nGrp:=0
				cMT120APV := ExecBlock("MT120APV",.F.,.F.)
				If ValType(cMT120APV) == "C"
					cGrupo := cMT120APV
					nGrp:=1
				EndIf
			EndIf
		EndIf
		
		//Se nao executar o Pe: MT120APV 
		If nGrp==0
			cGrupo:= If(Empty(SC7->C7_APROV),cGrupo,SC7->C7_APROV)  
		EndIf
		
		If Altera .Or. lDeleta // Estorna as liberacoes
			MaAlcDoc({cA120Num,if(nTipoPed == 1,"PC","AE"),n120TotLib,,,cGrupo,,SC7->C7_MOEDA,SC7->C7_TXMOEDA,SC7->C7_EMISSAO},SC7->C7_EMISSAO,3)
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Cria alcada de aprovacao do IP ou PC ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !lPrjCni .And. SuperGetMv("MV_APRPCEC",.F.,.F.) .And. FindFunction("MaEntCtb")
			lBloqIP := MaEntCtb("SC7","SCH",cA120Num,"IP",aHeader,aCols,aHeadSCH,aColsSCH,If(lDeleta,3,If(Altera,2,1)),SC7->C7_EMISSAO)
		EndIf
		If !lDeleta .And. !lBloqIP .And. !Empty(cGrupo) 
			lFirstNiv := MaAlcDoc({cA120Num,if(nTipoPed == 1,"PC","AE"),n120TotLib,,,cGrupo,,SC7->C7_MOEDA,SC7->C7_TXMOEDA,SC7->C7_EMISSAO},,1)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Efetua a gravacao do campo de controle de aprovacao C7_CONAPRO  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			cBanco := Alltrim(Upper(TCGetDb()))
			SC7->(DBCOMMIT())
			cQuery := "UPDATE "+RetSqlname("SC7")+" "
			cQuery += "SET C7_GRUPCOM = '"+cGrComPad+"' "
			cQuery += "WHERE C7_FILIAL='"+xFilial("SC7")+"' AND "
			cQuery += "C7_NUM='"+cA120Num+"' AND "
			cQuery += "C7_GRUPCOM = '"+Space(Len(SC7->C7_GRUPCOM))+"' "
			If TcSrvType() <> "AS/400"
				cQuery += "AND D_E_L_E_T_=' ' "
			Else
				cQuery += "AND @DELETED@=' ' "
			Endif

			TcSqlExec(cQuery)

			cQuery := "UPDATE "+RetSqlname("SC7")+" "
			cQuery += "SET C7_APROV = '"+cGrupo+"' "
			cQuery += "WHERE C7_FILIAL='"+xFilial("SC7")+"' AND "
			cQuery += "C7_NUM='"+cA120Num+"' AND "
			cQuery += "C7_APROV = '"+Space(Len(SC7->C7_APROV))+"' "
			If TcSrvType() <> "AS/400"
				cQuery += "AND D_E_L_E_T_=' ' "
			Else
				cQuery += "AND @DELETED@=' ' "
			Endif

			TcSqlExec(cQuery)

			cQuery := "UPDATE "+RetSqlname("SC7")+" "
			If !lFirstNiv
				cQuery += "SET C7_CONAPRO = 'B' "
			Else
				cQuery += "SET C7_CONAPRO = 'L' "
			EndIf
			cQuery += "WHERE C7_FILIAL='"+xFilial("SC7")+"' AND "
			cQuery += "C7_NUM='"+cA120Num+"' AND "
			cQuery += "C7_APROV <> '"+Space(Len(SC7->C7_APROV))+"' "
			If TcSrvType() <> "AS/400"
				cQuery += "AND D_E_L_E_T_=' ' "
			Else
				cQuery += "AND @DELETED@=' ' "
			Endif

			TcSqlExec(cQuery)

			If Substr(cBanco,1,6) == "ORACLE" .And. !__TTSInUse
				TcSqlExec("COMMIT")
			Endif
		#ELSE
			dbSelectArea("SC7")
			dbSetOrder(1)
			MsSeek(xFilial("SC7")+cA120Num)
			While !Eof() .And. C7_FILIAL+C7_NUM == xFilial("SC7")+cA120Num
				RecLock("SC7",.F.)
				SC7->C7_GRUPCOM	:= If(Empty(C7_GRUPCOM),cGrComPad,C7_GRUPCOM)
				If !lFirstNiv
					SC7->C7_APROV := If(Empty(C7_APROV),cGrupo,C7_APROV)
					SC7->C7_CONAPRO := If(!Empty(C7_APROV),"B",C7_CONAPRO)
				Else
					SC7->C7_APROV := If(Empty(C7_APROV),cGrupo,C7_APROV)
					SC7->C7_CONAPRO := If(!Empty(C7_APROV),"L",C7_CONAPRO)
				EndIf
				MsUnlock()
				dbSkip()
			EndDo
		#ENDIF
		RestArea(aAreaSC7)

		If ExistBlock("WFW120P")
			ExecBlock("WFW120P",.f.,.f.,xFilial("SC7")+ca120Num)
		EndIf

	EndIf

	If ExistBlock("MT120F")
		ExecBlock("MT120F",.f.,.f.,xFilial("SC7")+ca120Num)
	EndIf

    If cPaisLoc $ "BRA|ANG|MEX" .AND. Type( "nAutoAdt" ) == "N" .AND. ( nAutoAdt==3 .OR. nAutoAdt==4 )
       IF Len(aAdtPC)>0 
          If nAutoAdt==3 .and. A120UsaAdi( SC7->C7_COND,@cCondPAdt) .and. a120AdtSld(SC7->C7_NUM,aAdtPC,nAutoAdt)>0
             FPedAdtGrv("P", 1, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)					
          Endif
          If nAutoAdt==4 .and. A120UsaAdi( SC7->C7_COND,@cCondPAdt )
             If lCkAdtFR3(SC7->C7_NUM,nAutoAdt)==0
                If a120AdtSld(SC7->C7_NUM,aAdtPC,nAutoAdt,0)>0 //Verifica saldo sem apresentar HELP
                   FPedAdtGrv("P", 2, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)					
                   FPedAdtGrv("P", 1, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)
                  Else
                   If a120AdtSld(SC7->C7_NUM,aAdtPC,nAutoAdt,2)>0 //Verifica se ao excluir ADT haverá saldo para nova inclusao
                      FPedAdtGrv("P", 2, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)					
                      If a120AdtSld(SC7->C7_NUM,aAdtPC,nAutoAdt)>0
                         FPedAdtGrv("P", 1, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)
                      Endif
                   Endif   
                Endif
             Else
               Help(" ",1,"A120ADTNOALT") //NAO ALTERA adiantamento
             Endif 
            Else
             if nAutoAdt==4 .and. !Empty(cCondPOld) .and. A120UsaAdi( cCondPOld,@cCondPAdt ) 
                If lCkAdtFR3(SC7->C7_NUM,nAutoAdt)==0
                   FPedAdtGrv("P", 2, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)					
                  Else
                   Help(" ",1,"A120ADTNOALT") //NAO ALTERA adiantamento
                Endif   
             Endif   
          Endif
         Else 
          If nAutoAdt==4 .And. AliasInDic("FIE")
		       aRecnoSE2RA := FPedAdtPed("P",{SC7->C7_NUM}, .F.,0)
		       If Len(aRecnoSE2RA)<>0
		          If lCkAdtFR3(SC7->C7_NUM,nAutoAdt)==0
		             FPedAdtGrv("P", 2, SC7->C7_NUM, aRecnoSE2RA)					
		            Else
		             Help(" ",1,"A120ADTNOALT") //NAO ALTERA adiantamento
		          Endif   
		       Endif   
		    Endif   
       Endif
    Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Envia e-mail na inclusao/exclusao do Pedido de Compras.          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Inclui .OR. lCopia
		SC7->(MsSeek(xFilial("SC7")+cA120Num))
		MEnviaMail("037",{SC7->C7_NUM,SC7->C7_NUMCOT,SC7->C7_APROV,SC7->C7_CONAPRO,Subs(cUsuario,7,15)})
	ElseIf lDeleta
		MEnviaMail("043",{cA120Num})
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Apaga o SALDO do relacionamento com Adiantamentos³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		#IFDEF TOP
			If A120UsaAdi(SC7->C7_COND,@cCondPAdt) .and. Type( "nAutoAdt" ) == "N" .AND. AliasInDic("FIE")
				aRecnoSE2RA := FPedAdtPed("P",{SC7->C7_NUM}, .F.,nAutoAdt) 
				FPedAdtGrv("P", 2, SC7->C7_NUM, aRecnoSE2RA,,,,aAdtPC,nAutoAdt)
			EndIf
      #ENDIF
	Endif	

End Transaction    

If l120Auto .AND. INCLUI .And. Type("cMat120Num") # "U"
	cMat120Num := cA120Num//variavel carrega na mati120 que vai receber o valor do C7_NUM criado no pedido
Endif					

If FindFunction( "GETROTINTEG" ) .And. !l120Auto .And. !(SuperGetMv("MV_MKPLACE",.F.,.F.)) .And. SC7->C7_CONAPRO $ " ,L"
	If (INCLUI .Or. ALTERA) 
		If SC7->(MsSeek(xFilial("SC7")+cA120Num))
			 FwIntegDef( 'MATA120' ) 
		Endif
	ElseIf !SC7->(MsSeek(xFilial("SC7")+cA120Num))
		FwIntegDef( 'MATA120' )
	Endif
Endif                  


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Integracao SISCOSERV (Parceiro TRADE-EASY)       |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If INCLUI .Or. lCopia
	IntPCSServ(cA120Num,3)
ElseIf ALTERA	
	IntPCSServ(cA120Num,4)
ElseIf lDeleta
	IntPCSServ(cA120Num,5)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Libera a pedido de compra³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SuperGetMv("MV_APRPCEC",.F.,.F.) .And. FindFunction("MaEntCtb") .And. !lBloqIP
	dbSelectArea("SC7")
	dbSetOrder(1)
	MsSeek(xFilial("SC7")+cA120Num)
	While ( !Eof() .And. SC7->C7_FILIAL == xFilial("SC7") .And. SC7->C7_NUM == cA120Num )		
		RecLock("SC7",.F.)	   
		SC7->C7_CONAPRO := "L"
		SC7->( MsUnLock() )
		SC7->( dbSkip() )
	End		
EndIf

RestArea(aArea)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120MovCampos³ Autor ³ Jose Lucas         ³ Data ³ 26.07.93 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Move os campos das solicitacoes de compra em aberto.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A120MovCampos()					                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Quantidade                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120MovCampos(nQuant)

Local aArea		:= GetArea()
Local aAreaSB1	:= SB1->(GetArea())
Local nPosQtd   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosQtd2  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QTSEGUM"})
Local nX        := 0

DEFAULT nQuant	:= 0

SB1->(dbSetOrder(1))
If nTipoPed !=	2
	SB1->(MsSeek(xFilial("SB1")+SC1->C1_PRODUTO))
	For nX := 1 To Len(aHeader)
		Do Case
		Case Trim(aHeader[nX][2]) == "C7_PRODUTO"
			aCols[n][nX] := SC1->C1_PRODUTO
			A120Produto(aCols[n][nX])
		Case Trim(aHeader[nX][2]) == "C7_NUMSC"
			aCols[n][nX] := SC1->C1_NUM
		Case Trim(aHeader[nX][2]) == "C7_ITEMSC"
			aCols[n][nX] := SC1->C1_ITEM
		Case Trim(aHeader[nX][2]) == "C7_LOCAL"
			aCols[n][nX] := SC1->C1_LOCAL
		Case Trim(aHeader[nX][2]) $ "C7_QUANT#C7_QTDSOL"
			If nQuant == 0
				aCols[n][nX] := SC1->C1_QUANT-SC1->C1_QUJE
			Else
				aCols[n][nX] := nQuant
			EndIf
		Case Trim(aHeader[nX][2]) == "C7_DESCRI"
			If Len(aCols[n][nX]) > Len(SC1->C1_DESCRI)
				aCols[n][nX] := SC1->C1_DESCRI+Space(Len(aCols[n][nX])-Len(SC1->C1_DESCRI))
			Else
				aCols[n][nX] := SubStr(SC1->C1_DESCRI,1,Len(aCols[n][nX]))
			EndIf
		Case Trim(aHeader[nX][2]) == "C7_OBS"
			If Len(aCols[n][nX]) > Len(SC1->C1_OBS)
				aCols[n][nX] := SC1->C1_OBS+Space(Len(aCols[n][nX])-Len(SC1->C1_OBS))
			Else
				aCols[n][nX] := SubStr(SC1->C1_OBS,1,Len(aCols[n][nX]))
			EndIf
		Case Trim(aHeader[nX][2]) == "C7_UM"
			aCols[n][nX] := SC1->C1_UM
		Case Trim(aHeader[nX][2]) == "C7_SEGUM"
			aCols[n][nX] := SC1->C1_SEGUM
		Case Trim(aHeader[nX][2]) == "C7_QTSEGUM"  
		    aCols[n][nX] := SC1->C1_QTSEGUM
			aCols[n][nX] := ConvUm(SB1->B1_COD,aCols[n][nPosQtd],aCols[n][nPosQtd2],2)
		Case Trim(aHeader[nX][2]) == "C7_DATPRF"
			aCols[n][nX] := SC1->C1_DATPRF
		Case Trim(aHeader[nX][2]) == "C7_CC"
			aCols[n][nX] := SC1->C1_CC
		Case Trim(aHeader[nX][2]) == "C7_ITEMCTA"
			aCols[n][nX] := SC1->C1_ITEMCTA
		Case Trim(aHeader[nX][2]) == "C7_CONTA"
			aCols[n][nX] := SC1->C1_CONTA
		Case Trim(aHeader[nX][2]) == "C7_GRUPCOM"
			aCols[n][nX] := SC1->C1_GRUPCOM
		Case Trim(aHeader[nX][2]) == "C7_CLVL"				
			aCols[n][nX] := Iif( Empty(SC1->C1_CLVL), SB1->B1_CLVL, SC1->C1_CLVL )
		Case Trim(aHeader[nX][2]) == "C7_SEQMRP"
			aCols[n][nX] := SC1->C1_SEQMRP
		Case Trim(aHeader[nX][2]) == "C7_OP"
			aCols[n][nX] := SC1->C1_OP
		EndCase
	Next nX
	FillCTBEnt("SC1")
Else	
	SB1->(MsSeek(xFilial("SB1")+SC3->C3_PRODUTO))
	For nX := 1 To Len(aHeader)
		Do Case
		Case Trim(aHeader[nX][2]) == "C7_PRODUTO"
			aCols[n][nX] := SC3->C3_PRODUTO
		Case Trim(aHeader[nX][2]) == "C7_NUMSC"
			aCols[n][nX] := SC3->C3_NUM
		Case Trim(aHeader[nX][2]) == "C7_ITEMSC"
			aCols[n][nX] := SC3->C3_ITEM
		Case Trim(aHeader[nX][2]) == "C7_LOCAL"
			aCols[n][nX] := SC3->C3_LOCAL
		Case Trim(aHeader[nX][2])$"C7_QUANT#C7_QTDSOL"
			If nQuant == 0
				aCols[n][nX] := SC3->C3_QUANT-SC3->C3_QUJE
			Else
				aCols[n][nX] := nQuant
			EndIf		
		Case Trim(aHeader[nX][2]) == "C7_DESCRI"
			aCols[n][nX] := PADR(SB1->B1_DESC,Len(SC7->C7_DESCRI))
		Case Trim(aHeader[nX][2]) == "C7_OBS"
			aCols[n][nX] := SC3->C3_OBS
		Case Trim(aHeader[nX][2]) == "C7_UM"
			aCols[n][nX] := SB1->B1_UM
		Case Trim(aHeader[nX][2]) == "C7_SEGUM"
			aCols[n][nX] := SB1->B1_SEGUM
		Case Trim(aHeader[nX][2]) == "C7_QTSEGUM"
			aCols[n][nX] := ConvUm(SB1->B1_COD,aCols[n][nPosQtd],aCols[n][nPosQtd2],2)
		Case Trim(aHeader[nX][2]) == "C7_DATPRF"
			aCols[n][nX] := dDataBase		
		Case Trim(aHeader[nX][2]) == "C7_CC"
			aCols[n][nX] := SB1->B1_CC
		Case Trim(aHeader[nX][2]) == "C7_ITEMCTA"
			aCols[n][nX] := SB1->B1_ITEMCC
		Case Trim(aHeader[nX][2]) == "C7_CONTA"
			aCols[n][nX] := SB1->B1_CONTA
		Case Trim(aHeader[nX][2]) == "C7_PRECO"
			aCols[n][nX] := SC3->C3_PRECO
		Case Trim(aHeader[nX][2]) == "C7_TOTAL"
			If nQuant == 0
				aCols[n][nX] := SC3->C3_TOTAL
			Else
				aCols[n][nX] := nQuant * SC3->C3_PRECO
			EndIf
		Case Trim(aHeader[nX][2]) == "C7_IPI"
			aCols[n][nX] := SC3->C3_IPI
		Case Trim(aHeader[nX][2]) == "C7_TAXAFOR"
			aCols[n][nX] := SC3->C3_TAXAFOR
		Case Trim(aHeader[nX][2]) == "C7_AVISTA"
			aCols[n][nX] := SC3->C3_AVISTA
		EndCase
	Next nX
	FillCTBEnt("SB1")

	If !Empty(SC3->C3_REAJUST)
		cReajuste := SC3->C3_REAJUST
		A120FormReaj(cReajuste,@cDescFor)
	EndIf
	If !Empty(SC3->C3_MSG)
		cMsg := SC3->C3_MSG
		A120FormDesc(cMsg,@cDescMsg)
	EndIf

	nMoedaPed := SC3->C3_MOEDA
	cDescMoed := SuperGetMv("MV_MOEDA"+AllTrim(Str(nMoedaPed,2)))		
	nTxMoeda  := If(!Empty(SC3->C3_TXMOEDA),SC3->C3_TXMOEDA,RecMoeda(dDataBase,nMoedaPed))
EndIf	
A120lTime()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Efetua a chamada do ponto de entrada                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MT120ISC" )
	ExecBlock( "MT120ISC", .F., .F. )
EndIf

RestArea(aAreaSB1)
RestArea(aArea)

Return NIL

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120EstCot³ Rev.  ³ Edson Maricate        ³ Data ³05.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Estornar todas as SC que geraram o pedido por cotacao      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A120ESTCOT()                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Numero da Cotacao                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120EstCot(cNum)

Local aArea    := GetArea()
Local aEstorno := {}
Local nQtdSC7  := SC7->C7_QTDSOL
Local nQuje    := 0
Local nCntFor  := 0

dbSelectArea("SC8")
dbSetOrder(3)
MsSeek(xFilial("SC8")+SC7->C7_NUMCOT+SC7->C7_PRODUTO+SC7->C7_FORNECE+SC7->C7_LOJA)

While ( !Eof() .And.xFilial("SC8") == SC8->C8_FILIAL .And.;
		SC7->C7_NUMCOT == SC8->C8_NUM    .And.;
		SC7->C7_PRODUTO== SC8->C8_PRODUTO.And.;
		SC7->C7_FORNECE== SC8->C8_FORNECE.And.;
		SC7->C7_LOJA   == SC8->C8_LOJA )

	If ( SC8->C8_NUMPED == SC7->C7_NUM .And. SC8->C8_ITEMPED==SC7->C7_ITEM )

		dbSelectArea("SC1")
		dbSetOrder(5)
		MsSeek(xFilial("SC1")+SC8->C8_NUM+SC8->C8_PRODUTO+SC8->C8_IDENT)
		While ( !Eof() .And. xFilial("SC1") == SC1->C1_FILIAL .And.;
				SC8->C8_NUM     == SC1->C1_COTACAO .And.;
				SC8->C8_PRODUTO == SC1->C1_PRODUTO .And.;
				SC8->C8_IDENT   == SC1->C1_IDENT )

			AADD(aEstorno,SC1->(RecNo()))

			dbSelectArea("SC1")
			dbSkip()
		EndDo

		RecLock("SC8")
		SC8->C8_OBS := "P.C. Cancel., S.C. Estornada"
		MsUnLock()

	EndIf

	dbSelectArea("SC8")
	dbSkip()

EndDo

For nCntFor := 1 To Len(aEstorno)

	If ( nQtdSC7 > 0 )
		dbSelectArea("SC1")
		MsGoto(aEstorno[nCntFor])

		nQuJe   := Min(SC1->C1_QUJE,nQtdSC7)
		nQtdSC7 -= nQuJe

		RecLock("SC1",.F.)
		SC1->C1_FORNECE := ""
		SC1->C1_LOJA 	:= ""
		SC1->C1_PEDIDO  := ""
		SC1->C1_ITEMPED := ""
		SC1->C1_QUJE    -= nQuje
		SC1->C1_COTACAO := IF(SC1->C1_QUJE > 0,SC1->C1_COTACAO,"")
		SC1->C1_IDENT   := IF(SC1->C1_QUJE > 0,SC1->C1_IDENT,"")
		MsUnLock()
	EndIf

Next nCntFor

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Ativa³ Autor ³ Edson Maricate         ³ Data ³ 12.12.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chama a pergunte                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A120Ativa()

pergunte("MTA120",.T.)

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120LinOk ³ Autor ³ Eveli Morasco         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica se a linha digitada esta' Ok                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Objeto a ser verificado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120LinOk(o)

Local aAux       := {}
Local aInfGrd    := {}
Local cProdRef   := ""                
Local cRvSB5	 := ""
Local cBlqSG5	 := ""
Local cFilSeekC1 := xFilial("SC1")  
Local cMedGCT    := ""
Local nPosPrd    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nRevisao   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_REVISAO"})
Local nPosItem   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})
Local nPosPrf    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_DATPRF"})
Local nPosQt     := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosPrc    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosNumSC  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItemSC := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosLocal  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_LOCAL"})
Local nPosVDesc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_VLDESC"})
Local nPosTotal  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"})
Local nPosConta  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CONTA"})
Local nPosCC	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"})
Local nPosCLVL	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CLVL"})
Local nPosItemCTA:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMCTA"})
Local nPosGrade  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_GRADE"})
Local nPosFilCen := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_FILCEN"})
Local nPosTes    := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_TES"})
Local nPosRateio := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_RATEIO"})
Local nPosEC05DB := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC05DB"}) 
Local nPosEC05CR := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC05CR"}) 
Local nPosEC06DB := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC06DB"}) 
Local nPosEC06CR := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC06CR"}) 
Local nPosEC07DB := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC07DB"}) 
Local nPosEC07CR := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC07CR"}) 
Local nPosEC08DB := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC08DB"}) 
Local nPosEC08CR := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC08CR"}) 
Local nPosEC09DB := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC09DB"}) 
Local nPosEC09CR := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_EC09CR"})
Local nPosOp     := aScan(aHeader,{|x| AllTrim(x[2])=="C7_OP"})
Local nFISCORI	 := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_FISCORI"})    
Local nTotped    := aValores[TOTPED]
Local nValDesc   := aValores[VALDESC]
Local nPosSCH    := 0
Local n_SaveLin  := n
Local nX		 := 0
Local nY		 := 0
Local nLinha     := 0     
Local nColuna    := 0     
Local nQTAglut   := 0   
Local nIt        := 0
Local lRet       := .T.
Local lRestInc   := IF(SuperGetMv("MV_RESTINC")=="S",.T.,.F.) 
Local lRevProd   := SuperGetMv("MV_REVPROD",.F.,.F.)         
Local lVer116    := (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11)
Local lRet120LOK := .T.
Local lReferencia:= .F.
Local lRet120L   := .T.
Local lM120PCOL  := ExistBlock("MT120PCOL")
Local lMT120Usr  := ExistBlock("MT120USR")
Local lGCT       := .F.
Local aEntid	 := {}
Local aEntid2	 := {}     

Local cxUsr	  := RetCodUsr() 
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()

lVldHead:= If(ValType(lVldHead) == "L",lVldHead, GetNewPar( "MV_VLDHEAD",.T. ) )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a permissao do armazem. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
	lRet := MaAvalPerm(3,{aCols[n][nPosLocal],aCols[n][nPosPrd]})
EndIf                               

If lRet .And. aCols[n][Len(aCols[n])]  // Verifica se esta deletado

	dbSelectArea("SC7")
	dbSetOrder(4)
	If MsSeek(xFilial("SC7")+aCols[n][nPosPrd]+cA120Num+aCols[n][nPosItem])
		If (C7_QUJE > 0) .Or. (C7_RESIDUO == "S") .Or. (C7_QTDACLA > 0)
			Help(" ",1,"A120NDEL")
			lRet := .F.
		EndIf
	EndIf
	
	// Verifica se pedido foi Aglutinado pelo Central de Compras //
	If AliasInDic("SDP") 
		dbSelectArea("SDP")
		dbSetOrder(4)
		If MsSeek(xFilial("SDP")+cFilialEnt+cA120Num+aCols[n][nPosItem])
			Help(" ",1,"A120PCEN")
			lRet := .F.    
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Nao Permite Alterar Pedido de Compras com Amarração com Pedido de Vendas    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SC7->(FieldPos("C7_FILCEN"))>0 .And. nPosFilCen>0        
	    If !Empty(aCols[n][nPosFilCen])
			dbSelectArea("SC6")
			dbSetOrder(10)
			If MsSeek(aCols[n][nPosFilCen]+cFilialEnt+cA120Num+aCols[n][nPosItem])
				Help(" ",1,"A120PCDT")
				lRet := .F.    
			EndIf
		EndIf
	EndIf
	
Else    
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//|Verifica se pedido de compras e originado do Gestao de Contratos ou via JOB  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Inclui
		If l120Auto .And. ProcH('MED_GCT') > 0 .And. !Empty(aAutoCab[ProcH('MED_GCT'),2])
			cMedGCT := aAutoCab[ProcH('MED_GCT'),2] 
		EndIf
	EndIf    
	
	lGCT := (FunName() $ "CNTA120|CNTA150|CNTA260" ) .Or. !Empty(cMedGCT)

	If lRet.And.(Empty(aCols[n][nPosPrd]).Or.Empty(aCols[n][nPosPrf]);
			.Or. Empty(aCols[n][nPosQt]) .Or. Empty(aCols[n][nPosPrc]) )
		Help(" ",1,"A12006")
		lRet := .F.
	EndIf

	If lRet.And.( (nTipoPed==2).And.Empty(aCols[n][nPosNumSC]) )
		Help(" ",1,"A120AE")
		lRet := .F.
	EndIf

	If lRet.And.( (nTipoPed==2).And.Empty(aCols[n][nPosItemSC]) )
		Help(" ",1,"A120AE")
		lRet := .F.
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Soma o Pedido Aglutinado por Central de Compras para Entrega na Filial Centralizadora |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. AliasInDic("SDP") 
		dbSelectArea("SDP")
		dbSetOrder(4)
		If MsSeek(xFilial("SDP")+cFilialEnt+cA120Num+aCols[n][nPosItem])
			While !Eof().and.xFilial("SDP")+cFilialEnt+cA120Num+aCols[n][nPosItem] == SDP->DP_FILIAL+DP_FILCEN+DP_PEDCEN+DP_ITPCCN
				nQTAglut += SDP->DP_QUANT
				SDP->( DbSkip() )
			Enddo
			If ((aCols[n][nPosQt])-nQTAglut)<>0
 				Help(" ",1,"A120PCEN")
				lRet := .F.    
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Validacao para Itens de Grade                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lReferencia := MatGrdPrrf(@(aCols[n][nposPrd]))
	If lRet .And. lReferencia

		If MaGrade() .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade)>0

			cItemGrd := "000"
			cProdRef := aCols[n][nPosPrd]

			If ( !Empty(cProdRef) )
				oGrade:nPosLinO := n

				If ( Len(oGrade:aHeadGrade)>0 .And. oGrade:aHeadGrade[n][1] == "R" ) .And. aCols[n, nPosGrade]  == "S"
					For nLinha := 1 To Len(oGrade:aColsGrade[n])
						For nColuna := 2 To Len(oGrade:aHeadGrade[n])

							If(oGrade:aColsFieldByName("C7_QUANT",n,nLinha,nColuna) <> 0) .And. ;
							If( Len(aCols[1])==Len(aHeader) , !aCols[n][Len(aHeader)+1] , .T. )
		
								cProdRef := aCols[n][nPosPrd]
		
								If !Empty(cProdRef)
									aInfGrd := {cProdRef}
									Exit
								EndIf
							Endif
						Next nColuna
					Next nLinha
				Endif
			Endif
		EndIf
				
		If lRet .And. Empty(aInfGrd) .Or. aInfGrd[1]== Nil
			Aviso(STR0133,STR0134,{"Ok"})
			lRet := .F.
		Endif

	Endif

	If lRet .And. !Empty(aCols[n][nPosNumSC])

		If ( lReferencia )
			If ( nPosGrade > 0 )
				aCols[n][nPosGrade] := "S"
				lReferencia := .T.
			EndIf
		Else
			If ( nPosGrade > 0 )
				aCols[n][nPosGrade] := " "
			EndIf
		EndIf

		If !lReferencia

			If nTipoPed!=2
				//-- Tratamento para compra centralizada (campo fora de uso)
				If l120Auto
					If !(Empty(nFISCORI) .Or. Empty(aCols[n,nFISCORI]))
						cFilSeekC1 := aCols[n,nFISCORI]
					Else					
						cFilSeekC1 := RetFISCORI(aCols[n,nPosItem],aCols[n,nPosPrd])
					EndIf
				EndIf
				
				dbSelectArea("SC1")
				dbSetOrder(2)
				If !MsSeek(xFilial("SC1",cFilSeekC1)+aCols[n][nPosPrd]+aCols[n][nPosNumSC]+aCols[n][nPosItemSC])
					Help(" ",1,"A12005")
					lRet := .F.
				EndIf
			Else
				dbSelectArea("SC3")
				dbSetOrder(3)
				If !MsSeek(xFilial("SC3")+aCols[n][nPosPrd]+aCols[n][nPosNumSC]+aCols[n][nPosItemSC])
					Help(" ",1,"A12005")
					lRet := .F.

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Validacao: AE c/ Itens de contrato para outro fornecedor (MV_CTRSELF): DESdeletou a linha vinculada ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				ElseIf nTipoPed == 2 .And. !GetNewPar("MV_CTRSELF",.T.) .And. SC3->(C3_FORNECE+C3_LOJA) <> ca120Forn+ca120Loj
					Help(" ",1,"A120AESELF")
					lRet := .F.

				Endif
			EndIf

		EndIf
		
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Quando Informado Armazem em branco considerar o B1_LOCPAD       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. Empty(aCols[n][nPosLocal])
		SB1->(dbSetOrder(1))
		If SB1->(MsSeek(xFilial("SB1")+aCols[n][nPosPrd]))
			aCols[n][nPosLocal] := SB1->B1_LOCPAD
			If Valtype(l120Auto) == "L" .And. !l120Auto
				Aviso(STR0102,STR0129,{"Ok"}) //"O Armazem informado e Invalido, o campo sera ajustando com o armazem padrão do cadastro de produtos"
			EndIf
		EndIf
	EndIf

	If lRet.And.!Empty(aCols[n][nPosPrd])

		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+aCols[n][nPosTes]))
		If SF4->F4_ESTOQUE == "S" .Or. Empty(aCols[n][nPosTes])
			lRet := A120ChkAlmox(PADR(aCols[n][nPosPrd],TamSx3("C7_PRODUTO")[1]),aCols[n][nPosLocal])
        EndIf

	EndIf

	If lRet .And. !A120Total(aCols[n][nPosTotal])
		lRet := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³P.E para validação de usuário ao restringir incluão de PC sem SC  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. lRestInc .And.!lGCT
		If lMT120Usr
			lMT120Usr:= ExecBlock( "MT120USR", .F., .F., {Empty(aCols[n][nPosNumSC])})
			If ValType(lMT120Usr)=="L"
				lRet := lMT120Usr
				lRestInc:= .F.
			EndIf 
		EndIf
	EndIf

	If lRet.And.lRestInc.And.!lGCT
	
		If lPrjCni   			
			If ExistBlock("MT120CUR")
				cxUsr := ExecBlock("MT120CUR",.F.,.F.)  
			EndIf  
		EndIf    
		
		dbSelectArea("SY1")
		dbSetOrder(3)
		If MsSeek(xFilial("SY1")+RetCodUsr())
			If Y1_PEDIDO $ "N2" .And. Empty(aCols[n][nPosNumSC])
				HELP("   ",1,"A120RESTR") // Usuario nao tem permissao para incl. PC sem SC
				lRet := .F.
			EndIf
		Else
			HELP("   ",1,"A120COMP") // Usuario nao esta cadastrado como comprador.
			lRet := .F.
		EndIf
	EndIf

	If lRet.And.aCols[n][nPosVDesc] > aCols[n][nPosTotal]
		Help(" ",1,"A12003")
		lRet := .F.
	EndIf             
	
	If lRet .and. lM120PCOL
		lRet120L := ExecBlock("MT120PCOL",.F.,.F.)
		If Valtype( lRet120L ) == "L"
			lRet := lRet120L
		EndIf
	EndIf

	If lRet .And.(nTipoPed==1).And.!PcoVldLan('000052','01','MATA121',/*lUsaLote*/,/*lDeleta*/, .T./*lVldLinGrade*/)
		lRet := .F.
	EndIf

	If lRet .And.(nTipoPed==2).And.!PcoVldLan('000053','01','MATA122',/*lUsaLote*/,/*lDeleta*/, .T./*lVldLinGrade*/)
		lRet := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se valida ou nao o aCols a partir das validacoes do aHeader ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Iif( nPosConta  > 0  , aAdd(aEntid, aCols[n,nPosConta]),  Nil )
	Iif( nPosCC     > 0  , aAdd(aEntid, aCols[n,nPosCC]),     Nil )
	Iif( nPosItemCta> 0  , aAdd(aEntid, aCols[n,nPosItemCta]),Nil )
	Iif( nPosClVl   > 0  , aAdd(aEntid, aCols[n,nPosClVl]),   Nil )
	Iif( nPosEC05DB > 0  , aAdd(aEntid, aCols[n,nPosEC05DB]), Nil )
	Iif( nPosEC06DB > 0  , aAdd(aEntid, aCols[n,nPosEC06DB]), Nil )
	Iif( nPosEC07DB > 0  , aAdd(aEntid, aCols[n,nPosEC07DB]), Nil )
	Iif( nPosEC08DB > 0  , aAdd(aEntid, aCols[n,nPosEC08DB]), Nil )
	Iif( nPosEC09DB > 0  , aAdd(aEntid, aCols[n,nPosEC09DB]), Nil )
	
	Iif( nPosConta  > 0  , aAdd(aEntid2, aCols[n,nPosConta]),  Nil )
	Iif( nPosCC     > 0  , aAdd(aEntid2, aCols[n,nPosCC]),     Nil )
	Iif( nPosItemCta> 0  , aAdd(aEntid2, aCols[n,nPosItemCta]),Nil )
	Iif( nPosClVl   > 0  , aAdd(aEntid2, aCols[n,nPosClVl]),   Nil )
	Iif( nPosEC05CR > 0  , aAdd(aEntid2, aCols[n,nPosEC05CR]), Nil )
	Iif( nPosEC06CR > 0  , aAdd(aEntid2, aCols[n,nPosEC06CR]), Nil )
	Iif( nPosEC07CR > 0  , aAdd(aEntid2, aCols[n,nPosEC07CR]), Nil )
	Iif( nPosEC08CR > 0  , aAdd(aEntid2, aCols[n,nPosEC08CR]), Nil )
	Iif( nPosEC09CR > 0  , aAdd(aEntid2, aCols[n,nPosEC09CR]), Nil )
	
	If lRet .And. lVldHead .And. FindFunction("VldHead") .And. ( Type("l120Auto") == "U" .Or. !l120Auto )
		If nPosConta > 0 .And. nPosCC > 0 .And. nPosItemCta > 0 .And. nPosClVl > 0
			If !CtbAmarra(aCols[n,nPosConta],aCols[n,nPosCC],aCols[n,nPosItemCTA],aCols[n,nPosCLVL],/*lPosiciona*/,/*lHelp*/,/*lValidLinOk*/,aEntid) .Or.;
			   !CtbAmarra(aCols[n,nPosConta],aCols[n,nPosCC],aCols[n,nPosItemCTA],aCols[n,nPosCLVL],/*lPosiciona*/,/*lHelp*/,/*lValidLinOk*/,aEntid2)
				lRet := .F.
			EndIf
		Endif
		If lRet
			lRet := VldHead(aCols,aHeader,n)
			If lRet
				n := n_SaveLin
			EndIf
		Endif
	ElseIf lRet .And. nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
			((!CtbAmarra(aCols[n,nPosConta],aCols[n,nPosCC],aCols[n,nPosItemCTA],aCols[n,nPosCLVL],/*lPosiciona*/,/*lHelp*/,/*lValidLinOk*/,aEntid) .Or.;
			   !CtbAmarra(aCols[n,nPosConta],aCols[n,nPosCC],aCols[n,nPosItemCTA],aCols[n,nPosCLVL],/*lPosiciona*/,	/*lHelp*/,/*lValidLinOk*/,aEntid2)).Or.;
			(!Empty(aCols[n,nPosConta]) .And. !Ctb105Cta(aCols[n,nPosConta])) .Or.;
			(!Empty(aCols[n,nPosCC]) .And. !Ctb105CC(aCols[n,nPosCC])) .Or.;
			(!Empty(aCols[n,nPosItemCTA]) .And. !Ctb105Item(aCols[n,nPosItemCTA])) .Or.;
			(!Empty(aCols[n,nPosCLVL]) .And. !Ctb105ClVl(aCols[n,nPosCLVL])))

		lRet := .F.
	Endif
	
	aEntid  := {}
	aEntid2 := {}
	
	If lRet .And. !RegistroOk("SB1")
		lRet := .F.
	EndIf
    
	// Valida o Rateio
	If AliasInDic("SCH") .And. nPosRateio>0 .And. lRet      
		If !l120Auto 
		    // Valida Rateio - Inclusão manual
			If aCols[n,nPosRateio]=="1" .And. !Empty(aCols[n,nPosCC]) .And. !aCols[n][Len(aHeader)+1] 
				If ValType(ACPISCH) == "A"            
					nPosSCH=AScan(aCPHSCH, {|x| AllTrim (x[2])=="CH_ITEM"})
					If nPosSCH>0
						nPosSCH:= aScan(aCPISCH,{|x| x[nPosSCH] == aCols[n,nPosItem]})
						If nPosSCH >0
							If Len(aCPISCH[nPosSCH][2])>0 
								MsgAlert(STR0178+STR0179)
								lRet:=.F.
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
		ElseIf lRet       
		    // Valida Rateio - Rotina Automática
			If !Empty(aCols[n,nPosCC]) .And. ValType(ACPISCH) == "A" .And. Len(ACPISCH) > 0 .And.;
															(nIt := aScan(ACPISCH,{|x| x[1] == aCols[n,nPosItem]})) > 0
				For nX := 1 To Len(ACPISCH[nIt,2])
					If (nY := aScan(ACPISCH[nIT,2,nX],{|x| AllTrim(x[1]) == "CH_CC"})) > 0 .And. !Empty(ACPISCH[nIT,2,nX,nY,2])
						Aviso("A120VRAT",STR0178+STR0179,{"Ok"})
						lRet:=.F.
						Exit
					EndIf
				Next nIt
			EndIf
		EndIf
	EndIf

	If lRet .And. lVer116 .And. lRevProd
		cRvSB5 := Posicione("SB5",1,xFilial("SB5")+aCols[n][nPosPrd],"B5_REVPROD")
		cBlqSG5:= Posicione("SG5",1,xFilial("SG5")+aCols[n][nPosPrd]+aCols[n][nRevisao],"G5_MSBLQL")
		If cRvSB5=="1"
			If Empty(cRvSB5)
				Aviso(STR0102,STR0181,{STR0111})// "Não foi encontrado registro do produto selecionado na rotina de Complemento de Produto."    
				lRet:= .F.
			ElseIf Empty(cBlqSG5)
				Aviso(STR0102,STR0182,{STR0111})//"O produto selecionado não possui revisão em uso. Verifique o cadastro de Revisões."		
				lRet:= .F.
			ElseIf cBlqSG5="1"
				Help(" ",1,"REGBLOQ")
				lRet:= .F.
			ElseIf !ExistCpo("SG5",aCols[n][nPosPrd]+aCols[n][nRevisao])
				lRet:= .F.	 
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-Ä¿
//³ Pontos de Entrada 											 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ-ÄÄÙ
If !aCols[n][Len(aCols[n])] .And. lRet .And. ExistTemplate("MT120LOK")
	lRet120LOK := ExecTemplate("MT120LOK",.F.,.F.)
	If Valtype( lRet120LOK ) == "L"
		lRet := lRet120LOK
	EndIf
EndIf

If !aCols[n][Len(aCols[n])] .And. lRet .And. ExistBlock("MT120LOK")
	lRet120LOK := ExecBlock("MT120LOK",.F.,.F.)
	If Valtype( lRet120LOK ) == "L"
		lRet := lRet120LOK
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³          Tratamento especifico para localizado Peru              ³
//³ Abaixo está o tratamento do formulário. A função CtrFolPer está  ³
//³ locallizada no arquivo LOCXNF2.PRW								 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. cPaisLoc == "PER" 
	aAux := {}
	For nX:=1 To Len(aCols)
		aAdd(aAux,{ aCols[nX,2] , aCols[nX,25] , aCols[nX,Len(aCols[nX])] })
	Next nX
	 
	lRet := ValImpPer(n,aAux,"PIV")	
	If lRet
		lRet := ValImpPer(n,aAux,"DIG")
	EndIf	
EndIf        

// Ponto de entrada para validar linha independente do item estar deletado na GetDados
If lRet .And.  ExistBlock("MT120VLD")
	lRet120LOK := ExecBlock("MT120VLD",.F.,.F.)
	If Valtype( lRet120LOK ) == "L"
		lRet := lRet120LOK
	EndIf
EndIf     

If lRet .And. nPosOp>0 .And.;
		!Empty(aCols[n][nPosOp]) .And. (!SC2->(dbSeek(xFilial("SC2")+Trim(aCols[n][nPosOp]))) .Or. !Empty(SC2->C2_DATRF))
	If !(ALTERA .And. ((aCols[n][nPosQt]==SC7->C7_QUANT .And. aCols[n][nPosOp]==SC7->C7_OP) .Or.;
		(!Empty(SC7->C7_RESIDUO) .And. aCols[n][nPosOp]==SC7->C7_OP)))
		Help(" ",1,"A120OPEND")
		lRet := .F.
	EndIf
Endif   
          
// Nao permite a inclusao de valor total negativo (desconto maior que o total do pedido)
If lRet .And. nTotPed < 0
	Help(" ",1,"A12003")
	lRet := .F.
EndIf
     
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120TudOk ³ Autor ³ Eveli Morasco         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica se todo o pedido esta Ok                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Objeto a ser verificado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120TudOk(o)

Local aTam       := TamSX3("C7_TOTAL")
Local nPosPrd    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nPosQtd    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosPrc    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosTotal  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"})
Local nPosCodTab := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CODTAB"})
Local nPosNumSC  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItemSC := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosConta  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CONTA"})
Local nPosCC	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"})
Local nPosCLVL	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CLVL"})
Local nPosItemCTA:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMCTA"})
Local nPosGrade  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_GRADE"})
Local nPosFilCen := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_FILCEN"})
Local nPosItem	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})
Local nPosTES    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TES"})    
Local nFISCORI	 := aScan(aHeader,{|x| Alltrim(x[2]) == "C7_FISCORI"}) 
Local nTotPag    := 0
Local nTotPagCt  := 0 
Local nTotped    := aValores[TOTPED]
Local nValDesc   := aValores[VALDESC]
Local n_SaveLin  := n
Local nX         := 0
Local nIt        := 0
Local lRet120OK  := .T.
Local lRet       := .T.
Local lMT120PCOK := ExistBlock("MT120PCOK")
Local lMT120OK   := ExistBlock("MT120OK")
Local lM120PGAN  := .T.
Local aAreaQtd	 :={}
Local aAreaSC7	 :={}
Local lContQtd   := ( GetNewPar( "MV_CONTQTD", "2" ) == "1" )   //MV_CONTQTD = 1 restringe quantidade do item à quantidade do contrato de parceria
Local cFilSeekC1 := xFilial("SC1")

lVldHead:= If(ValType(lVldHead) == "L",lVldHead, GetNewPar( "MV_VLDHEAD",.T. ) )

If cPaisLoc != "BRA"
	aTam[2] := MsDecimais(nMoedaPed)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o cabecalho foi preenchido                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(cA120Forn) .Or. Empty(cA120Loj) .Or. Empty(cCondicao)
	Help(" ",1,"A12010")
	lRet := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Caso o fornecedor seja de alguma      ³
//³cidade ou provincia que esteja no     ³
//³parametro MV_RETIIBB valida para que  ³
//|o mesmo seja obrigado a informar o    |
//|campo F1_PROVENT ou F2_PROVENT        |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "ARG" .And. lProvEnt
	SA2->(DBSetOrder(1))
	SA2->(MSSeek(xFilial("SA2")+cA120Forn+cA120Loj))

	If Empty(cA120ProvEnt) .And. (SA2->A2_EST$GetMV("MV_RETIIBB",,"CF|BA"))
		Aviso( STR0098, STR0115,{STR0111}) // "ATENCAO"### "Es necesario que informe la ciudad o provincia de entrega del producto o prestacion del servicio"    ###  "OK"
		lRet := .F.
	EndIf
EndIf


If lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Validacao de todas as linhas da GetDados               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX :=1 To Len( aCols )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se o usuario tem permissao de inclusao. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If INCLUI .And. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
			If nTipoPed == 1 //Pedido de Compra
				lRet := MaAvalPerm(1,{aCols[nX][nPosPrd],"MTA121",3})
			ElseIf nTipoPed == 2 //Autorizacao de Entrega
				lRet := MaAvalPerm(1,{aCols[nX][nPosPrd],"MTA122",3})
			EndIf
			If !lRet
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
		If lRet .And. (!aCols[nX][Len(aCols[nX])] .And. !Empty(aCols[nX][nPosPrd]))
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se a quantidade e o preco foram preenchidos                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Empty(aCols[nX][nPosQtd]) .Or. Empty(aCols[nX][nPosPrc]) )
				Help(" ",1,"A12006")
				lRet := .F.
				Exit
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se o produto nao e canal                                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRet
				SB1->(dbSetOrder(1))
				SB1->(MsSeek(xFilial("SB1")+aCols[nX][nPosPrd]))
				If (SB1->B1_MONO=="S" .And. SB1->B1_PROC != cA120Forn)
					Help(" ",1,"A120CANAL")
					lRet := .F.
					Exit
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a integridade com a solicitacao de compra                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRet .And. !Empty(aCols[nX][nPosNumSc]) .And. !Empty(aCols[nX][nPosItemSc])
				lReferencia := MatGrdPrrf(@(aCols[nX][nPosPrd]))

				If ( lReferencia )
					If ( nPosGrade > 0 )
						aCols[nX][nPosGrade] := "S"
						lReferencia := .T.
					EndIf
				Else
					If ( nPosGrade > 0 )
						aCols[nX][nPosGrade] := "N"
					EndIf
				EndIf

				If !lReferencia
					If nTipoPed != 2
						//-- Tratamento para compra centralizada (campo fora de uso)
						If l120Auto
							If !(Empty(nFISCORI) .Or. Empty(aCols[n,nFISCORI]))
								cFilSeekC1 := aCols[n,nFISCORI]
							Else					
								cFilSeekC1 := RetFISCORI(aCols[n,nPosItem],aCols[n,nPosPrd])
							EndIf
						EndIf
				
						dbSelectArea("SC1")
						dbSetOrder(2)
						If !MsSeek(xFilial("SC1",cFilSeekC1)+aCols[nX][nPosPrd]+aCols[nX][nPosNumSC]+aCols[nX][nPosItemSC])
							Help(" ",1,"A12005")
							lRet := .F.
							Exit
						Endif

					Else

						dbSelectArea("SC3")
						dbSetOrder(3)
						If !MsSeek(xFilial("SC3")+aCols[nX][nPosPrd]+aCols[nX][nPosNumSC]+aCols[nX][nPosItemSC])
							Help(" ",1,"A12005")
							lRet := .F.
							Exit
						Endif

					EndIf
				Endif

			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o valor total                                                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRet
				If Abs(NoRound(aCols[nX][nPosTotal],aTam[2]) - NoRound(aCols[nX][nPosQtd]*aCols[nX][nPosPrc],aTam[2]))  > (9 * (10**(-aTam[2])))
					Help(" ",1,"A12003")
					lRet := .F.
					Exit
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica a integridade com a tabela de preco                                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRet .And. nPosCodTab > 0 .And. !Empty(aCols[nX][nPosCodTab])
				If ( !MaVldTabCom(cA120Forn,cA120Loj,aCols[nX][nPosCodTab],cCondicao,/*cHelp*/,dA120Emis) )
					lRet := .F.
					Exit
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se o produto x fornecedor foi bloqueado pela Qualidade.	                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !QieSitFornec(cA120Forn,cA120Loj,aCols[nX][nPosPrd],.F.)
				Help(" ",1,"A120BLQFO",,STR0113+Alltrim(aCols[nX][nPosPrd])+STR0114,1,11) //"O produto " ### " foi bloqueado pela Qualidade para esse Fornecedor."
				lRet := .F.
				Exit
			EndIF

			If lRet
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se valida ou nao o aCols a partir das validacoes do aHeader ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lVldHead .And. FindFunction("VldHead") .And. ( Type("l120Auto") == "U" .Or. !l120Auto )
					If nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
							!CtbAmarra(aCols[nX,nPosConta],aCols[nX,nPosCC],aCols[nX,nPosItemCTA],aCols[nX,nPosCLVL])
						lRet := .F.
						Exit
					Endif
					If !VldHead(aCols,aHeader,nX,o)
						lRet := .F.
						Exit
					Endif

					n := n_SaveLin

				ElseIf nPosConta <> 0 .And. nPosCC>0 .And. nPosItemCta <> 0 .And. nPosClVl <> 0 .And.;
						(!CtbAmarra(aCols[nX,nPosConta],aCols[nX,nPosCC],aCols[nX,nPosItemCTA],aCols[nX,nPosCLVL]) .Or.;
						(!Empty(aCols[nX,nPosConta]) .And. !Ctb105Cta(aCols[nX,nPosConta])) .Or.;
						(!Empty(aCols[nX,nPosCC]) .And. !Ctb105CC(aCols[nX,nPosCC])) .Or.;
						(!Empty(aCols[nX,nPosItemCTA]) .And. !Ctb105Item(aCols[nX,nPosItemCTA])) .Or.;
						(!Empty(aCols[nX,nPosCLVL]) .And. !Ctb105ClVl(aCols[nX,nPosCLVL])))

					lRet := .F.
					Exit
				Endif
			Endif

		Else
			aCols[nX][Len(aHeader)+1] := .T.
		EndIf
		If lRet
		    lRet := ( Empty(aCols[nX][nPosTES]) .Or. Iif(Posicione("SF4",1,xFilial("SF4")+aCols[nX][nPosTES],"F4_MSBLQL") == '1',;
			ExistCpo("SF4",Alltrim(aCols[nX][nPosTES]),1),.T.) ) 
		EndIf
	Next nX
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida formula para reajuste do Contrato ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. nTipoPed == 2
	lRet := A120FormReaj(cReajuste,@cDescFor)
EndIf

// ponto de entrada para ser utilizado antes da validação do SIGAPCO
If lRet .And. lMT120PCOK
	lRet120OK := ExecBlock("MT120PCOK",.F.,.F.)
	If Valtype( lRet120OK ) == "L"
		lRet := lRet120OK
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se validacao do bloqueio do pco e no final, ³
//³em caso positivo valida todas as linhas              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. PcoBlqFim({{"000052","01"}, {"000053","01"}})
	n_SaveLin := n
	For nX := 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
			n := nX
			If lRet
				If nTipoPed == 1
					lRet	:=	PcoVldLan('000052','01','MATA121',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
				ElseIf nTipoPed == 2
					lRet	:=	PcoVldLan('000053','01','MATA122',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
				EndIf
				If !lRet
					Exit
				EndIf
			EndIf
		EndIf
	Next
	n := n_SaveLin
EndIf

If lRet .And. nTipoPed == 2 .and. lContQtd .And. ( Type("l120Auto") == "U" .Or. !l120Auto )
	aAreaQtd := GetArea()
	aAreaSC7 := SC7->(GetArea())
	dbSelectArea("SC3")
	dbSetOrder(1)
	For nX := 1 To Len(aCols)
		If !(aCols[nX][Len(aCols[nX])])  //verifica se o item esta deletado
			If MsSeek(xFilial()+aCols[nX][nPosNumSC]+aCols[nX][nPosItemSC]) //verifica se o item tem contrato de parc
				SC7->(dbSelectArea("SC7"))
				SC7->(dbSetOrder(14))
				SC7->(MsSeek(xFilial("SC7")+SC7->C7_NUM+aCols[nX][nPosItem]))
				If aCols[nX][nPosQtd] > SC3->C3_QUANT - (SC3->C3_QUJE - SC7->C7_QUANT) //verifica se a quantidade é maior que a do contrato de parceria
					Aviso(STR0098,STR0199 + STRZERO(nX,4) +" "+ STR0200,{STR0111}) // "A quantidade do item " nX "não pode exceder a quantidade do contrato de parceria."
					lRet := .F.
					Exit
				EndIf
			EndIf
		Endif
	Next
	RestArea(aAreaSC7)
	RestArea(aAreaQtd)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacoes dos pontos de bloqueio SIGAPCO - P/ TOTAL PC/AE³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. (nTipoPed==1)
	If !PcoVldLan('000052','03','MATA121',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
		lRet := .F.
	EndIf
EndIf
If lRet .And. (nTipoPed==2)
	If !PcoVldLan('000053','03','MATA122',/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
		lRet := .F.
	EndIf
EndIf

If lRet .And. lMT120OK
	lRet120OK := ExecBlock("MT120OK",.F.,.F.)
	If Valtype( lRet120OK ) == "L"
		lRet := lRet120OK
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida se há relacionamentos de Adiantamentos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If  cPaisLoc $ "ANG|BRA|MEX" .and. AliasInDic("FIE") .and. lRet .AND. Type( "nAutoAdt" ) == "N"
	If nAutoAdt<>3 .AND. nAutoAdt<>4 .AND. nAutoAdt<>5  .and. Len(aAdtPC)==0 .and. A120UsaAdi( cCondicao,@cCondPAdt ) .and. a120AdtSld(cA120Num) == 0
		lRet := MsgYesNo(STR0147) // "Não foram relacionados Adiantamentos para este pedido. Deseja prosseguir?"
	/*Elseif nAutoAdt=3 //INCLUSAO AUTOMATICA
		If Len(aAdtPC)==0 .and. A120UsaAdi( cCondicao ) //VERIFICA SE aADTPC ESTA VAZIO E CONDPGTO USA ADT
		   Help(" ",1,"A120ADTVAZIO")     
		Endif */ //Alterado. No padrão ná é obrigatorio a inclusao simultanea de um adiantamento com um pedido de compra - jandir 27/12/11  
	Elseif nAutoAdt=4 //ALTERAÇÃO AUTOMATICA
		If Len(aAdtPC)==0 //VERIFICA SE aADTPC ESTA VAZIO
		   If SC7->C7_COND==cCondicao
				If A120UsaAdi( SC7->C7_COND ) //SE VAZIO E CONDPGTO USA ADT
				   If lCkAdtFIE(SC7->C7_NUM,nAutoAdt) == 0	//SE VAZIO E NAO EXISTE RELACIONAMENTO
				      Help(" ",1,"A120ADTVAZIO")
				   Else
				      If lCkAdtFR3(SC7->C7_NUM,nAutoAdt)==0 //SE HOUVE ATENDIMENTO DO RELACIONAMENTO
				     	  Help(" ",1,"A120ADTCANCEL") //SE NAO HOUVE CANCELA ADT
  					  Else
						  Help(" ",1,"A120ADTEMUSO") //SE HOUVE NAO ALTERA PEDIDO
						  lRet:=.F.
					  Endif		
				   Endif	
				Endif
			Else	
				If A120UsaAdi( SC7->C7_COND ) //VERIFICA SE CONDPGTO ANTERIOR USAVA ADT
				   If lCkAdtFR3(SC7->C7_NUM,nAutoAdt) <> 0 //VERIFICA SE TEM RELACIONAMENTO ATENDIDO
						Help(" ",1,"A120ADTEMUSO") //NAO ALTERA PEDIDO
						lRet:=.F.
				   Else
				      If lCkAdtFIE(SC7->C7_NUM,nAutoAdt) <> 0 //VERIFICA SE EXISTE RELACIONAMENTO
							Help(" ",1,"A120ADTCANCEL") //SE NAO CANCELA ADT
						Endif
					Endif	
				Endif
			Endif   
		Endif	
	Elseif nAutoAdt=5 //EXCLUSÃO AUTOMATICA
		If A120UsaAdi( SC7->C7_COND ) //SE VAZIO E CONDPGTO USA ADT
	      If lCkAdtFR3(SC7->C7_NUM,nAutoAdt)<>0 //SE HOUVE ATENDIMENTO DO RELACIONAMENTO
				Help(" ",1,"A120ADTEMUSO") //SE HOUVE NAO EXCLUI PEDIDO
				lRet:=.F.
			Endif		
		Endif	
	Endif	
EndIf     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Emite aviso se titulo possuir pagamento antecipado > que o Pedido		    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     
If AliasInDic("FIE")  
    nTotPag :=0       
    nTotPagCt:=0
	dbSelectArea("FIE")
	dbSetOrder(1)
	DbSeek(xFilial("FIE")+"P"+SC7->C7_NUM)
	Do While !Eof() .And. FIE->FIE_FILIAL == xFilial("FIE") .And. FIE->FIE_CART == "P" .And. FIE->FIE_PEDIDO == SC7->C7_NUM 
		nTotPag +=FIE->FIE_VALOR
		nTotPagCt+=1
		DbSkip()
	EndDo  

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Ponto de Entrada:M120PGAN                                                   |
	//| Permite ou Nao Alterar Pedido de Compras com Amarracao com Pedido de Vendas |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     
	If nTotPagCt>0 .And. nTotpag>nTotPed
		If !ExistBlock("M120PGAN")
			Help( " ", 1, "A120PGAN",,STR0171,1)    
			lRet :=.F.
		Else                             
    	    lM120PGAN:= ExecBlock("M120PGAN",.F.,.F.,{nTotpag,nTotPed})		    	     
    	    If ValType( lM120PGAN ) == "L" 
    	    	lRet:=lM120PGAN
    	    EndIf	
		EndIf       
	EndIf   	
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Nao Permite Alterar Pedido de Compras com Amarração com Pedido de Vendas    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SC7->(FieldPos("C7_FILCEN"))>0 .And. nPosFilCen>0        
    nIt:=0                 
    For nX:=1 to Len(aCols)
	    If !Empty(aCols[nX][nPosFilCen])
			dbSelectArea("SC6")
			dbSetOrder(10)
			If MsSeek(aCols[nX][nPosFilCen]+cFilialEnt+cA120Num+aCols[nX][nPosItem])
				nIt++
			EndIf
		EndIf
	Next nX
	If nIt>0 
		Help(" ",1,"A120PCDT")     
		lRet := .F.    
	EndIf
EndIf
         
                                      
// Nao permite a inclusao de valor total negativo (desconto maior que o total do pedido)
If lRet .And. nTotPed < 0
	Help(" ",1,"A12003")
	lRet := .F.
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Trigger³ Autor ³ Eveli Morasco        ³ Data ³07.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Simula a validacao da GetDados para campos alterados pelo   ³±±
±±³          ³gatilho                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 = Campo alterado pelo gatilho                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Trigger(cCampo)

Local aArea 	:= GetArea()
Local aRefer    := {}
Local nPosCpo	:= aScan(aHeader,{|x| AllTrim(x[2])==AllTrim(cCampo)})
Local lRetorno	:= .T.

If nPosCpo > 0
	aRefer := MaFisGetRF(aHeader[nPosCpo][6])
	If !Empty(aRefer[1])
		MaFisRef(aRefer[1],aRefer[2],aCols[N,nPosCpo])
		If cPaisLoc <>"BRA"
			ModxAtuObj()
		EndIf
	EndIf
Else
	lRetorno := .F.
EndIf

RestArea(aArea)

Return lRetorno

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120Del  ³ Autor ³ Aline Correa do Vale  ³ Data ³ 26.11.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Critica a delecao da linha                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Objeto a ser verificado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MatA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Del(o)
Local nPProduto  := aScan(aHeader,{|x| AllTrim(x[2])== "C7_PRODUTO"})
Local nPosItem   := aScan(aHeader,{|x| AllTrim(x[2])== "C7_ITEM"})
Local lDeleted := .F. 
Local lRet := .T.  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A variavel lA120Del foi criada devido a um bug na funcao de    ³
//³delecao que esta sendo chamada 2 vezes pela MsGetDados.        ³
//³O ponto de entrada MT120DEL deve ser chamado apenas 1 vez ao   ³
//³clicar na tecla DELETE. esta variavel faz este controle.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Static la120Del:= .F.
Static lExibHlp:= .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o item esta no portal marketplace e se o campo alterado e restrito ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. SC7->(FieldPos("C7_ACCPROC"))>0 .And. Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],"C7_ACCPROC") == '1' 	
	If !lExibHlp
		Aviso(STR0203,STR0205,{STR0111}) // "Portal MarketPlace" | "Este item não podera ser excluido pois já esta em processo no MarketPlace." | "Ok"
		lExibHlp := .T.
	ElseIf lExibHlp
		lExibHlp := .F.
	EndIf
	lRet := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem permissao de delecao. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !Inclui .And. !Empty(aCols[n][nPProduto])
	If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
		If nTipoPed == 1 //Pedido de Compra
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA121",5})
		ElseIf nTipoPed == 2 //Autorizacao de Entrega
			lRet := MaAvalPerm(1,{aCols[n][nPProduto],"MTA122",5})
		EndIf
		If !lRet
			If !lExibHlp
				Help(,,1,'SEMPERM')
				lExibHlp := .T.
			ElseIf lExibHlp
				lExibHlp := .F.
			EndIf
		EndIf
	EndIf
	
	If !(lRet := Empty(Posicione("SC7",1,xFilial("SC7")+ca120Num+GDFieldGet("C7_ITEM"),"C7_CODED")))
		If !lExibHlp
			Help(" ",1,"A120EDITAL")
			lExibHlp := .T.
		ElseIf lExibHlp
			lExibHlp := .F.
		EndIf
	EndIf
EndIf

If lRet
	If ValType(aCols[n,Len(aCols[n])]) == "L"  /// Verifico se posso Deletar
		lDeleted := aCols[n,Len(aCols[n])]      /// Se esta Deletado
	End
	
	If !MaFisFound("IT",n)
		MaFisAdd("","",0,0,0,"","",,0,0,0,0,0)
	EndIf
	
	MaFisDel(n,aCols[n][Len(aCols[n])])
	Eval(bRefresh) 
	
	
	If !la120Del
		If  ExistBlock("MT120DEL") 
			ExecBlock("MT120DEL",.F.,.F.)
		EndIf     
	EndIf
	
	la120Del := !la120Del
EndIf
	
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ-ÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120FormDesc³ Autor ³ Edson Maricate      ³ Data ³ 14.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄ-ÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a formula digitada e atualiza a descricao.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo da Formula                                  ³±±
±±³          ³ ExpC2 = Descricao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120FormDesc(cFormula,cDescri)

Local lRet := .T.

If !Empty(cFormula)
	If SM4->(MsSeek(xFilial("SM4")+cFormula))
		cDescri := Sm4->M4_DESCR
	Else
		lRet := .F.
	EndIf	
Else
	cDescri := ""
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ-ÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120FormReaj³ Autor ³ Fernando Gomes      ³ Data ³ 29.01.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄ-ÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a formula digitada e atualiza a descricao.          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo da Formula                                  ³±±
±±³          ³ ExpC2 = Descricao                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120FormReaj(cFormula,cDescri)

Local vFormula 
Local lRet     := .T.

If !Empty(cFormula)
	If SM4->(MsSeek(xFilial("SM4")+cFormula))
		cDescri := SM4->M4_DESCR
		vFormula := Formula(cFormula)
		If ValType(vFormula) <> "N"
			cDescri := ""		
			lRet := .F.
			Aviso( STR0102, STR0131, {"Ok"}, 2 )	 	
		EndIf		
	Else
		lRet := .F.
	EndIf			
Else
	cDescri := ""
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120VldAlt ³ Autor ³ Edson Maricate       ³ Data ³ 14.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida se o pedido pode ser alterado.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120VldAlt(lCopia)

Local lRet := .T.

DEFAULT lCopia := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o usuario tem permissao para este pedido         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. !lCopia .And. !A120Restr()
	lRet := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se origem do pedido foi pela importa‡„o             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. Alltrim(SC7->C7_ORIGEM) == "EICPO400" .AND. cModulo <> "EIC"
	Help(" ",1,"ORIGIMP",,STR0116+SC7->C7_NUMIMP,3,0) //"Este pedido nao pode ser alterado/excluido pelo modulo de Compras, pois foi emitido pelo modulo Easy Import Control atraves da P.O. --> "
	lRet := .F.
EndIf

If lRet .And. !lCopia .And. ( (nTipoPed == 2 .And. SC7->C7_TIPO == 1) .Or. (nTipoPed == 1 .And. SC7->C7_TIPO == 2) )
	If SC7->C7_TIPO == 2
		Help(" ",1,"A121TIPO")
	Else
		Help(" ",1,"A122TIPO")		
	EndIf		
	lRet := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Registro esta Bloqueado.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lCopia
    SA2->(dbSetOrder(1))
    If SA2->(dbSeek(xFilial("SA2")+SC7->C7_FORNECE+SC7->C7_LOJA))
		If !(lRet := RegistroOk("SA2",.F.))
			Aviso(STR0141,STR0144,{STR0111})//"O fornecedor do pedido encontra-se bloqueado. Libere o registro para efetuar a cópia."
		EndIf
	EndIf
EndIf

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ a120Restr ³ Autor ³ Edson Maricate       ³ Data ³ 01.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Restringe o pedido de compras de acordo com MV_RESTPED     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Restr()

Local aGrupo   := {}
Local cGrupo   := ""
Local cUser    := RetCodUsr()
Local nLoop    := 0
Local lRet     := .T.
Local lSolic   := .T.
Local lRestPed := If(SuperGetMv("MV_RESTPED")=="S", .T. , .F. )

aGrupo := UsrGrComp(cUser)

If aScan(aGrupo,"*") != 0
	lSolic := .F.
Else
	For nLoop := 1 to Len(aGrupo)
		cGrupo += aGrupo[nLoop]
	Next nLoop
EndIf

If ( lSolic .And. lRestPed .And. !(SC7->C7_GRUPCOM $ cGrupo) .And. SC7->C7_USER != cUser .And. !Empty(SC7->C7_USER) )
	If Empty(SC7->C7_GRUPCOM)
		Help("  ",1,"A120RSPED",,UsrRetName(SC7->C7_USER),4,11)
	Else
		Help("  ",1,"USUNAOAUT",,SC7->C7_GRUPCOM,3,25)
	EndIf
	lRet := .F.
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120PID    ³Autor³ Edson Maricate        ³ Data ³06.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Monta uma tela de Integracao com as Solicitacoes/Contratos ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Perguntas ³ MTA121                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Expo1 = Objeto da getdados                                 ³±±
±±³          ³ Expo2 = Objeto da Condicao de pagamento                    ³±±
±±³          ³ Expo3 = Objeto da descricao da condicao de pagamento       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120PID(oGetDados,oCond,oDescCond,aHeadSCH,aColsSCH)

Local aArea		:= GetArea()
Local aAreaSX3	:= SX3->(GetArea())
Local aAreaSC1	:= SC1->(GetArea())
Local aAreaSC3	:= SC3->(GetArea())
Local aRefImpos := MaFisRelImp('MT100',{"SC7"})
Local aCpos		:= {}
Local aMarca	:= {}
Local aCamposC1	:= {"C1_OK","C1_NUM","C1_ITEM","C1_PRODUTO","C1_QUANT","C1_QUJE","C1_DESCRI","C1_GRUPCOM","C1_GRADE","C1_ITEMGRD"}
Local aCamposC3	:= {"C3_OK","C3_NUM","C3_ITEM","C3_PRODUTO","C3_QUANT","C3_QUJE","C3_RESIDUO","C3_GRADE","C3_ITEMGRD"}
Local aCampos	:= If(nTipoPed!=2,aCamposC1,aCamposC3)
Local aButEnc	:= {}
Local aMark     := {}
Local lMT120VSC := ExistBlock('MT120VSC')
Local aFiltro   := {}   
Local aMt120VSC

Local cAliasPID	:= If(nTipoPed!=2,"SC1","SC3")
Local cCampoOk	:= If(nTipoPed!=2,"C1_OK","C3_OK")
Local cAliasSX3 := If(nTipoPed!=2,"SC1","SC3")
Local cMarca	:= GetMark()
Local cItem     := StrZero(1,Len(SC7->C7_ITEM))
Local cCadastro := ""
Local cFilter   := ""
Local cFilSC1   := 'C1_FILIAL == "'+xFilial('SC1')+'".And. C1_QUJE < C1_QUANT .And. C1_TPOP<>"P" .And. C1_APROV$" ,L" .And.( C1_COTACAO == "'+Space(Len(SC1->C1_COTACAO))+'" .Or. C1_COTACAO == "'+Replicate("X",Len(SC1->C1_COTACAO))+'") .And. C1_FLAGGCT <> "1"'
Local cFilSC3   := 'C3_FILIAL == "'+xFilial('SC3')+'".And. C3_QUJE < C3_QUANT '

Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})
Local nPosPrc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRECO"})
Local nPosQuant := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_QUANT"})
Local nPosDsc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_VLDESC"})
Local nPosTotal	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"})
Local nPosNmSc	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_NUMSC"})
Local nPosItSc  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMSC"})
Local nPosCodTab:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CODTAB"})
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"})
Local nPosCC	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"})
Local nPosGrade := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_GRADE"})
Local nPosItGra := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMGRD"})
Local nPosACC 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ACCPROC"})
Local nExistIt  := 0
Local nDeleta   := 0
Local nOpcA     := 0
Local nX        := 0
Local nY        := 0
Local nZ        := 0
Local cItPed    := ""
Local nTamAcols
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O parametro MV_CONTVLD e usado para validar a data final do³
//³ contrato de parceria quando o mesmo e vinculado a Autoriza ³
//³ cao de entrega, deve ser criado com DEFAULT = 2 para nao   ³
//³ ativar o filtro pela data do contrato, conteudos a seguir :³
//³ MV_CONTVLD = 1 - Filtra os contratos de parceria com data  ³
//³ final menor que a data base do sistema                     ³
//³ MV_CONTVLD = 2 - Desativa o filtro (DEFAULT)               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lContVld  := ( GetNewPar( "MV_CONTVLD", "2" ) == "1" )
local lGrade    := MaGrade()
Local lMT120Mak := ExistBlock("MT120MAK")
Local lInverte	:= .F.

Local oDlg
Local bKeyF4	:=  SetKey( VK_F4 )
Local nPrazo    := 0         
Local bRefreTot	:= {|| A120RefTot() }

Local cTpCto    := SuperGetMv("MV_TPSCCT",.F.,.F.)
Local aRatFin	:= {}
Local lPrjCni := FindFunction("ValidaCNI") .And. ValidaCNI()
Default aHeadSCH := {}
Default aColsSCH := {}

PRIVATE lMarkAll:= .F.
PRIVATE oMark
PRIVATE oChk1

If SC1->(FieldPos("C1_ACCPROC"))>0
	cFilSC1 += ".And.C1_ACCPROC<>'1'"
EndIf      
If SC1->(FieldPos("C1_TPSC")) > 0
	cFilSC1 += " .And. C1_TPSC <> '2'"
EndIf						
If lPrjCni 
	cFilSC1 += " .And. C1_XTIPOSC <> '"+cTpCto+"' " 
	cFilSC1 += ' .And. (C1_FORNECE+C1_LOJA == "'+ca120Forn+ca120Loj+'" .OR. AllTrim(C1_FORNECE+C1_LOJA)=="")'
EndIf

SetKey( VK_F4,Nil )  

If lContVld
	cFilSC3 += '.And. dtos(C3_DATPRF) >= "'+dtos(dDataBase)+'"'
EndIf

If !GetNewPar("MV_CTRSELF",.T.)
	cFilSC3  += '.And. C3_FORNECE+C3_LOJA == "'+ca120Forn+ca120Loj+'"'
EndIf

cFilSC3  += '.And. C3_CONAPRO <> "B"'

// Atribui Numeracao ao item do Pedido //
If Empty(aCols[1,nPosCod])     
   cItPed := StrZero(1,Len(SC7->C7_ITEM))
ElseIf Empty(aCols[Len(aCols)][2])  
   cItPed := StrZero(Len(aCols),Len(SC7->C7_ITEM))
Else
   cItPed :=Soma1(aCols[Len(aCols)][nPosItem])
EndIf                                              

If lMT120Mak
	nX    := 0
	aMark := ExecBlock("MT120MAK",.F.,.F.,{If(nTipoPed == 1 , "SC1" , "SC3" )})
	If ValType( aMark ) <> "A"
		aMark := {}
	EndIf

	If Len(aMark) > 0
		For nX:= 1 to Len(aMark)
			AADD(aCampos,aMark[nX])	
		Next nX
	EndIf
EndIf
        
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de Entrada para manipulação dos campos do array aCols da SC e Contrato de Parceria ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
				
If lMT120VSC
	aMt120VSC := ExecBlock( "MT120VSC", .F., .F.,{aCampos,nTipoPed})     
	If ( ValType(aMt120VSC) == 'A' )
		aCampos := aClone(aMt120VSC)
	EndIf
EndIf

nX := 0

If MaFisFound("NF") .And. !Empty(cA120Forn) .And. !Empty(cA120Loj) .And. !Empty(cCondicao)

	If nTipoPed != 2

		cCadastro := STR0061
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o filtro de usuario                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock( "A120PIDF" )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Estrutura do array                                           ³
			//³ 1 - String - Filtro no SC1 para ISAM ( Sintaxe xBase )       ³
			//³ 2 - String - Filtro no SC1 para SQL  ( Sintaxe SQL   )       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aFiltro := 	ExecBlock( "A120PIDF", .F., .F. )
			If ValType( aFiltro ) <> "A"
				aFiltro := {}
			EndIf

			dbSelectArea("SC1")
			dbSetOrder(1)
			Set Filter To &(afiltro[1])
			cFilter := afiltro[1]
		Else
			dbSelectArea("SC1")
			dbSetOrder(1)
			Set Filter To &(cFilSC1)
			cFilter := cFilSC1
		EndIf 	

	Else

		cCadastro := STR0062
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o filtro de usuario                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock( "A120AEFL" )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Estrutura do array                                       ³
			//³ 1 - String - Filtro no SC3 para ISAM ( Sintaxe xBase )   ³
			//³ 2 - String - Filtro no SC3 para SQL  ( Sintaxe SQL   )   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aFiltro := 	ExecBlock( "A120AEFL", .F., .F.,{cFilSC3} )
			If ValType( aFiltro ) <> "A"
				aFiltro := {}
			EndIf

			dbSelectArea("SC3")
			dbSetOrder(1)
			Set Filter To &(afiltro[1])
			cFilter := afiltro[1]
		Else
			dbSelectArea("SC3")
			dbSetOrder(1)
			Set Filter To &(cFilSC3)
			cFilter := cFilSC3
		EndIf
	EndIf		

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta os botoes da enchoice passando o filtro para ser restaurado na saida da visualizacao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aButEnc	:={ {"PESQUISA",{|| a120Pesqui(oMark) },STR0006} ,; //"Pesquisar"
		{"relatorio",{||a120VisuSC(RecNo(),cFilter)},STR0007} }	//"Visualizar"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o Header com os titulos do MsSelect             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX3")
	dbSetOrder(2)
	For nX := 1 to Len(aCampos)
		If MsSeek(aCampos[nX])
			If AllTrim(aCampos[nX])$"C1_OK#C3_OK"
				AADD(aCpos,{aCampos[nX],""," ",X3_PICTURE})
			Else
				AADD(aCpos,{aCampos[nX],"",AllTrim(X3Titulo()),X3_PICTURE})
			EndIf
		EndIf
	Next nX

	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek(cAliasSX3)				
	While !Eof() .And. SX3->X3_ARQUIVO == cAliasSX3
		IF ( SX3->X3_BROWSE=="S".And.SX3->X3_CONTEXT <> "V" .And. X3Uso(SX3->X3_USADO).And. Ascan(aCpos,{|x| Alltrim(x[1]) == Alltrim(SX3->X3_CAMPO)})==0 )
			Aadd(aCpos,{SX3->X3_CAMPO,"",AllTrim(X3Titulo()),X3_PICTURE})
		EndIf
		dbSkip()		
	Enddo
	
	(cAliasPID)->( dbgotop() )
	If (cAliasPID)->( eof() )   	
		If !isincallstacks("MATA122")
			Help(" ",1,"A120PID")
		Else
			Help(" ",1,"A120AUT")
		Endif
		SC3->(dbClearFilter())
		Return (.T.)	
	endif  
			
	DEFINE MSDIALOG oDlg TITLE cCadastro FROM 30,30 TO 265,600 OF oMainWnd PIXEL

	oMark := MsSelect():New(cAliasPID,cCampoOk,"A120FLAG()",aCpos,@lInverte,@cMarca,{ 17,2,100,285})
	oMark:bMark := {|| A120AddMark(cMarca, aMarca, oMark, lMarkAll)}
	oMark:oBrowse:lHasMark    :=.T.
	oMark:oBrowse:lCanAllMark :=.T.     
	oMark:oBrowse:bAllMark    := {|| A120AllMark(cMarca, aMarca)}   
	oMark:oBrowse:Refresh()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Check para Marcar / Desmarcar Todos os itens de um CS ou AE ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oChk1                 := TCHECKBOX():Create(oDlg)
	oChk1:cName           := 'oChk1'
	oChk1:cCaption        := STR0123 //'Marca / Desmarca todos os itens do documento'
	oChk1:nLeft           := 05
	oChk1:nTop            := If(VAL(GetVersao(.F.)) > 11 .Or. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R5"),010,210)
	oChk1:nWidth          := 300
	oChk1:nHeight         := 17
	oChk1:lShowHint       := .T.
	oChk1:lReadOnly       := .F.
	oChk1:cVariable       := 'lMarkAll'
	oChk1:bSetGet         := {|u| If(PCount()>0, lMarkAll:=u, lMarkAll) }      
	oChk1:Align           := 0
	oChk1:lVisibleControl := .T.                                                             

	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||(nOpcA:=1),(oDlg:End())},{||oDlg:End()},,aButEnc)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Desfaz o Filtro do Arquivo SC3                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nTipoPed == 2
		dbSelectArea("SC3")
		dbSetOrder(1)
		dbClearFilter()
	Else
		dbSelectArea("SC1")
		dbSetOrder(1)
		dbClearFilter()
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o aCols com as SCs/Contratos selecionados      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nOpcA== 1
		nTamAcols := Len(aCols) //variavel para ser usada quando tiver produto grade no aCols
		For nX := 1 to Len(aMarca)			

			dbSelectArea(cAliasPID)
			MsGoto(aMarca[nX])
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Varre o aCols e compara se ja existe o item da solicitacao no pedido ³
			//³ se existir, nao sera inclusa no pedido.                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nExistIt := aScan(aCols,{|x| x[nPosNmSc] == FieldGet(FieldPos(aCampos[2])) .And. x[nPosItSc] == FieldGet(FieldPos(aCampos[3])).and.x[nPosItGra] == If(nTipoped==1,FieldGet(FieldPos(aCampos[10])),FieldGet(FieldPos(aCampos[9])) )})

			If nExistIt = 0	

				If aMarca[nX] > 0

					nDeleta := Ascan(aCols,{|x| x[nPosCod] = " "})			
					If nDeleta > 0
						Adel(aCols,nDeleta)
						Asize(aCols,Len(aCols)-1)
						MaColsToFis(aHeader,aCols)
						nTamAcols--
						Eval(bRefreTot)
					Endif

					nExistGra := Ascan(aCols,{|x| x[nPosNmSc] == FieldGet(FieldPos(aCampos[2])) .And. x[nPosItSc] == FieldGet(FieldPos(aCampos[3]))})
					If nExistGra == 0
					    cItPed = Iif(Len(aCols)=0,StrZero(1,Len(SC7->C7_ITEM)), cItPed :=Soma1(aCols[Len(aCols)][nPosItem]))
						cItem := cItPed
					Else
						cItem:= acols[nExistGra,nPosItem]
					Endif

					AADD(aCols,Array(Len(aHeader)+1))
					For nY := 1 to Len(aHeader)
						If Trim(aHeader[nY][2]) == "C7_ITEM"
							aCols[Len(aCols)][nY] 	:= cItem
						Elseif Trim(aHeader[nY][2]) == "C7_ALI_WT"
							aCols[Len(aCols)][nY] 	:= "SC7"
						ElseIf Trim(aHeader[nY][2])=="C7_REC_WT"
							aCols[Len(aCols)][nY] 	:= 0
						ElseIf Trim(aHeader[nY][2])=="C7_TES"	
							SB1->(DbSetOrder(1))
							If SB1->(DbSeek(xFilial("SB1")+IIF( nTipoPed == 1, SC1->C1_PRODUTO,SC3->C3_PRODUTO) ))
								aCols[Len(aCols)][nY] 	:=RetFldProd(SB1->B1_COD,"B1_TE")
							EndIf
						Else 		
							aCols[Len(aCols)][nY] := CriaVar(aHeader[nY][2],(aHeader[nY][10] <> "V") )
						EndIf
						aCols[Len(aCols)][Len(aHeader)+1] := .F.
					Next nY

					n := Len(aCols)

					If nTipoPed == 2
						aValores[FRETE] += SC3->C3_VALFRE
					Endif
					
					If nTipoPed == 2 .And. nPosACC > 0
						aCols[n,nPosACC] := SC3->C3_ACCPROC
					Endif

					A120MovCampos(If(nTipoPed!=2,C1_QUANT-C1_QUJE,C3_QUANT-C3_QUJE))

					If nTipoPed == 1
						aCols[n,nPosGrade]:=SC1->C1_GRADE
						aCols[n,nPosItGra]:=SC1->C1_ITEMGRD
					Endif

					If nTipoPed == 2
						aCols[n,nPosGrade]:=SC3->C3_GRADE
						aCols[n,nPosItGra]:=SC3->C3_ITEMGRD
						If nPosCC > 0
							aCols[n][nPosCC]:=SC3->C3_CC
						EndIf
						cCondicao := SC3->C3_COND

						cTpFrete := RetTipoFrete(SC3->C3_TPFRETE)

					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Carrega a Tabela de Preco se a mesma estiver informada no cadastro Produto X Fornecedor³
					//³e for valida conforme a condicao de pagamento informada no cabecalho do Pedido Compras.³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nPosCodTab > 0 .And. nTipoPed == 1 // Somente de Solicitacao de Compras para Pedido
						dbSelectArea("SA5")
						dbSetOrder(1)
						lAchou := MsSeek(xFilial("SA5")+cA120Forn+cA120Loj+aCols[n][nPosCod])
						If lAchou
							If !Empty(SA5->A5_CODTAB)
								If MaVldTabCom(cA120Forn,cA120Loj,SA5->A5_CODTAB,cCondicao,/*cHelp*/,dA120Emis)
									aCols[n][nPosCodTab] := SA5->A5_CODTAB 							
								EndIf
							EndIf
						Else
							cProdRef	:= aCols[n][nPosCod]
							lReferencia	:= MatGrdPrRf(@cProdRef,.T.)
							If lReferencia
								dbSelectArea("SA5")
								dbSetOrder(9)
								If MsSeek(xFilial("SA5")+cA120Forn+cA120Loj+cProdRef)
									If !Empty(SA5->A5_CODTAB)
										If MaVldTabCom(cA120Forn,cA120Loj,SA5->A5_CODTAB,cCondicao,/*cHelp*/,dA120Emis)
											aCols[n][nPosCodTab] := SA5->A5_CODTAB 							
										EndIf
									EndIf
								EndIf
							EndIf
						EndIf
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Inicia a Carga do item nas funcoes MATXFIS  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					MaFisIniLoad(Len(aCols))
					For nZ := 1 To Len(aRefImpos)
						If aScan(aHeader,{|x| AllTrim(x[2]) == AllTrim(aRefImpos[nZ][2])}) > 0
							MaFisLoad(aRefImpos[nZ][3] , aCols[Len(aCols)][ aScan(aHeader,{|x| AllTrim(x[2]) == AllTrim (aRefImpos[nZ][2]) })] , Len(aCols) )
                        EndIf
					Next nZ
					MaFisEndLoad(Len(aCols),2)
				
					A120Tabela("C7_QUANT",If(nTipoPed!=2,SC1->C1_QUANT-SC1->C1_QUJE,SC3->C3_QUANT-SC3->C3_QUJE))

					If nTipoPed == 2 .And. SC3->C3_VALFRE > 0
						MaFisAlt("IT_FRETE",SC3->C3_VALFRE,n)
					EndIf

					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Impede que o item do PC seja deletado pela getdados da NFE na movimentacao das setas. ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					oGetDados:lNewLine := .F.
					If ValType(aA120PID) == "A"
						AAdd(aA120PID,aMarca[nx])
					Endif
					
					If lPrjCni   
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Controle do Rateio Financeiro                                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If nTipoPed == 1
							If SC1->C1_RATFIN == "1"
								cChaveRat := "SC1"+SC1->C1_FILIAL+SC1->C1_NUM
								F641TrfRat(cChaveRat,@aRatFin,SC1->C1_QUANT)
							EndIf							
						EndIf									
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Carrega o rateio da solicitacao de compra para o pedido  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nTipoPed <> 2 .And. AliasIndic("SCX")
						cChaveRat := SC1->(C1_NUM+C1_ITEM)
						A120BuRtSC(cChaveRat,@aHeadSCH,@aColsSCH,.F.)
					EndIf	
				EndIf	
			EndIf
		Next
	Else
		For nX := 1 to Len(aMarca)			
			dbSelectArea(cAliasPID)
			MsGoto(aMarca[nx])
			If aMarca[nx] > 0
				If SimpleLock(cAliasPID)		
					(cAliasPID)->(MsRUnlock())
				Endif
			Endif
		Next nX
	EndIf	

	RestArea(aAreaSC1)
	RestArea(aAreaSC3)
	RestArea(aAreaSX3)

	If lGrade .And. Len(aMarca) > 0 .And. nOpcA==1

		aCols := aSort(aCols,,,{|x,y| x[nPosItem]+x[nPosItGra] < y[nPosItem]+y[nPosItGra] })
		aCols := aColsGrade(oGrade, aCols, aHeader, "C7_PRODUTO", "C7_ITEM", "C7_ITEMGRD",,.F.,nTamAcols)

		MaColsToFis(aHeader,aCols,,"MT120",.T.)

		MaFisAlt("NF_FRETE",avalores[FRETE])
		MaFisAlt("NF_DESPESA",avalores[VALDESP])
		MaFisAlt("NF_SEGURO",avalores[SEGURO])
		MaFisAlt("NF_DESCONTO",avalores[VALDESC])
		
		If cPaisLoc == "PTG"
			MaFisAlt("NF_DESNTRB",avalores[NTRIB])
			MaFisAlt("NF_TARA",avalores[TARA])
		Endif

		N := Len(aCols)

	Endif
 
	If nTipoPed == 2
		oCond:Refresh()
		A120DescCnd(cCondicao,oDescCond,@cDescCond)
	EndIf

	Eval(bPIDRefresh)    
	oGetDados:oBrowse:Refresh()
	
	If lPrjCni
		//Grava rateio financeiro
		If Len(aRatFin) > 0
			cChaveRat := "SC7"+xFilial("SC7")+ca120num
			F641GrvRat(cChaveRat,aRatFin)
			aRatFin := {}
		EndIf
	EndIf


Else
	Help("  ",1,"A120CAB") // Campos obrigatorios do cabecalho nao preenchidos.
EndIf

RestArea(aArea)
SetKey( VK_F4,bKeyF4 )

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120Flag   ³ Autor ³Alexandre Inacio Lemes³ Data ³14/05/2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida o Controle de marcas da Solicitacao de compras      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Flag()

Local lSolic := If(SuperGetMv("MV_RESTCOM")=="S",.T.,.F.)
Local aGrupo := IIf(lSolic,UsrGrComp(__cUserId),{})

Local cFlag	 := If(nTipoPed!=2,(If(C1_QUJE>=C1_QUANT,'X',' ')+If(C1_TPOP=='P'.And.C1_APROV$"R,B",'X',' ');
	+If(Empty(SC1->C1_GRUPCOM),' ',If(lSolic.And.aScan(aGrupo,SC1->C1_GRUPCOM) <= 0,'X',' '))),;
	(If(C3_QUJE>=C3_QUANT,'X',C3_RESIDUO)))

Return cFlag

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120AddMark³ Autor ³ Edson Maricate       ³ Data ³ 01.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Adiciona o Recno() do registro no controle de marcas        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Marca                                              ³±±
±±³          ³ ExpA1 = Array da Marca                                     ³±±
±±³          ³ ExpO1 = Objeto da Marca                                    ³±±
±±³          ³ ExpL1 = Variavel logica que indica se marca todos ou nao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120AddMark(cMarca, aMarca, oMark, lMarkAll)

Local cSeek      := If(!(nTipoPed==2), C1_FILIAL+C1_NUM, C3_FILIAL+C3_NUM)
Local cCompara   := If(!(nTipoPed==2), 'C1_FILIAL+C1_NUM', 'C3_FILIAL+C3_NUM')
Local cCpoMarca  := If(!(nTipoPed==2), 'C1_OK', 'C3_OK')
Local nOrderSeek := If(!(nTipoPed==2), 1, 1) //-- C1_FILIAL+C1_NUM+C1_ITEM ou C3_FILIAL+C3_NUM+C3_ITEM
Local cAlias     := Alias()
Local nRecno     := Recno()
Local nPos       := 0

If !(&(cCpoMarca)==cMarca)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Desmarca registro posicionado                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPos := (aScan(aMarca, RecNo()))
	If nPos > 0
		aDel(aMarca, nPos); aSize(aMarca, Len(aMarca)-1)
		If SimpleLock(cAlias)		
			(cAlias)->(MsRUnlock())
		Endif	
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Checa se deve desmarcar todos os registros                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMarkAll
		dbSelectArea(cAlias)
		dbSetOrder(nOrderSeek)
		If MsSeek(cSeek, .F.)
			Do While !Eof() .And. cSeek == &(cCompara)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Desmarca registro posicionado                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nPos := (aScan(aMarca, RecNo()))
				If nPos > 0
					aDel(aMarca, nPos); aSize(aMarca, Len(aMarca)-1)
				EndIf
				If !(Recno()==nRecno)
					Reclock(cAlias, .F.)
					Fieldput(Fieldpos(cCpoMarca), '')
					MsUnlock()
				EndIf	
				If SimpleLock(cAlias)		
					(cAlias)->(MsRUnlock())
				Endif	
				dbSkip()
			EndDo
		EndIf	
		dbGoto(nRecno)
		oMark:oBrowse:Refresh()
	EndIf

Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Marca registro posicionado                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If aScan(aMarca, Recno()) == 0
		aAdd(aMarca, Recno())
		SimpleLock(cAlias)				
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Checa se deve marcar todos os registros	                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMarkAll
		dbSetOrder(nOrderSeek)
		If MsSeek(cSeek, .F.)
			Do While !Eof() .And. cSeek == &(cCompara)
				If aScan(aMarca, Recno()) == 0
					aAdd(aMarca, Recno())
				EndIf	
				If !(Recno()==nRecno)
					Reclock(cAlias,.F.)
					Fieldput(Fieldpos(cCpoMarca), cMarca)
					MsUnlock()					
					SimpleLock(cAlias)		
				EndIf	
				dbSkip()
			EndDo
		EndIf	
		dbGoto(nRecno)
		oMark:oBrowse:Refresh()
	EndIf
EndIf

Return Nil

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120VisuSC³ Autor ³ Edson Maricate        ³ Data ³ 01.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Visualiza a Solicitacao/Contrato posicionado.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 = Recno()                                            ³±±
±±³          ³ ExpC1 = Filtro                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120VisuSC(nRecNo,cFilter)

Local aArea		 := GetArea()
Local aAreaSC1	 := SC1->(GetArea())
Local aAreaSC3	 := SC3->(GetArea())
Local aSavHeader := aClone(aHeader)
Local aSavCols	 := aClone(aCols)
Local nSavPed	 := MaFisSave()
Local nSavN      := N

DEFAULT cFilter  := ""

MaFisEnd()
N := 1

If nTipoPed != 2
	dbSelectArea("SC1")
	MsGoto(nRecNo)
	A110Visual("SC1",RecNo(),2)
	If !Empty(cFilter)
		dbSelectArea("SC1")
		dbSetOrder(1)
		Set Filter To &(cFilter)
	Endif	
Else
	dbSelectArea("SC3")
	MsGoto(nRecNo)
	MATA125(NIL,NIL,2)
	If !Empty(cFilter)
		dbSelectArea("SC3")
		dbSetOrder(1)
		Set Filter To &(cFilter)
	Endif
EndIf

aCols	:= aClone(aSavCols)
aHeader := aClone(aSavHeader)
N       := nSavN

MaFisRestore()

RestArea(aAreaSC1)
RestArea(aAreaSC3)
RestArea(aArea)

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A120ChkAlmox³Autor³ Edson Maricate      ³ Data ³05.01.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Aviso de que a almoxarifado nao existe                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo do produto                                ³±±
±±³          ³ ExpC2 = Codigo do almoxarifado                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120ChkAlmox(cProduto,cAlmox)

Local aArea	 	  := GetArea()
Local cEntrega	  := If(SuperGetMv("MV_PCFILEN"),xFilEnt(cFilialEnt,"SC7"),xFilial("SB2"))
Local cLinha1     := STR0095+ cAlmox + STR0096	//"O Armanzen "###" nao existe para este produto. "
Local cLinha2     := STR0097  					//"Deseja criar agora ? "
Local lGrade      := MaGrade()
Local lReferencia := .F.
Local lRet 		  := .T.

If lGrade
	lReferencia := MatGrdPrrf(@cProduto)
Endif

If !lReferencia

	If FWModeAccess("SC7")=="C" .And. !Empty(xFilial("SB2"))
		cEntrega := xFilial("SB2")
	EndIf

	dbSelectArea("SB2")
	dbSetOrder(1)
	If !MsSeek(cEntrega+cProduto+cAlmox,.F.)
		TONE(3500,1)
		If ( Type("l120Auto") != "U" .And. l120Auto )
			CriaSB2(cProduto,cAlmox,cEntrega)
			lRet := .T.
		Else
			If MsgYesNo(cLinha1+cLinha2,STR0098+cProduto) //"Aten‡„o - "
				CriaSB2(cProduto,cAlmox,cEntrega)
			Else
				lRet := .F.
			EndIf
		EndIf
	EndIf
Endif

RestArea(aArea)

Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120Leg  ³Autor  ³Alexandre Inacio Lemes ³Data  ³11/04/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma janela contendo a legenda da mBrowse              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Legend()

Local aLegenda	 := {}
Local aLegeUsr   := {}

If nTipoPed == 1
	aAdd(aLegenda,{"ENABLE" 		,STR0079})
	aAdd(aLegenda,{"BR_AMARELO"		,STR0083})
	aAdd(aLegenda,{"DISABLE"		,STR0080})
	aAdd(aLegenda,{"BR_AZUL"		,STR0081})
	aAdd(aLegenda,{"BR_CINZA"		,STR0099})
	aAdd(aLegenda,{"BR_LARANJA"		,STR0117})
	aAdd(aLegenda,{"BR_PRETO"		,STR0082})
	aAdd(aLegenda,{"BR_BRANCO"	    ,STR0128})
	aAdd(aLegenda,{"PMSEDT2"	    ,STR0202})
Else
	aAdd(aLegenda,{"ENABLE"			,STR0084})
	aAdd(aLegenda,{"BR_AMARELO"		,STR0087})
	aAdd(aLegenda,{"DISABLE"		,STR0085})
	aAdd(aLegenda,{"BR_AZUL"		,STR0104})
	aAdd(aLegenda,{"BR_CINZA"		,STR0086})
	aAdd(aLegenda,{"BR_LARANJA"		,STR0117})
	aAdd(aLegenda,{"BR_PRETO"		,STR0088})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para inclusão de novo STATUS da legenda    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( ExistTemplate("MT120LEG") )
	aLegeUsr := ExecTemplate( "MT120LEG", .F., .F., { aLegenda } )
	If ( ValType( aLegeUsr ) == "A" )
		aLegenda := aClone(aLegeUsr)
	EndIf
EndIf
If ( ExistBlock("MT120LEG") )
	aLegeUsr := ExecBlock("MT120LEG",.F.,.F.,{aLegenda})
	If ( ValType(aLegeUsr) == "A" )
		aLegenda := aClone(aLegeUsr)
	EndIf
EndIf

BrwLegenda(cCadastro,STR0078, aLegenda )

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ProcH      ³ Autor ³ Microsiga S/A        ³ Data ³ 14.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Pesquisa campo dentro do array aAutoCab			          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function ProcH(cCampo)
Return aScan(aAutoCab,{|x|Trim(x[1])== cCampo })

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120ComView³ Autor ³ Edson Maricate       ³ Data ³ 14.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Cria uma tela de consulta de historico dos produtos        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120ComView()

Local nPosCod := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_PRODUTO"})

MaFisSave()
MaFisEnd()

If !AtIsRotina("MACOMVIEW")
	If !Empty(aCols[n][nPosCod])
		MaComView(aCols[n][nPosCod])
	EndIf
EndIf

MaFisRestore()

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120DescCnd³ Autor ³ Edson Maricate       ³ Data ³ 14.10.98 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preenche a descricao da condicao de pagto.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A120DescCnd(@ExpC1,@Expo1,ExpC2)                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Codigo da Condicao de Pagamento                    ³±±
±±³          ³ Expo1 = Objeto da Descricao da Condicao de Pagamento       ³±±
±±³          ³ ExpC2 = Decricao da condicao de pagamento                  ³±±
±±³          ³ Expo2 = Objeto da GetDados                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120DescCnd(cCondicao,oDescCond,cDescCond,oGetDados)

dbSelectArea("SE4")
dbSetOrder(1)
If MsSeek(xFilial("SE4")+cCondicao)
	cDescCond := SE4->E4_DESCRI
	If oDescCond != Nil
		oDescCond:Refresh()
	EndIf
EndIf

If oGetDados <> Nil
	oGetDados:oBrowse:Refresh()
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A120ValCond  ³ Rev ³ Julio C.Guerato      ³ Data ³03.06.2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Função para validar a Cond.Pagamento                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Condicao de Pagamento                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Valor Logico .T. / .F.                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Validar a Condicao de pagamento							   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120ValCond(cCondicao)

Local lRet     := .F.
Local lRet1    := .F.
Local aArea    := GetArea()

// PE para permitir ou não a utilização ca Cond.Pagamento Tipo 9
If ExistBlock("MT120VCP9")
	lRet1 := ExecBlock("MT120VCP9",.F.,.F.)
	If ValType(lRet) <> "L"
		lRet1 := .F.			
	EndIF
EndIf

dbSelectArea("SE4")
dbSetOrder(1)
If ( !Empty(cCondicao) .And. ExistCpo("SE4",cCondicao) )
	MsSeek(xFilial("SE4")+cCondicao)
	If SE4->E4_TIPO == "9"
	    If !lRet1
 			Help(" ",1,"A120VCOND")
			lRet := .F.
	    Else
	    	lRet := .T.
	    EndIf
	Else
		lRet := .T.
	EndIf
EndIf

RestArea(aArea)
Return(lRet)


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120Impri ³ Autor ³ Aline Correa do Vale ³ Data ³ 18.04.01 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Efetua a chamada do relatorio padrao ou do usuario         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpX1 := A120Impri( ExpC1, ExpN1, ExpN2 )                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 -> Alias do arquivo                                  ³±±
±±³          ³ ExpN1 -> Recno do registro                                 ³±±
±±³          ³ ExpN2 -> Opcao do Menu                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpX1 -> Retorno do relatorio                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120Impri( cAlias, nRecno, nOpc )

Local aArea    := GetArea()
Local cPrinter := SuperGetMv("MV_PCOMPRA" ,, "" )
Local cPedido  := ""
Local lBackPed := lPedido
Local lRet     := .T.

If !Empty( cPrinter ) .And. Existblock( cPrinter )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz a chamada do relatorio de usuario                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ExecBlock( cPrinter, .F., .F., { cAlias, nRecno, nOpc } )
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz a chamada do relatorio padrao                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cPaisLoc == "BRA"
		If cPrinter == "MATR110A"
			lRet := MATR110A(SC7->C7_NUM)	// Pedido de compras modelo 2
		Else
			lRet := MATR110( cAlias, nRecno, nOpc )
		EndIf
	Else
		lRet := MATR111( cAlias, nRecno, nOpc ) 		
	EndIf	
EndIf

RestArea( aArea )
lPedido := lBackPed
cPedido := SC7->C7_NUM

If Type( "bFiltraBRW" ) == "B"
	Eval( bFiltraBRW )
EndIf

Return( lRet )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120Copia ³ Rev.  ³ Edson Maricate        ³ Data ³06.12.1999³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de inclusao/alteracao/exclusao de Pedidos         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A120Pedido(ExpC1,ExpN1,ExpN2)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpN2 = Opcao selecionada                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Copia(cAlias,nReg,nOpcX)

Local lRet:=.T.

If !SC7->(Eof())          
	lRet := A120Pedido(cAlias,nReg,nOpcX,,.T.)	
EndIf 	

Return( lRet )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MyMata120 ³ Autor ³ Eduardo Riera         ³ Data ³26.11.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de teste da rotina automatica do programa MATA120     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar testes na rotina de    ³±±
±±³          ³documento de entrada                                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MyMata120()

Local aCabec := {}
Local aItens := {}
Local aLinha := {}
Local nX     := 0
Local nY     := 0
Local cDoc   := ""
Local lOk    := .T.

PRIVATE lMsErroAuto := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Abertura do ambiente                                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ConOut(Repl("-",80))
ConOut(PadC("Teste de Inclusao de 10 pedidos de compra com 30 itens cada",80))
PREPARE ENVIRONMENT EMPRESA "99" FILIAL "01" MODULO "COM" TABLES "SC7","SA2","SB1","SB2","SF4"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verificacao do ambiente para teste                           |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If !SB1->(MsSeek(xFilial("SB1")+"PA001"))
	lOk := .F.
	ConOut("Cadastrar produto: PA001")
EndIf
dbSelectArea("SF4")
dbSetOrder(1)
If !SF4->(MsSeek(xFilial("SF4")+"001"))
	lOk := .F.
	ConOut("Cadastrar TES: 001")
EndIf
dbSelectArea("SE4")
dbSetOrder(1)
If !SE4->(MsSeek(xFilial("SE4")+"001"))
	lOk := .F.
	ConOut("Cadastrar condicao de pagamento: 001")
EndIf
If !SB1->(MsSeek(xFilial("SB1")+"PA002"))
	lOk := .F.
	ConOut("Cadastrar produto: PA002")
EndIf
dbSelectArea("SA2")
dbSetOrder(1)
If !SA2->(MsSeek(xFilial("SA2")+"F0000101"))
	lOk := .F.
	ConOut("Cadastrar fornecedor: F0000101")
EndIf
If lOk
	ConOut("Inicio: "+Time())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Verifica o ultimo documento valido para um fornecedor        |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC7")
	dbSetOrder(1)
	MsSeek(xFilial("SC7")+"zzzzzz",.T.)
	dbSkip(-1)
	cDoc := SC7->C7_NUM
	For nY := 1 To 10
		aCabec := {}
		aItens := {}

		If Empty(cDoc)
			cDoc := StrZero(1,Len(SC7->C7_NUM))
		Else
			cDoc := Soma1(cDoc)
		EndIf

		aadd(aCabec,{"C7_NUM"     ,cDoc})
		aadd(aCabec,{"C7_EMISSAO" ,dDataBase})
		aadd(aCabec,{"C7_FORNECE" ,"F00001"})
		aadd(aCabec,{"C7_LOJA"    ,"01"})
		aadd(aCabec,{"C7_COND"    ,"001"})
		aadd(aCabec,{"C7_CONTATO" ,"AUTO"})
		aadd(aCabec,{"C7_FILENT"  ,cFilAnt})
		aadd(aCabec,{"C7_MOEDA"   ,1}) 
		aadd(aCabec,{"C7_TXMOEDA" ,1})
		aadd(aCabec,{"C7_FRETE"   ,0})
		aadd(aCabec,{"C7_DESPESA" ,0})
		aadd(aCabec,{"C7_SEGURO"  ,0})
		aadd(aCabec,{"C7_DESC1"   ,0})
		aadd(aCabec,{"C7_DESC2"   ,0})
		aadd(aCabec,{"C7_DESC3"   ,0})
		aadd(aCabec,{"C7_MSG"     ,""})
		aadd(aCabec,{"C7_REAJUST" ,""})
		For nX := 1 To 3
			aLinha := {}
			aadd(aLinha,{"C7_PRODUTO"  ,"PA001",Nil})
			aadd(aLinha,{"C7_QUANT",1,Nil})
			aadd(aLinha,{"C7_PRECO",100,Nil})
			aadd(aLinha,{"C7_TOTAL",100,Nil})
			aadd(aLinha,{"C7_TES","001",Nil})
			aadd(aItens,aLinha)
		Next nX                             
		If cPaisLoc == "PTG"   
			aadd(aCabec,{"C7_DESNTRB" ,0})
			aadd(aCabec,{"C7_TARA" ,0})
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Teste de Inclusao                                            |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MATA120(1,aCabec,aItens)
		If !lMsErroAuto
			ConOut("Incluido com sucesso! "+cDoc)	
		Else
			ConOut("Erro na inclusao!")
		EndIf
	Next nY
	ConOut("Fim  : "+Time())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de exclusao                                            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCabec := {}
	aItens := {}
	aadd(aCabec,{"C7_NUM"     ,cDoc})
	aadd(aCabec,{"C7_EMISSAO" ,dDataBase})
	aadd(aCabec,{"C7_FORNECE" ,"F00001"})
	aadd(aCabec,{"C7_LOJA"    ,"01"})
	aadd(aCabec,{"C7_COND"    ,"001"})
	aadd(aCabec,{"C7_CONTATO" ,"AUTO"})
	aadd(aCabec,{"C7_FILENT"  ,cFilAnt})
	aadd(aCabec,{"C7_MOEDA"   ,1})
	aadd(aCabec,{"C7_TXMOEDA" ,1})
	aadd(aCabec,{"C7_FRETE"   ,0})
	aadd(aCabec,{"C7_DESPESA" ,0})
	aadd(aCabec,{"C7_SEGURO"  ,0})
	aadd(aCabec,{"C7_DESC1"   ,0})
	aadd(aCabec,{"C7_DESC2"   ,0})
	aadd(aCabec,{"C7_DESC3"   ,0})
	aadd(aCabec,{"C7_MSG"     ,""})
	aadd(aCabec,{"C7_REAJUST" ,""})
	For nX := 1 To 3
		aLinha := {}
		aadd(aLinha,{"C7_ITEM"	 ,StrZero(nX,Len(SC7->C7_ITEM)),Nil})
		aadd(aLinha,{"C7_PRODUTO","PA001",Nil})
		aadd(aLinha,{"C7_QUANT"  ,2,Nil})
		aadd(aLinha,{"C7_PRECO"  ,100,Nil})
		aadd(aLinha,{"C7_TOTAL"  ,200,Nil})      
		
		aadd(aLinha,{"C7_REC_WT" ,SC7->(RECNO()) ,Nil})
		aadd(aItens,aLinha)
	Next nX
	If cPaisLoc == "PTG"   
		aadd(aCabec,{"C7_DESNTRB" ,0})
		aadd(aCabec,{"C7_TARA" ,0})
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de Exclusao                                            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ConOut(PadC("Teste de exclusao",80))
	ConOut("Inicio: "+Time())
	MATA120(1,aCabec,aItens,5)
	If !lMsErroAuto
		ConOut("Exclusao com sucesso! "+cDoc)	
	Else
		ConOut("Erro na exclusao!")
	EndIf
	ConOut("Fim  : "+Time())
	ConOut(Repl("-",80))
EndIf
RESET ENVIRONMENT

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A120Track³ Autor ³ Aline Correa do Vale  ³ Data ³16/06/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz o tratamento da chamada do System Tracker              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.                                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A120Track()

Local aEnt     := {}
Local cKey     := cA120Num
Local nPosItem := GDFieldPos( "C7_ITEM" )
Local nLoop    := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa a funcao fiscal                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 To Len( aCols )
	AAdd( aEnt, { "SC7", Iif(cFilialEnt <> xFilial("SC7") , cFilialEnt , xFilial("SC7")) + cKey + aCols[ nLoop, nPosItem ] } )
Next nLoop

MaFisSave()
MaFisEnd()

MaTrkShow( aEnt )

MaFisRestore()

Return( .T. )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120Tabela³ Autor ³ Eduardo Riera         ³ Data ³09.10.2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que retorna o preco de compra                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1 = Preco de Lista                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 = Campo referencia                                    ³±±
±±³          ³ExpC2 = conteudo do campo referencia                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Tabela(cReadVar,xConteudo)

Static lMT120Tab:= ExistBlock('MT120TAB')

Local aArea     := GetArea()
Local aAreaSB1  := SB1->(GetArea())
Local nPCodTab  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_CODTAB"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRODUTO"})
Local nPQuant   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QUANT"})
Local nPPreco   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRECO"})
Local nPAVista  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_AVISTA"})
Local nPTxFor   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TAXAFOR"})
Local nPrcCom   := aCols[N][nPPreco]
Local nQtde     := aCols[N][nPQuant]
Local cProduto  := aCols[N][nPProduto]
Local cCodTab	:= aCols[N][nPCodTab] 

DEFAULT cReadVar  := ReadVar()
DEFAULT xConteudo := &(ReadVar())

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.)// .T.=Permite preencher aCols /  .F.=Executando via VldHead()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o campo de tabela de preco esta ativo            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPCodTab > 0 .And. lGatilha
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica qual o campo ativo na getdados                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Do Case
	Case "C7_CODTAB"$cReadVar
		cCodTab  := xConteudo
	Case "C7_PRODUTO"$cReadVar
		cProduto := xConteudo
	Case "C7_QUANT"$cReadVar
		nQtde 	 := xConteudo
	EndCase

	If !Empty(cCodTab)

		dbSelectArea("SB1")
		dbSetOrder(1)

		If ( !Empty(cProduto) .And. MsSeek(xFilial("SB1")+cProduto,.F.) )
			nPrcCom := MaTabPrCom(cCodTab,cProduto,nQtde,cA120Forn,cA120Loj,nMoedaPed,dA120Emis,nTxMoeda)
		EndIf

		If nPAVista > 0
			aCols[N][nPAVista] := nPrcCom	
		EndIf

		If nPAVista > 0 .And. nPTxFor > 0 .And. aCols[n][nPTxFor] > 0
			nPrcCom	:= a120FV(nPrcCom,aCols[n][nPTxFor])
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza a funcao fiscal                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		If MaFisFound("IT",N)
			MaFisRef("IT_PRCUNI","MT120",nPrcCom)
			If ExistTrigger("C7_PRECO")
				RunTrigger(2,N)
			EndIf			
		EndIf

		If lMT120Tab
			ExecBlock("MT120TAB",.F.,.F.)
		EndIf

	EndIf
EndIf

A120CalcDesc()

RestArea(aAreaSB1)
RestArea(aArea)

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120DescMoed|Autor ³Alexandre Inacio Lemes³ Data ³16/01/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preenche a descricao da Moeda                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1 = Moeda do pedido                                     ³±±
±±³          ³Expo1 = Objeto da descricao da moeda do pc                  ³±±
±±³          ³ExpC1 = Descricao da moeda do PC                            ³±±
±±³          ³ExpN2 = Taxa da moeda do PC                                 ³±±
±±³          ³ExpA1 = Array com os objetos do cabecalho                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120DescMoed(nMoedaPed,oDescMoed,cDescMoed,nTxMoeda,aObj)

Local lMoedLocTx  := GetNewPar("MV_MOEDLOC",.F.) //Param criado para atualizar a TX da moeda no PC em outros paises o DEFAULT nao atualiza a Taxa.
local cDescMoedBKP:= cDescMoed
Local nPosCodTab  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CODTAB"})
Local nX		  := 0
Local nBkp		  := 0

cDescMoed := SuperGetMv("MV_MOEDA"+AllTrim(Str(nMoedaPed,2)))

If oDescMoed != Nil
	oDescMoed:Refresh()
EndIf

IF cPaisLoc=="BRA" .Or. lMoedLocTx
	nTxMoeda:=RecMoeda(dDataBase,nMoedaPed)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Redefine as Pictures dos objetos dos Folders do PC quando a Moeda e  ³
//³ alterada, necessaria para paises onde nao existe o uso de casas deci ³
//³ mais na moeda corrente. Exemplo: PESOS no Chile com PC em Dolar.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If aObj != Nil .and. cPaisLoc != "BRA"
	aObj[01]:PICTURE:=PesqPict('SC7','C7_TOTAL',17,nMoedaPed)
	aObj[02]:PICTURE:=PesqPict('SC7','C7_VLDESC',17,nMoedaPed)
	aObj[03]:PICTURE:=PesqPict('SC7','C7_FRETE',17,nMoedaPed)
	aObj[04]:PICTURE:=PesqPict('SC7','C7_TOTAL',17,nMoedaPed)
	aObj[12]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	aObj[13]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	aObj[14]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	aObj[15]:PICTURE:=PesqPict('SC7','C7_DESC1',,nMoedaPed)
	aObj[16]:PICTURE:=PesqPict('SC7','C7_DESC2',,nMoedaPed)
	aObj[17]:PICTURE:=PesqPict('SC7','C7_DESC3',,nMoedaPed)
	aObj[18]:PICTURE:=PesqPict('SC7','C7_VLDESC',14,nMoedaPed)
	aObj[19]:PICTURE:=PesqPict('SC7','C7_TOTAL',14,nMoedaPed)
	aObj[22]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	aObj[23]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	aObj[24]:PICTURE:=PesqPict('SC7','C7_FRETE',14,nMoedaPed)
	If cPaisLoc == "PTG"                                      
		aObj[25]:PICTURE:=PesqPict('SC7','C7_DESNTRB',14,nMoedaPed)
		aObj[26]:PICTURE:=PesqPict('SC7','C7_TARA',14,nMoedaPed)
		aObj[27]:PICTURE:=PesqPict('SC7','C7_DESNTRB',14,nMoedaPed)
		aObj[28]:PICTURE:=PesqPict('SC7','C7_TARA',14,nMoedaPed)
	Endif
EndIf

If cDescMoedBKP <> cDescMoed  .and. ExistBlock('MT120MOE')
	cRet:= ExecBlock("MT120MOE",.F.,.F.)
	If ValType(cRet) <> "C"
		cRet:= "0"
	EndIf
	If cRet == "1" .And. nPosCodTab > 0
		If Len(aCols) > 0
			nBkp:= N
			For nX:= 1 to Len(aCols)
				N:= nX
				A120Tabela("C7_CODTAB",aCols[N][nPosCodTab])
			Next nX
			N:= nBkp
		EndIf
	EndIf
	Eval(bRefresh)
	Eval(bGDRefresh)	
EndIf

Return .T.

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120FV    ³ Autor ³ Eduardo Riera         ³ Data ³18.01.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que calcula o preco de compra com base no preco a vis³±±
±±³          ³ta e na taxa do fornecedor  - RIPASA                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Preco futuro                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Preco a Vista (OPC)                                  ³±±
±±³          ³ExpN2: Taxa do fornecedor (OPC)                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120FV(nPrcVis,nTaxaFor)

Local aVencto  := {}
Local nPPrcVis := aScan(aHeader,{|x| AllTrim(x[2])=="C7_AVISTA" })
Local nPTxFor  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TAXAFOR" })
Local nPPreco  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRECO" })
Local nValFV   := 0
Local nX       := 0
Local nValRetImp	:= 0
Local i			:= 0

If nPPrcVis > 0 .And. nPTxFor > 0
	DEFAULT nPrcVis  := aCols[n][nPPrcVis]
	DEFAULT nTaxaFor := aCols[n][nPTxFor ]

	If SFB->FB_JNS == 'J' .and. cPaisLoc == 'COL'
		dbSelectArea("SFC")
		dbSetOrder(2)
		If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV2")
			If FC_INCDUPL == '1'
				nPrcVis := nPrcVis - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nPrcVis := nPrcVis + nValRetImp
			EndIf
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV4")
			If FC_INCDUPL == '1'
				nPrcVis := nPrcVis - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nPrcVis := nPrcVis + nValRetImp
			EndIf
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV7")
			If FC_INCDUPL == '1'
				nPrcVis := nPrcVis - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nPrcVis := nPrcVis + nValRetImp
			EndIf
		Endif
	EndIf					

	aVencto := Condicao(nPrcVis,cCondicao,0,dDataBase,0)

	For nX := 1 To Len(aVencto)
		nValFV += MaValPres(aVencto[nX][2],aVencto[nX][1],nTaxaFor,2)
	Next nX	
	aCols[n][nPPreco] := nValFV
EndIf

Return(nValFV)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120PrcVis³ Autor ³ Eduardo Riera         ³ Data ³18.01.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao de validacao do preco a vista - RIPASA               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Preco a Vista (OPC)                                  ³±±
±±³          ³ExpN2: Taxa do fornecedor (OPC)                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120PrcVis(nPrcVis,nTaxaFor)

Local aVencto  := {}
Local nPTotal  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TOTAL" })
Local nPQuant  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QUANT" })
Local nPPrcVis := aScan(aHeader,{|x| AllTrim(x[2])=="C7_AVISTA" })
Local nPTxFor  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TAXAFOR" })
Local nPPreco  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRECO" })
Local nPVlDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C7_VLDESC" })
Local nPDesc   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_DESC" })
Local nValFV   := 0
Local nX       := 0
Local nValRetImp	:= 0
Local i			:= 0

If nPPrcVis > 0 .And. nPTxFor > 0

	DEFAULT nPrcVis  := aCols[n][nPPrcVis]
	DEFAULT nTaxaFor := aCols[n][nPTxFor ]

	If nPrcVis > 0
	
		If SFB->FB_JNS == 'J' .and. cPaisLoc == 'COL'
			dbSelectArea("SFC")
			dbSetOrder(2)
			If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
				nValRetImp 	:= MaFisRet(,"NF_VALIV2")
				If FC_INCDUPL == '1'
					nPrcVis := nPrcVis - nValRetImp
				ElseIf FC_INCDUPL == '2'
					nPrcVis := nPrcVis + nValRetImp
				EndIf
			Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
				nValRetImp 	:= MaFisRet(,"NF_VALIV4")
				If FC_INCDUPL == '1'
					nPrcVis := nPrcVis - nValRetImp
				ElseIf FC_INCDUPL == '2'
					nPrcVis := nPrcVis + nValRetImp
				EndIf
			Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
				nValRetImp 	:= MaFisRet(,"NF_VALIV7")
				If FC_INCDUPL == '1'
					nPrcVis := nPrcVis - nValRetImp
				ElseIf FC_INCDUPL == '2'
					nPrcVis := nPrcVis + nValRetImp
				EndIf
			EndIf
		EndIf

		aVencto := Condicao(nPrcVis,cCondicao,0,dDataBase,0)

		For nX := 1 To Len(aVencto)
			nValFV += MaValPres(aVencto[nX][2],aVencto[nX][1],nTaxaFor,2)
		Next nX	

		aCols[n][nPPreco] := NoRound(nValFV,TamSx3("C7_PRECO")[2])

		If MaFisFound("IT",N)
			MaFisRef("IT_PRCUNI","MT120",nValFV)
		EndIf

		If Abs(aCols[n][nPTotal]-NoRound(aCols[n][nPPreco]*aCols[n][nPQuant],TamSx3("C7_TOTAL")[2]))<>0.09
			aCols[n][nPTotal] := NoRound(aCols[n][nPPreco]*aCols[n][nPQuant],TamSx3("C7_TOTAL")[2])
			If MaFisFound("IT",N)
				MaFisRef("IT_VALMERC","MT120",aCols[n][nPTotal])
			EndIf
		EndIf	

		If aCols[n][nPDesc]>0
			aCols[n][nPvlDesc] := NoRound(aCols[n][nPTotal]*aCols[n][nPDesc]/100,TamSx3("C7_VLDESC")[2])
			If MaFisFound("IT",N)
				MaFisRef("IT_DESCONTO","MT120",aCols[n][nPVlDesc])
			EndIf
		Else
			Eval(bRefresh)
		EndIf

	EndIf

EndIf

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120Recal ³ Autor ³ Eduardo Riera         ³ Data ³18.01.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao de recalculo dos itens do contrato - RIPASA          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Recal()

Local nSavN := N
Local nX    := 0

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.)// .T.=Permite preencher aCols /  .F.=Executando via VldHead()

If lGatilha
	For nX := 1 To Len(aCols)
		N := nX
		A120PrcVis()
	Next nX
EndIf

N := nSavN

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³CalcDesc  ³ Autor ³ Cristina Ogura        ³ Data ³ 24/05/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Calcula descontos em cascatas de um valor.                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³CalcDesc(Exp1,Exp2,Exp3,Exp4)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³nValor - valor a ser calculado o desconto                   ³±±
±±³          ³nDesc1 - desconto 1                                         ³±±
±±³          ³nDesc2 - desconto 2                                         ³±±
±±³          ³nDesc3 - desconto 3                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ valor do desconto                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function CalcDesc( nValor, nDesc1, nDesc2, nDesc3)

Local nTotDesc:= 0

nTotDesc := NoROUND(nValor*nDesc1/100,2)
nTotDesc := nTotDesc + ROUND((nValor-nTotDesc)*nDesc2/100,2)
nTotDesc := nTotDesc + ROUND((nValor-nTotDesc)*nDesc3/100,2)

Return (nTotDesc)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120PrCom³ Autor ³ Nereu Humberto Junior ³ Data ³03.03.2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Compatibilizacao dos parametros MV_ALTPREC e MV_ALTPRCC   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120 e MATA103                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A120PrCom()

Local aArea     := GetArea()
Local cContOrig := "0"

dbSelectArea("SX6")
If !GetMV("MV_ALTPRCC",.T.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ O Parametro MV_ALTPREC com conteudo logico ja existia no fa  ³
	//³ turamento e foi criado indevidamente no compras necessitando ³
	//³ assim deste ajuste para retornar seu conteudo original       ³
	//³ "LOGICO" e o parametro MV_ALTPRCC foi o novo nome escolhido  ³
	//³ para o parametro no modulo de compras.                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If GetMV("MV_ALTPREC",.T.) .And. Alltrim(SX6->X6_CONTEUD) $ "0123456"
		cContOrig:=GetMV("MV_ALTPREC")
		PutMv("MV_ALTPREC","T")
	EndIf

	RecLock( "SX6",.T. )
	SX6->X6_FIL     := xFilial( "SX6" )
	SX6->X6_VAR     := "MV_ALTPRCC"
	SX6->X6_TIPO    := "C"
	SX6->X6_DESCRIC := "Permite alterar o preco que veio sugerido do"
	SX6->X6_DESC1   := "pedido de compras, autorizacao de entrega ou"
	SX6->X6_DESC2   := "contrato de parceria."
	SX6->X6_DSCSPA  := "Permite modificar precio que vino sugerido"
	SX6->X6_DSCSPA1 := "de pedido de compras, autorizacion de entre-"
	SX6->X6_DSCSPA2 := "ga o contrato de asociacion."
	SX6->X6_DSCENG  := "Allows editing the price suggested from the"
	SX6->X6_DSCENG1 := "purchase order, delivery authorization or"
	SX6->X6_DSCENG2 := "partnership contract."
	SX6->X6_CONTEUD := cContOrig
	SX6->X6_CONTSPA := cContOrig
	SX6->X6_CONTENG := cContOrig
	MsUnLock()
EndIf

RestArea(aArea)

Return(GetMV("MV_ALTPRCC"))

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120AllMark³ Autor ³ Marcos V. Ferreira   ³ Data ³ 29.06.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Adiciona o Recno() do registro no controle de marcas        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Marca                                              ³±±
±±³          ³ ExpA1 = Array da Marca                                     ³±±
±±³          ³ ExpO1 = Objeto da Marca                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120AllMark(cMarca, aMarca)

Local cAlias       := Alias()
Local cCpoMarca    := If(!(nTipoPed==2), 'C1_OK', 'C3_OK')
Local nOrderSeek   := If(!(nTipoPed==2), 1, 1) //-- C1_FILIAL+C1_NUM+C1_ITEM ou C3_FILIAL+C3_NUM+C3_ITEM
Local nPos         := 0
Local nRecno       := Recno()
Local lMarca	   := .T.	

If lMarkAll 
	lMarkAll := .F.
Else
	lMarkAll := .T.
EndIF
oChk1:Refresh()

dbSelectArea(cAlias)
dbSetOrder(nOrderSeek)
dbGoTop()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se Marca ou Desmarca Todos                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (&(cCpoMarca)==cMarca) .Or. !lMarkAll
	lMarca := .F.
EndIf
         
Do While !Eof()
	Reclock(cAlias, .F.)
	If lMarca
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Marca registro posicionado                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If aScan(aMarca, Recno()) == 0
			aAdd(aMarca, Recno())
			SimpleLock(cAlias)		
		EndIf
		Fieldput(Fieldpos(cCpoMarca), cMarca)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Desmarca registro posicionado                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPos := (aScan(aMarca, RecNo()))
		If nPos > 0
			aDel(aMarca, nPos); aSize(aMarca, Len(aMarca)-1)
		EndIf
		Fieldput(Fieldpos(cCpoMarca), '')
		
		If SimpleLock(cAlias)		
			(cAlias)->(MsRUnlock())
		Endif	
	EndIf	
	MsUnlock()
	dbSkip()
EndDo

dbGoto(nRecno)
oMark:oBrowse:Refresh()

Return Nil

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A120MarF4 ³ Autor ³ Nereu Humberto Jr.   ³ Data ³ 21.12.06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se a SC/AE nao foi selecionada em outra estacao   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Array da Marca                                     ³±±
±±³          ³ ExpO1 = Objeto da Marca                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120MarF4(aArrayF4,oQual)

Local aArea := GetArea()
Local cFlag := " "

If nTipoPed != 2
	dbSelectArea("SC1")
Else
	dbSelectArea("SC3")
EndIf

dbSetOrder(1)

If MsSeek(xFilial()+aArrayF4[oQual:nAt,2]+aArrayF4[oQual:nAt,3])

	cFlag := A120Flag()

	If nTipoPed != 2
		If SoftLock("SC1") .And. Empty(cFlag)
			aArrayF4[oQual:nAt,1] := !aArrayF4[oQual:nAt,1]
			SimpleLock("SC1")
		ElseIf !Empty(cFlag)
			MsgInfo( STR0130 , STR0102 ) //Registro utilizado por outro usuário.
			If aArrayF4[oQual:nAt,1]
				aArrayF4[oQual:nAt,1] := !aArrayF4[oQual:nAt,1]
			Endif
		Endif
	Else		
		If SoftLock("SC3") .And. Empty(cFlag)
			aArrayF4[oQual:nAt,1] := !aArrayF4[oQual:nAt,1]
			SimpleLock("SC3")
		ElseIf !Empty(cFlag)
			MsgInfo( STR0130 , STR0102 ) //Registro utilizado por outro usuário.
			If aArrayF4[oQual:nAt,1]
				aArrayF4[oQual:nAt,1] := !aArrayF4[oQual:nAt,1]
			Endif
		Endif	
	Endif

	If !aArrayF4[oQual:nAt,1]
		If nTipoPed != 2
			If SimpleLock("SC1")
				SC1->(MsRUnlock())
			Endif
		Else
			If SimpleLock("SC3")
				SC3->(MsRUnlock())
			Endif						
		Endif			
	Endif
Endif

RestArea(aArea)

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a120Grd2Acols³Autor³Patricia Duca         ³ Data ³12.12.06  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Se o recurso Grade MV_GRADE estiver ativo a funcao e chamada³±±
±±³          ³no inicio da funcao A120Grava para compatibilizar o aCols na³±±
±±³          ³existencia de um produto de grade no aCols. Os itens desta  ³±±
±±³          ³grade serao explodidos no aCols repetindo o mesmo numero de ³±±
±±³          ³item C7_ITEM porem com o numero de item de grade diferente  ³±±
±±³          ³C7_ITEMGRD, a funcao fiscal sera reaberta para o recalculo  ³±±
±±³          ³de todos os item da grade do produto, e o rateio das despes ³±±
±±³          ³as entre todos os itens do aCols. Esse procedimento e nece  ³±±
±±³          ³ssario para compatibilizar o aCols para funcao de gravacao. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a120Grd2Acols()

Local aRefImpSC7:= MaFisRelImp('MT100',{"SC7"})
Local aColsOrig := aClone(aCols)  
Local aColsItGrd:= aClone(aColsBkp)
Local cProdRef  := ""    
Local cItem     := ""  
Local cValid    := ""
Local cRefCols  := ""
Local nMaxFor   := Len(aColsOrig)
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRODUTO"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2])=="C7_ITEM"})
Local nPItGrade := aScan(aHeader,{|x| AllTrim(x[2])=="C7_ITEMGRD"})
Local nPPrcCom  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRECO"})
Local nPQtdCom  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QUANT"})
Local nPQtdCom2 := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QTSEGUM"})
Local nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TOTAL"})
Local nPGrade   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_GRADE"})
Local nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C7_VLDESC"})
Local nPQtdSol  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QTDSOL"})
Local nPDtEntr  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_DATPRF"})
Local nPBasIpi  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_BASEIPI"})
Local nPBasIcm  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_BASEICM"})
Local nPValIpi  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_VALIPI"})
Local nPValIcm  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_VALICM"})
Local nPRecno   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_REC_WT"})   

Local nCntFor   := 0     
Local nLinha    := 0     
Local nColuna   := 0     
Local nAcols    := 0     
Local nX        := 0
Local nY        := 0
Local dDataEnt  := Nil
Local lTestaDel := If(Len(aColsOrig[1])==Len(aHeader),.F.,.T.)

If MaGrade() .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade)>0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Varre o acols original para atualizar a variavel aCols                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols := {}

	For nCntFor:=1 To nMaxFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza o Controle de Itens do Pedido de Venda e da Grade              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cItem    := aColsOrig[nCntFor][nPitem] 
		cItemGrd := "000"
		cProdRef := aColsOrig[nCntFor][nPProduto]
		If ( !Empty(cProdRef) )
			oGrade:nPosLinO := nCntFor
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se foi digitado uma referencia                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Len(oGrade:aHeadGrade)>0 .And. oGrade:aHeadGrade[nCntFor][1] == "R" ) .And. aColsOrig[nCntFor, nPGrade]  == "S"
				For nLinha := 1 To Len(oGrade:aColsGrade[nCntFor])
					For nColuna := 2 To Len(oGrade:aHeadGrade[nCntFor])
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica se ha valor a ser gravado                                      ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( oGrade:aColsFieldByName("C7_QUANT",nCntFor,nLinha,nColuna) <> 0) .And. If(lTestaDel,!aColsOrig[nCntFor][Len(aHeader)+1],.T.)
							cItemGrd := Soma1(cItemGrd,Len(aColsOrig[nCntFor][nPItGrade]))
							cProdRef := aColsOrig[nCntFor][nPProduto]
							MatGrdPrRf(@cProdRef)
							cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna)
							aadd(aCols,aClone(aColsOrig[nCntFor]))
							nAcols := Len(aCols)
							aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
							aCols[nAcols][nPItem    ]  := cItem
							n:=nAcols
							If ( nPItGrade <> 0 )

								// verifica se já existe item+itemgrd no acolsBkp
								nExistIt := Ascan(aColsItGrd,{|x| Alltrim(x[nPItem]) == cItem .And. Alltrim(x[nPProduto]) == Alltrim(aCols[nAcols][nPProduto]) })

								If nExistIt > 0
									cItemGrd:=aColsItGrd[nExistIt,nPItGrade]
								Else
									cMax := Nil
									aEval(aColsItGrd, {|z| If(z[nPItem] == cItem, cMax := If(cMax == Nil .Or. z[nPItGrade] > cMax , cMax := z[nPItGrade], Nil),Nil)})
									If cMax <> Nil
										cItemGrd:=Soma1(Alltrim(cMax),Len(aColsOrig[nCntFor][nPItGrade]))
									Endif

									aadd(aColsItGrd,Array(Len(aHeader)+1))
									aColsItGrd[Len(aColsItGrd)][nPProduto]:= PadR(cProdRef,Len(SB1->B1_COD)) 
									aColsItGrd[Len(aColsItGrd)][nPItem]   := cItem
									aColsItGrd[Len(aColsItGrd)][nPItGrade]:= cItemGrd
									aColsItGrd[Len(aColsItGrd)][Len(aHeader)+1]:= .F.

								Endif

								aCols[nAcols][nPItGrade ]  := cItemGrd

							EndIf
							If ( nPQtdCom <> 0 )
								aCols[nAcols][nPQtdCom  ]  := oGrade:aColsFieldByName("C7_QUANT",nCntFor,nLinha,nColuna)
							EndIf
							If ( nPQtdSol <> 0 )
								a120quant(aCols[nAcols][nPQtdCom],2)
							EndIf
							If ( nPQtdCom2 <> 0 )
								aCols[nAcols][nPQtdCom2 ]  := oGrade:aColsFieldByName("C7_QTSEGUM",nCntFor,nLinha,nColuna)
							EndIf
							If ( nPDtEntr <> 0 )
								dDataEnt:= oGrade:aColsFieldByName("C7_DATPRF",nCntFor,nLinha,nColuna)
								aCols[nAcols][nPDtEntr ]  := If (!empty(dDataEnt),dDataEnt,dDataBase)
							EndIf
							If ( nPValor <> 0 )
								aCols[nAcols][nPValor   ]  := a410Arred(oGrade:aColsFieldByName("C7_QUANT",nCntFor,nLinha,nColuna)*aColsOrig[nCntFor][nPPrcCom],"C7_TOTAL")
							EndIf
							If  ( nPGrade <>  0 )
								aCols[nAcols][nPGrade   ]  := "S"
							Endif
							If  ( nPValDesc !=  0 )
								aCols[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdCom])*aCols[nAcols][nPQtdCom	]
							EndIf
							If !INCLUI
								nExistIt := Ascan(aColsBkp,{|x| Alltrim(x[nPItem]) == cItem .And. Alltrim(x[nPProduto]) == Alltrim(aCols[nAcols][nPProduto])})
								If nExistIt > 0
									aCols[nAcols][nPRecno]:= aColsBkp[nExistIt,nPRecno]
								Else
									aCols[nAcols][nPRecno]:= 0
                                EndIf
							Endif

						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o item ja foi gravado para deleta-lo                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( !Empty(oGrade:aColsFieldByName("C7_ITEM",nCntFor,nLinha,nColuna)) )
								cProdRef := aColsOrig[nCntFor][nPProduto]
								cItemGrd := Soma1(cItemGrd,Len(aColsOrig[nCntFor][nPItGrade]))
								MatGrdPrRf(@cProdRef)
								cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna)
								aadd(aCols,aClone(aColsOrig[nCntFor]))
								nAcols := Len(aCols)
								n:=nAcols
								aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
								aCols[nAcols][nPItem    ]  := cItem
								If ( nPItGrade <> 0 )
									aCols[nAcols][nPItGrade ]  := cItemGrd
								EndIf

								If ( nPQtdCom <> 0 )
									aCols[nAcols][nPQtdCom  ]  := oGrade:aColsFieldByName("C7_QUANT",nCntFor,nLinha,nColuna)
								EndIf
								If ( nPDtEntr <> 0 )
									dDataEnt:= oGrade:aColsFieldByName("C7_DATPRF",nCntFor,nLinha,nColuna)
									aCols[nAcols][nPDtEntr ]  := If (!empty(ddataent),ddataent,ddatabase)
								EndIf
								If ( nPValor <> 0 )
									aCols[nAcols][nPValor   ]  := a410Arred(oGrade:aColsFieldByName("C7_QUANT",nCntFor,nLinha,nColuna)*aColsOrig[nCntFor][nPPrcCom],"C7_TOTAL")
								EndIf

								If ( nPQtdSol <> 0 )
									a120quant(aCols[nAcols][nPQtdCom],2)
								EndIf

								If  ( nPGrade <>  0 )
									aCols[nAcols][nPGrade   ]  := "S"
								EndIf

								If  ( nPValDesc !=  0 )
									aCols[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdCom])*aCols[nAcols][nPQtdCom]
								EndIf
								If !INCLUI
									nExistIt := Ascan(aColsBkp,{|x| Alltrim(x[nPItem]) == cItem .And. Alltrim(x[nPProduto]) == Alltrim(aCols[nAcols][nPProduto])})
									If nExistIt > 0
										aCols[nAcols][nPRecno]:= aColsBkp[nExistIt,nPRecno]
									Else
										aCols[nAcols][nPRecno]:= 0
	                                EndIf
								Endif
								aCols[nAcols][Len(aHeader)+1] := .T.

							EndIf
						EndIf
					Next nColuna
				Next nLinha
			Else

				Aadd(aCols,aClone(aColsOrig[nCntFor]))
				nAcols := Len(aCols)
				aCols[nAcols][nPItem    ]  := cItem

			EndIf

		EndIf

	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ordena o aCols                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols := aSort(aCols,,,{|x,y| x[nPItem]+x[nPItGrade] < y[nPItem]+y[nPItGrade] })

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicia a Carga do item nas funcoes MATXFIS  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MaFisEnd()
	MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpSC7,,.T.,,,,,,,)

	For nX := 1 to Len(aCols)

		nScan := aScan(aColsOrig,{|x| AllTrim(x[nPItem]) == AllTrim(aCols[nX][nPItem]) })

		MaFisIniLoad(nX,,.T.)

		For nY	:= 1 To Len(aHeader)
			cValid	 := AllTrim(UPPER(aHeader[nY][6]))
			cRefCols := MaFisGetRf(cValid)[1]
			If !Empty(cRefCols) .AND. MaFisFound("IT",nX)

				If aCols[nX][nPGrade] == "S"
					MaFisLoad(cRefCols,aCols[nX][nY],nX)
				Else
					MaFisLoad(cRefCols,aColsOrig[nScan][nY],nX)
				EndIf

			EndIf
		Next nY

		If aCols[nX][nPGrade] == "S"

			MaFisRecal("IT_",nX)
			For nY	:= 1 To Len(aHeader)
				cValid	 := AllTrim(UPPER(aHeader[nY][6]))
				cRefCols := MaFisGetRf(cValid)[1]
				If !Empty(cRefCols) .AND. MaFisFound("IT",nX)
					aCols[nX][nY]:= MaFisRet(nX,cRefCols)
				EndIf
			Next nY

		EndIf

		MaFisEndLoad(nX,1)

	Next nX

	MaFisAlt("NF_FRETE",avalores[FRETE])
	MaFisAlt("NF_DESPESA",avalores[VALDESP])
	MaFisAlt("NF_SEGURO",avalores[SEGURO])
	MaFisAlt("NF_DESCONTO",avalores[VALDESC])
	
	If cPaisLoc == "PTG"
	 	MaFisAlt("NF_DESNTRB",avalores[NTRIB])
	 	MaFisAlt("NF_TARA",avalores[TARA])
	Endif

	oGrade:aColsGrade  := {}
	oGrade:aHeadGrade  := {}
	aColsOrig          := {}

EndIf

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120QtdGra³ Autor ³ Patricia D. Aguiar    ³ Data ³ 14.12.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua a entrada de dados pelo Grid quando a grade esta     ³±±
±±³          ³ativa chamada pelo X3_VALID dos Campos C7_QUANT C7_QTSEGUM e³±±
±±³          ³C7_DATPRF.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Sempre .T.                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120QtdGra()

Local cCpoName	:= StrTran(ReadVar(),"M->","")
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C7_PRODUTO"})
Local nPQtdCom  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QUANT"})
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_LOCAL"})
Local nPQtdCom2 := aScan(aHeader,{|x| AllTrim(x[2])=="C7_QTSEGUM"})
Local nPDtEntr  := aScan(aHeader,{|x| AllTrim(x[2])=="C7_DATPRF"})
Local nPTotal   := aScan(aHeader,{|x| AllTrim(x[2])=="C7_TOTAL"})
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nColuna 	:= 0
Local nLinha	:= 0
Local lGrade	:= MaGrade()
Local bSavKeyF4   := SetKey(VK_F4 ,Nil)
Local bSavKeyF5   := SetKey(VK_F5 ,Nil)
Local bSavKeyF6   := SetKey(VK_F6 ,Nil)
Local bSavKeyF7   := SetKey(VK_F7 ,Nil)
Local bSavKeyF8   := SetKey(VK_F8 ,Nil)
Local bSavKeyF9   := SetKey(VK_F9 ,Nil)
Local bSavKeyF10  := SetKey(VK_F10,Nil)
Local bSavKeyF11  := SetKey(VK_F11,Nil)

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.) // .T.=Permite preencher aCols / .F.=Executando via VldHead()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a grade esta ativa                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lGrade ).And.!Empty(aCols[n][nPProduto]) .And. lGatilha
 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Arrays auxiliares para armazenar a getdados principal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	oGrade:cProdRef	:= aCols[n][nPProduto]
	oGrade:nPosLinO	:= n

	If oGrade:Show(cCpoName)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza a quantidade do acols original                               ³
		//³ATENCAO: a variavel nQtdInformada foi alimentada dentro do objeto com ³
		//³         ReadVar(), mas o programador pode alimentala quando desejar. ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
		Do Case
		Case "C7_QUANT" $ cCpoName
			oGrade:nQtdInformada:= oGrade:SomaGrade("C7_QUANT",oGrade:nPosLinO,oGrade:nQtdInformada)
			aCols[n][nPQtdCom]	:= oGrade:nQtdInformada
			M->C7_QUANT		    := oGrade:nQtdInformada

			If ( nPQtdCom2 > 0 )
				oGrade:nQtdInformada := 0
				oGrade:nQtdInformada := oGrade:SomaGrade("C7_QTSEGUM",oGrade:nPosLinO,oGrade:nQtdInformada)
				aCols[n][nPQtdCom2]  := oGrade:nQtdInformada
				M->C7_QTSEGUM        := oGrade:nQtdInformada				
			EndIf

			M->C7_DATPRF:=dDataBase	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Posicionado na segunda unidade de medida da quantidade³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Case "C7_QTSEGUM" $ cCpoName
			aCols[n][nPQtdCom2]	:= oGrade:nQtdInformada
			M->C7_QTSEGUM		:= oGrade:nQtdInformada
			oGrade:nQtdInformada:= 0
			oGrade:nQtdInformada:= oGrade:SomaGrade("C7_QUANT",oGrade:nPosLinO,oGrade:nQtdInformada)
			aCols[n][nPQtdCom]	:= oGrade:nQtdInformada
			M->C7_QUANT		    := oGrade:nQtdInformada
			aCols[n][nPTotal]  := 0
			M->C7_TOTAL        := 0
			A100SEGUM()
			MaFisRef("IT_QUANT","MT120",M->C7_QUANT)
			MaFisRef("IT_VALMERC","MT120",M->C7_TOTAL)
			M->C7_DATPRF := dDataBase
		End Case
	Endif
EndIf
SetKey(VK_F4 ,bSavKeyF4)
SetKey(VK_F5 ,bSavKeyF5)
SetKey(VK_F6 ,bSavKeyF6)
SetKey(VK_F7 ,bSavKeyF7)
SetKey(VK_F8 ,bSavKeyF8)
SetKey(VK_F9 ,bSavKeyF9)
SetKey(VK_F10,bSavKeyF10)
SetKey(VK_F11,bSavKeyF11)
Return( ALTERA.Or.INCLUI )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120GValid ³Autor  ³Patricia D. Aguiar    ³Data  ³14/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao dos elementos da grade de Produtos (Grid)        ³±±
±±³          ³ Realiza a validacao da Quatidade e Data de Entrega)        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: .T. Edicao Valida / .F. Edicao nao valida           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120GValid()

Local nx         := 0
Local nPosLocal  := aScan(ograde:aHeadAux,{|x| AllTrim(x[2])=="C7_LOCAL"})
Local nPNumSC    := aScan(ograde:aHeadAux,{|x| AllTrim(x[2])=="C7_NUMSC"})
Local cNumSC     := ograde:aColsAux[ograde:nPosLinO,nPNumSC]
Local nPIteSC    := aScan(ograde:aHeadAux,{|x| AllTrim(x[2])=="C7_ITEMSC"})
Local cItemSC    := ograde:aColsAux[ograde:nPosLinO,nPIteSC]
Local nPosData   := aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C7_DATPRF"})
Local nPosQuant	 := aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C7_QUANT"})
Local nPosQTD2	 := aScan(ograde:acposCtrlGrd,{|x| AllTrim(x[1])=="C7_QTSEGUM"})
Local nLinha     := oGrade:oGetdados:oBrowse:Nat
Local nColuna    := oGrade:oGetdados:oBrowse:nColpos
Local nQtd       := oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposQuant]
Local nQtd2      := oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposQTD2]
Local cProduto   := PAD(ograde:GetNameProd(ograde:cprodref,ograde:ogetdados:obrowse:nat,ograde:ogetdados:obrowse:ncolpos),Len(SC7->C7_PRODUTO))
Local lIncPrdCtr := SuperGetMv("MV_PRODCTR")
Local lRet       := .T.

lGatilha := If(ValType(lGatilha) == "L",lGatilha,.T.)// .T.=Permite preencher aCols /  .F.=Executando via VldHead()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Fornecedor x Produto possui bloqueio da Qualidade.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lRet := QieSitFornec(cA120Forn,cA120Loj,cProduto,.T.)

dbSelectArea("SB1")
dbSetOrder(1)
If MsSeek(xFilial("SB1")+cProduto)

	If (nTipoPed == 2 .And. SB1->B1_CONTRAT <> "S") .Or. (nTipoPed != 2 .And. SB1->B1_CONTRAT == "S" .And. !lIncPrdCtr)
		If SB1->B1_CONTRAT <> "A"
			If nTipoPed == 2
				Help(" ",1,"A125CONTR")
			Else
				Help(" ",1,"A120CONTR")
			EndIf
			lRet := .F.
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o Produto tem Fornecedor exclusivo(Canal).       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. SB1->B1_MONO=="S" .And. SB1->B1_PROC != ca120forn
		Help(" ",1,"A12020")
		lRet := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o Registro esta Bloqueado.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. !RegistroOk("SB1")
		lRet := .F.
	EndIf

Else
	Help("  ",1,"REGNOIS")
	lRet := .F.
Endif

If lRet .And. lGatilha

	If oGrade:cCpo=="C7_DATPRF"

		If nQtd==0
			lRet:=.F.
			Help(' ',1,'A120DATPRF')
		Endif

	Elseif oGrade:cCpo $"C7_QUANT/C7_QTSEGUM"

		lRet:= A120ChkAlmox(cProduto,ograde:aColsAux[oGrade:nPosLinO,nPosLocal])

		If lRet
			If !Empty(cNumSc)
				If nTipoped != 2
					Dbselectarea("SC1")
					Dbsetorder(2)
					If MsSeek(Xfilial("SC1")+cProduto+cNumSc+cItemSc)

						If &(ReadVar()) > (SC1->C1_QUANT - SC1->C1_QUJE)
							Help(' ',1,"A120NOSLD")
							lRet:=.F.
						Endif
					Else
						Help(' ',1,"A120NOSOL")
						lRet:=.F.
					Endif
				Else
					Dbselectarea("SC3")
					Dbsetorder(3)
					If MsSeek(Xfilial("SC3")+cProduto+cNumSc+cItemSc)

						If &(ReadVar()) > (SC3->C3_QUANT - SC3->C3_QUJE)
							Help(' ',1,"A120NOSLD")
							lRet:=.F.
						Endif
					Else
						Help(' ',1,"A120NOSOL")
						lRet:=.F.

					Endif

				Endif
			Endif
		Endif
		// atualiza data de entrega
		If lRet
			If &(ReadVar())==0
				oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposData]:=ctod(" ")
			Else
				If Empty(oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposData])
					oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposData]:=ddatabase
				Endif
			Endif
		Endif
		If oGrade:cCpo $"C7_QTSEGUM"

			oGrade:aColsGrade[oGrade:nPosLinO][nlinha][ncoluna][nposQuant]:= ConvUM(cProduto,0,&(ReadVar()),1)

		Endif

	Endif
Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A120Cod   ³ Autor ³ Patricia D. Aguiar    ³ Data ³ 14.12.07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida se o Produto foi Alterado                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Cod()

Local cCodProd  := &(ReadVar())
Local lGrade    := MaGrade()
Local lRet      := .T.

Public lAltprod :=.T.

If lGrade
	If Alltrim(cCodProd) == Alltrim(GdFieldGet("C7_PRODUTO")) // Nao alterei o produto
		lAltProd:=.F.
	Endif
Else
	lRet := ExistCpo("SB1")
EndIf	

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A120FldOk ³ Autor ³ Alexandre Inacio Lemes³ Data ³25/07/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Em itens de grade de produto as Bases e Valores dos Impostos³±±
±±³          ³nao devem ser editados pois antes da gravacao do PC a Funcao³±±
±±³          ³Ma120GraGr() ao compatibilizar o aCols para gravacao realiza³±±
±±³          ³o recalculo de todos impostos proporcionalmente aos itens do³±±
±±³          ³Grid conforme as quantidades informadas no mesmo.           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MsGetDados do MATA120                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120FldOk()
Local aHlpFisP  := {"A base e valor dos impostos em itens de ","grade nao podem ser editados pois serão ","recalculados pela aliquota proporcionalm","ente a quantidade de cada item da grade."} 
Local aHlpFisE  := {"The base and value of the taxes in bars ","Items,they cannot be published because  ","they will be calculated by the aliquot  ","in proportion the amount of each item of"," the bars."}   
Local aHlpFisS  := {"La base y valor de los impuestos en obst","ruye itens, ellos no pueden publicarse  ","porque ellos serán calculados por el alí","cuota en proporción la cantidad de cada ","itens de las barras."} 
Local cItRefImp := ""
Local cFieldSC7 := ReadVar()
Local cFieldEdit:= SubStr(cFieldSC7,4,Len(cFieldSC7))
Local nPosField := aScan(aHeader,{|x| AllTrim(x[2])== cFieldEdit})
Local nPosGrade := aScan(aHeader,{|x| AllTrim(x[2])== "C7_GRADE"})
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2])== "C7_ITEM"})
Local nPProduto  := aScan(aHeader,{|x| AllTrim(x[2])== "C7_PRODUTO"})
Local lEdita    := .T.
Local cMenVar   := &(ReadVar())
Local aNoAltACC := {"C7_PRODUTO","C7_UM","C7_SEGUM","C7_QTSEGUM"}
Local aNoAltEdi  := {"cCondicao","C7_PRODUTO","C7_QUANT","C7_UM","C7_SEGUM","C7_QTSEGUM","C7_PRECO","C7_TOTAL"}

If Altera
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o usuario tem permissao de alteracao. ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If cFieldEdit $ "C7_PRODUTO"
		If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
			If nTipoPed == 1 //Pedido de Compra
				lEdita := MaAvalPerm(1,{cCampo,"MTA121",5}) .And. MaAvalPerm(1,{aCols[n][nPProduto],"MTA121",3})
			ElseIf nTipoPed == 2 //Autorizacao de Entrega
				lEdita := MaAvalPerm(1,{cCampo,"MTA122",5}) .And. MaAvalPerm(1,{aCols[n][nPProduto],"MTA122",3})
			EndIf
			If !lEdita
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
	Else
		If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
			If nTipoPed == 1 //Pedido de Compra
				lEdita := MaAvalPerm(1,{aCols[n][nPProduto],"MTA121",4})
			ElseIf nTipoPed == 2 //Autorizacao de Entrega
				lEdita := MaAvalPerm(1,{aCols[n][nPProduto],"MTA122",4})
			EndIf
			If !lEdita
				Help(,,1,'SEMPERM')
			EndIf
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se o campo editado pela MsGetdados for um dos campos abaixo a funcao nao  ³
	//³permitira a edicao do mesmo, porem como o X3_VALID dos campos referente a ³
	//³Impostos e executada antes da funcao A120FldOk e realiza a alimentacao da ³
	//³MatxFis pela MaFisRef e necessario recarregar para a MatxFis o valor      ³
	//³anterior do campo antes da edicao do mesmo contida na variavel cCampo.    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lEdita .And. cFieldEdit $ "C7_BASEICM/C7_BASEIPI/C7_BASEIR/C7_BASESOL/C7_VALICM/C7_VALIPI/C7_VALIR/C7_VALSOL/C7_ICMSRET/C7_ICMCOMP" ;
		.And. aCols[N][nPosGrade] == "S"
		
		PutHelp("PA120FISCAL" , aHlpFisP, aHlpFisE, aHlpFisS,.F.)
	
		cItRefImp :=MaFisGetRF(AllTrim(Upper(aHeader[nPosField][6])))[1]
		MaFisRef(cItRefImp,"MT120",cCampo)
		
		Help(" ",1,"A120FISCAL") 
		lEdita := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o item esta no portal MarketPlace e se o campo alterado e restrito ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lEdita .And. SC7->(FieldPos("C7_ACCNUM"))>0 .And. aScan(aNoAltEdi,{|x| x == Substr(ReadVar(),4)}) > 0 .And.;
			(!Empty(Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],"C7_ACCNUM")) .Or.;
			(SC7->(FieldPos("C7_ACCPROC")) > 0 .And. Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],"C7_ACCPROC") == '1')) .And.;
			&(cFieldSC7) # Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],Substr(ReadVar(),4))
		Aviso(STR0203,STR0204,{STR0111}) // "Portal MarketPlace" | "Este campo não poderá ser alterado pois este item do pedido de compra já está no Portal MarketPlace" | "Ok"
		lEdita := .F.
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o item foi gerado por um Edital. Caso seja, não sera permitido alterar alguns campos chave ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ     
	If lEdita .And. SC7->(FieldPos("C7_CODED")) > 0 .And. aScan(aNoAltEdi,{|x| x == Substr(ReadVar(),4)}) > 0 .And.;
			!Empty(Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],"C7_CODED")) .And.;
			&(cFieldSC7) # Posicione("SC7",1,xFilial("SC7")+cA120Num+aCols[n,nPosItem],Substr(ReadVar(),4))
	  	Aviso(STR0175,STR0185,{"OK"}) //-- Este campo não pode ser alterado pois este item está vinculado a um Edital.
		lEdita := .F.                                                                                       
	EndIf
EndIf

Return( lEdita )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSIX    ³ Autor ³ Marcelo Custodio   	³ Data ³ 20/02/08 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajusta indices sem o campo C7_FILIAL                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ AjustaSIX( )                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum	  										      	      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA120                                                   	  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSIX()
// Salva ambiente
Local aArea 	:= GetArea()
Local aInds    := {"SC76","SC79","SC7D","SC7E"}
Local nx       := 0

DbSelectArea("SIX")
DbSetOrder(1)

For nx:=1 to len(aInds)
	//Localiza indice, e inclui 'XXX+' para os indices que nao 
	//inicializam com C7_FILIAL
	If MsSeek(aInds[nx]) .And. !Empty(SIX->F3) .And. !( "XXX" $ UPPER(SIX->F3) )
		RecLock("SIX",.F.)
		SIX->F3	:= "XXX+"+SIX->F3
		SIX->( MsUnlock() )
	EndIf
Next

//Cria consulta para o indice: Fornecedor+Loja+Produto
If MsSeek("SC7H") .And. Empty(SIX->F3) .And. !( "XXX" $ UPPER(SIX->F3) )
	RecLock("SIX",.F.)
	SIX->F3	:= "XXX+SA2+XXX+SB1"
	SIX->( MsUnlock() )
EndIf

//Cria consulta para o indice: Fornecedor+Produto
If MsSeek("SC7I") .And. Empty(SIX->F3) .And. !( "XXX" $ UPPER(SIX->F3) )
	RecLock("SIX",.F.)
	SIX->F3	:= "XXX+SA2+SB1"
	SIX->( MsUnlock() )
EndIf

//Cria consulta para o indice: Produto+Numero+Item
If MsSeek("SC7J") .And. Empty(SIX->F3) .And. !( "XXX" $ UPPER(SIX->F3) )
	RecLock("SIX",.F.)
	SIX->F3	:= "XXX+SB1"
	SIX->( MsUnlock() )
EndIf

//Restaura ambiente
RestArea(aArea)

Return     

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProvEntPC ³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza os itens do Pedido de Compra e Valida Provincia    ³±±
±±³          ³ informada no cabecalho.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProvEntPC()
Local aRefImpos	:= {}
Local lRet := .T.
Local nX   := 0
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PROVENT"})
Local nPosTes  := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_TES"})
Local cCpo     := ""
Local cProv    := ""
Local cTes     := ""
Local nProv    := 0
Local lXFIS		:= MaFisFound("NF")

If !lXFIS
	aRefImpos	:= MaFisRelImp('MT100',{"SC7"})
	MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
EndIf

lRet := Vazio() .Or. cA120ProvEnt == "99" .Or. ExistCpo("SX5","12"+cA120ProvEnt)
If lRet .And. nPosProv > 0
	cCpo  := ReadVar()
	cProv := &cCpo
	For nX := 1 to Len(aCols)
		cTes := aCols[n,nPosTes]
		If VerProEnIt(cProv,cTes,.F.,.F.)
			aCols[nX,nPosProv]:= cProv
			If lXFIS
				MaFisAlt("IT_PROVENT",cProv,nX)
			Else
				MaColsToFis(aHeader,aCols,nX)
				lXFIS := .T.
			Endif
		Else
			nProv++
		Endif
	Next
	Eval(bGDRefresh)
	If nProv > 0
		MsgAlert(STR0140,STR0141)//("Alguns itens não tiveram a província alterada pois possuem impostos gravados em um mesmo campo.","Atenção")
	Endif
Endif
Return lRet    

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a120ProEnt³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza os itens do Pedido de Compra e Valida Provincia    ³±±
±±³          ³ informada no cabecalho.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a120ProEnt()
Local aRefImpos	:= {}
Local cProvAnt	:= ""
Local nPosProv	:= Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PROVENT"})
Local nPosTes	:= Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_TES"})
Local nX		:= 0
Local nProv		:= 0
Local lXFIS		:= MaFisFound("NF")

If !lXFIS
	aRefImpos	:= MaFisRelImp('MT100',{"SC7"})
	MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
EndIf

If cPaisLoc == "ARG"
	SA2->(dbSetOrder(1))
	If SA2->(MsSeek(xFilial("SA2")+cA120Forn))
		If lProvEnt
			cProvAnt	 := cA120ProvEnt
			cA120ProvEnt := SA2->A2_EST // Provincia de Entrega do Fornecedor
		Endif
		If nPosProv > 0
			If cProvAnt <> cA120ProvEnt
				For nX := 1 to Len(aCols)
					cTes := aCols[n,nPosTes]
					If VerProEnIt(cA120ProvEnt,cTes,.F.,.F.)
						aCols[nX,nPosProv]:= cA120ProvEnt
						If lXFIS
							MaFisAlt("IT_PROVENT",cA120ProvEnt,nX)
						Else
							MaColsToFis(aHeader,aCols,nX)
							lXFIS := .T.
						Endif
					Else
						nProv++
					Endif
				Next
				Eval(bGDRefresh)
				If nProv > 0
					MsgAlert(STR0140,STR0141)//("Alguns itens não tiveram a província alterada pois possuem impostos gravados em um mesmo campo.","Atenção")
				Endif
			Endif
		Endif
	Endif
Endif
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProEntItPC³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualiza os itens do Pedido de Compra e Valida Provincia    ³±±
±±³          ³ informada no cabecalho.                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProEntItPC()
Local aRefImpos	:= {}
Local lRet := .T.
Local nX   := 0
Local nPosTes := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_TES"})
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PROVENT"})
Local cCpo     := ""
Local cProv    := ""
Local lXFIS		:= MaFisFound("NF")

If !lXFIS
	aRefImpos	:= MaFisRelImp('MT100',{"SC7"})
	MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
EndIf

If nPosTes > 0
	cCpo  := ReadVar()
	cProv := &cCpo
	lRet  := ValProvEnt(cProv,aCols[n,nPosTes])
	If lRet .And. nPosProv > 0
		aCols[n,nPosProv]:= cProv
		If lXFIS
			MaFisAlt("IT_PROVENT",cProv,n)
		Else
			MaColsToFis(aHeader,aCols,n)
			lXFIS := .T.
		Endif
	Endif
	Eval(bGDRefresh)
Endif
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ProvTesPC ³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida o TES no pedido de compras							  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function ProvTesPC()
Local lRet		:= .T.
Local nPosProv := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PROVENT"})
Local cCpo		:= ""
Local cProv		:= ""

cCpo  := ReadVar()
cTes := &cCpo
If nPosProv > 0
	cProv := aCols[n,nPosProv]
	lRet := VerProEnIt(cProv,cTes,.T.,.F.)
Endif
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³EmisProPC ³ Autor ³                       ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida a Data de Emissao no Pedido de Compras				  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ lRet                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function EmisProPC()
Local aRefImpos	:= {}
Local lXFIS		:= MaFisFound("NF")

Private dDEmissao := cTod("//")

If !lXFIS
	aRefImpos	:= MaFisRelImp('MT100',{"SC7"})
	MaFisIni(ca120Forn,ca120Loj,"F","N",Nil,aRefImpos,,.T.)
EndIf
dDemissao := dA120Emis
MaColsToFis(aHeader,aCols,,"MT100",.T.)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFuncao    ³AjustaSX1 ºAutor³Aline Sebrian         º Data ³ 02/09/2008  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaSX1()

Local aHelpPor1 :={}
Local aHelpEng1 :={}
Local aHelpSpa1 :={}

aAdd( aHelpPor1, "Não é possível alterar este Pedido de  ")
aAdd( aHelpPor1, "Compras, pois o mesmo já foi atendido. ") 

aAdd( aHelpEng1, "Order cannot be changed, because it was") 
aAdd( aHelpEng1, "served.  								 ")

aAdd( aHelpSpa1, "El Pedido no puede ser modificado,     ")
aAdd( aHelpSpa1, "pues el Pedido o fue atendido.		 ")  
                                                 
PutHelp("PA120ALTPC",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)	

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Código do usuário que incluiu ou código") 
aAdd( aHelpPor1, "do Último usuário que alterou o pedido ")
aAdd( aHelpPor1, "de compras.							 ") 

aAdd( aHelpEng1, "Code of the user  that included or code")
aAdd( aHelpEng1, "the last user who changed the Purchase ")
aAdd( aHelpEng1, "Order.								 ")

aAdd( aHelpSpa1, "Código del usuario que incluía o el    ") 
aAdd( aHelpSpa1, "código del Último usuario que modificó ")
aAdd( aHelpSpa1, "la Pedido del Compras." )

PutHelp("PAC7_USER",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)	    

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Fornecedor informado divergente do item") 
aAdd( aHelpPor1, "de Contrato de Parceria selecionado.   ") 

aAdd( aHelpEng1, "Supplier divergent informed of the item") 
aAdd( aHelpEng1, "selected in the Partnership Agreement. ") 

aAdd( aHelpSpa1, "Proveedor informado divergente del item") 
aAdd( aHelpSpa1, "de Contrato de Parceria selecionado.   ") 

PutHelp("PA120AESELF",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Verifique o conteúdo do parâmetro	     ") 
aAdd( aHelpPor1, "MV_CTRSELF.							 ") 

aAdd( aHelpEng1, "Check the contents of the parameter    ") 
aAdd( aHelpEng1, "MV_CTRSELF.							 ") 

aAdd( aHelpSpa1, "Verifique el contenido del parametro   ") 
aAdd( aHelpSpa1, "MV_CTRSELF.							 ") 

PutHelp("SA120AESELF",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={}            
aAdd( AHelpPor1, "Pedido não pode ser alterado devido") 
aAdd( AHelpPor1, "possuir Amarração com Ped.Vendas")
aAdd( AHelpPor1, "gerado pelo processo de Distribuição")
aAdd( AHelpPor1, "de Central de Compras !")

aAdd( AHelpEng1, "Order cannot be changed because it") 
aAdd( AHelpEng1, "has Binding with Sales Order")
aAdd( AHelpEng1, "generated by the process of")
aAdd( AHelpEng1, "Purchase Distribution Center!")

aAdd( AHelpSpa1, "¡El Pedido no se puede modificar debido") 
aAdd( AHelpSpa1, "a que posee Vinculacion con Ped.Ventas")
aAdd( AHelpSpa1, "generado por el proceso de Distribucion")
aAdd( AHelpSpa1, " de Central de Compras !")

PutHelp("PA120PCDT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  
                   
//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Verifique o Pedido de Vendas com o qual") 
aAdd( aHelpPor1, "o Pedido de Compras está vinculado !") 

aAdd( aHelpEng1, "Check Sales Order with which Purchase") 
aAdd( aHelpEng1, "Order is associated!")                         

aAdd( aHelpSpa1, "¡Verifique el Pedido de Ventas con el") 
aAdd( aHelpSpa1, "que el Pedido de Compras esta ")
aAdd( aHelpSpa1, "vinculado!")

PutHelp("SA120PCDT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 

aAdd( aHelpPor1, "A  condição  de  pagamento  escolhida  ") 
aAdd( aHelpPor1, "é inválida para a opção de Pedido de 	 ") 
aAdd( aHelpPor1, "Compra. Não  é possível definir os 	 ")
aAdd( aHelpPor1, "vencimentos das duplicatas.			 ")  

aAdd( aHelpSpa1, "La condición de pago elegida no    	 ")
aAdd( aHelpSpa1, "es váli-da la opción de Pedido del 	 ")
aAdd( aHelpSpa1, "Compras. Es imposible definir    	     ") 
aAdd( aHelpSpa1, "los  vencimientos de los títulos. 	 ")

aAdd( aHelpEng1, "The payment condition selected is      ")
aAdd( aHelpEng1, "invalid for the option of Purchase 	 ")
aAdd( aHelpEng1, "Order. It is not possible to define    ") 
aAdd( aHelpEng1, "the maturity dates of bills.			 ") 

PutHelp("PA120VCOND",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 

aAdd( aHelpPor1, "Selecione outra condição de pagamento. ")  
aAdd( aHelpSpa1, "Seleccione otra condición de pago.	 ")
aAdd( aHelpEng1, "Select another payment condition.		 ")  

PutHelp("SA120VCOND",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Pedido não pode ser excluído ou alterado") 
aAdd( aHelpPor1, "pois foi Aglutinado pelo Processo de ")
aAdd( aHelpPor1, "Central de Compras. ")

aAdd( aHelpEng1, "Pedido não pode ser excluído ou alterado") 
aAdd( aHelpEng1, "pois foi Aglutinado pelo Processo de ")
aAdd( aHelpEng1, "Central de Compras. ")

aAdd( aHelpSpa1, "Pedido não pode ser excluído ou alterado") 
aAdd( aHelpSpa1, "pois foi Aglutinado pelo Processo de ")
aAdd( aHelpSpa1, "Central de Compras. ")

PutHelp("PA120PCEN",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  
                   
//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Nesta situação o pedido somente poderá") 
aAdd( aHelpPor1, "ser excluído.  					    ") 

aAdd( aHelpEng1, "Nesta situação o pedido somente poderá") 
aAdd( aHelpEng1, "ser excluído.  					    ") 

aAdd( aHelpSpa1, "Nesta situação o pedido somente poderá") 
aAdd( aHelpSpa1, "ser excluído.  					    ")  

PutHelp("SA120PCEN",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)


//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Pedido não pode ser copiado pois foi") 
aAdd( aHelpPor1, "gerado por Aglutinação pelo ")
aAdd( aHelpPor1, "Processo de Central de Compras. ")

aAdd( aHelpEng1, "Pedido não pode ser copiado pois foi") 
aAdd( aHelpEng1, "gerado por Aglutinação pelo ")
aAdd( aHelpEng1, "Processo de Central de Compras. ")

aAdd( aHelpSpa1, "Pedido não pode ser copiado pois foi") 
aAdd( aHelpSpa1, "gerado por Aglutinação pelo ")
aAdd( aHelpSpa1, "Processo de Central de Compras. ")

PutHelp("PA120NPCEN",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  
                   
//
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Selecione um pedido válido ")
aAdd( aHelpEng1, "Selecione um pedido válido ")
aAdd( aHelpSpa1, "Selecione um pedido válido ")

PutHelp("SA120NPCEN",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "O adiantamento não pode ser ")
aAdd( aHelpPor1, "alterado ")
aAdd( aHelpEng1, "O adiantamento não pode ser ")
aAdd( aHelpEng1, "alterado ")
aAdd( aHelpSpa1, "O adiantamento não pode ser ")
aAdd( aHelpSpa1, "alterado ")
PutHelp("PA120ADTNOALT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Não foi informado relacionamentos")
aAdd( aHelpPor1, "com PA´s para este pedido ")
aAdd( aHelpEng1, "Não foi informado relacionamentos")
aAdd( aHelpEng1, "com PA´s para este pedido ")
aAdd( aHelpSpa1, "Não foi informado relacionamentos")
aAdd( aHelpSpa1, "com PA´s para este pedido ")
PutHelp("PA120ADTVAZIO",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Os relacionamentos de PA´s para ")
aAdd( aHelpPor1, "este pedido foram cancelados")
aAdd( aHelpEng1, "Os relacionamentos de PA´s para ")
aAdd( aHelpEng1, "este pedido foram cancelados")
aAdd( aHelpSpa1, "Os relacionamentos de PA´s para ")
aAdd( aHelpSpa1, "este pedido foram cancelados")
PutHelp("PA120ADTCANCEL",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Pedido possui compensação por PA")
aAdd( aHelpPor1, ", não pode ser alterado ou excluido")
aAdd( aHelpEng1, "Pedido possui compensação por PA")
aAdd( aHelpEng1, ", não pode ser alterado ou excluido")
aAdd( aHelpSpa1, "Pedido possui compensação por PA")
aAdd( aHelpSpa1, ", não pode ser alterado ou excluido")
PutHelp("PA120ADTEMUSO",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Saldo de adiantamento Insuficiente")
aAdd( aHelpEng1, "Saldo de adiantamento Insuficiente")
aAdd( aHelpSpa1, "Saldo de adiantamento Insuficiente")
PutHelp("PA120NOSDADT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Adiantamento superior ao total")
aAdd( aHelpPor1, " liberado")
aAdd( aHelpEng1, "Adiantamento superior ao total")
aAdd( aHelpEng1, " liberado")
aAdd( aHelpSpa1, "Adiantamento superior ao total")
aAdd( aHelpSpa1, " liberado")

PutHelp("PA120TOTLIB",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)   

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Não existem Solicitações de Compra")
aAdd( aHelpPor1, " para esse procedimento.")
aAdd( aHelpEng1, "No Purchase Requests for")
aAdd( aHelpEng1, " this procedure.")
aAdd( aHelpSpa1, "No hay Solicitaciones de Compra")
aAdd( aHelpSpa1, " para este procedimiento.")

PutHelp("PA120PID",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Certifique-se que existam Solicitações")
aAdd( aHelpPor1, " que possam ser associadas a Pedidos.")
aAdd( aHelpSpa1, "Asegúrese de que hay Solicitaciones ")
aAdd( aHelpSpa1, " que se pueden asociar con los pedidos.")
aAdd( aHelpEng1, "Make sure that there are requests that ")
aAdd( aHelpEng1, " can be associated with Orders.")

PutHelp("SA120PID",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

//A120OPEND
aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "A Ordem de Produção indicada neste")
aAdd( aHelpPor1, " item do pedido de compra já foi ")
aAdd( aHelpPor1, "encerrada.        ")
aAdd( aHelpEng1, "The Production Order indicated in")
aAdd( aHelpEng1, "this item of purchase order has ")
aAdd( aHelpEng1, "been closed.")
aAdd( aHelpSpa1, "Se finalizo la Orden de produccion")
aAdd( aHelpSpa1, "indicada en este item del pedido ")
aAdd( aHelpSpa1, "de compra.")


PutHelp("PA120OPEND",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)  

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 

aAdd( aHelpPor1, "Caso o custo não deva ser apropriado  ")
aAdd( aHelpPor1, "para a Ordem de Produção, retire o    ")
aAdd( aHelpPor1, "conteúdo do campo C7_OP.              ")
aAdd( aHelpEng1, "If the cost must not be appropriat")
aAdd( aHelpEng1, "ed for the Production Order, ")
aAdd( aHelpEng1, "delete the content of C7_OP field.")
aAdd( aHelpSpa1, "Si el costo no debe apropiarse par")
aAdd( aHelpSpa1, "a la Orden de produccion, retire ")
aAdd( aHelpSpa1, "el contenido del campo C7_OP.")


PutHelp("SA120OPEND",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)               

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "Não existem Contratos de Parceria")
aAdd( aHelpPor1, " para esse procedimento.")
aAdd( aHelpEng1, "There are Partnership contracts")
aAdd( aHelpEng1, " for this procedure.  ")
aAdd( aHelpSpa1, "No hay Contratos de asociación")
aAdd( aHelpSpa1, " para este procedimiento.")

PutHelp("PA120AUT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={} 
aAdd( aHelpPor1, "certifique-se que existam Contrados de")
aAdd( aHelpPor1, " Parceria que possam ser associados   ")
aAdd( aHelpPor1, " a esta autorização de Entrega        ")
aAdd( aHelpEng1, "certifíquese que existan Contrados de ")
aAdd( aHelpEng1, "Asociación que puedan ser asociados a ")
aAdd( aHelpEng1, "esta autorización de Entrega          ")
aAdd( aHelpSpa1, "make sure that there Contrados        ")
aAdd( aHelpSpa1, "Partnership that may be associated    ")
aAdd( aHelpSpa1, "with this authorization Delivery      ")

PutHelp("SA120AUT",aHelpPor1,aHelpEng1,aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={}
aAdd( aHelpPor1, "Pedido nao pode ser alterado. ")
aAdd( aHelpEng1, "Request can not be changed. ")
aAdd( aHelpSpa1, "Pedido no se puede cambiar.")
PutHelp("PA120PCALT", aHelpPor1, aHelpEng1, aHelpSpa1,.T.)

aHelpPor1 :={}; aHelpEng1 :={} ; aHelpSpa1 :={}
aAdd( aHelpPor1, "Verifique conteudo do parametro MV_ALTPC.")
aAdd( aHelpEng1, "Check the contents of the parameter MV_ALTPC.") 
aAdd( aHelpSpa1, "Comprobar el contenido del parametro MV_ALTPC.")
PutHelp("SA120PCALT", aHelpPor1, aHelpEng1, aHelpSpa1,.T.)  
                                        
Return Nil
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A120AdiantºAutor  ³GDP Materiais  	 º Data ³  03/09/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Abre tela para selecao de titulos do financeiro quando a   º±±
±±º          ³condicao de pagto. permite o uso de Adiantamento.      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120				                                   	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120Adiant(cNumPedido, cCondPagto,aRecnoSE2RA, lCarregaTotal, cCodForn, cCodLoja,aRatCTBPC,aAdtPC,cCondPAdt)
Local nTotped   := aValores[TOTPED]
Local aAreaSE4	:= SE4->(GetArea())
Local aVenc		:= {}
Local aRotinaBKP:= aClone(aRotina)
Local aHeaderBKP:= aClone(aHeader)
Local aColsBKP  := aClone(aCols)
Local aHeaderBK2:= {}
Local aColsBKP2  := {}
Local nValRetImp	:= 0
Local aArea	:= GetArea()
Local aAreaSC7 := {}
Local nItemAtd :=0  
Local nX		:= 0 

Default aRecnoSE2RA   := {}
Default lCarregaTotal := .T.      
Default cCondPAdt := "0"
If lCarregaTotal

	If SFB->FB_JNS == 'J' .and. cPaisLoc == 'COL'
		dbSelectArea("SFC")
		dbSetOrder(2)
		If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV2")
			If FC_INCDUPL == '1'
				nTotped := nTotped - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nTotped := nTotped + nValRetImp
			EndIf
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV4")
			If FC_INCDUPL == '1'
				nTotped := nTotped - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nTotped := nTotped + nValRetImp
			EndIf
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV7")
			If FC_INCDUPL == '1'
				nTotped := nTotped - nValRetImp
			ElseIf FC_INCDUPL == '2'
				nTotped := nTotped + nValRetImp
			EndIf
		EndIf
	EndIf

	aVenc := Condicao(nTotped,cCondPagto,0.00,dDataBase,0.00,{},,0)
	If Len(aVenc)>0
		nTotped := aVenc[1,2] 
	EndIf
EndIf
If nTotped >0
	aAreaSC7 := SC7->(GetArea())
	SC7->(DbSetorder(3))
	If SC7->(DbSeek(xFilial("SC7")+cCodForn+cCodLoja+cNumPedido))
	   While !SC7->(EOF()) .and. (SC7->C7_FILIAL+SC7->C7_FORNECE+SC7->C7_LOJA+SC7->C7_NUM)==(xFilial("SC7")+cCodForn+cCodLoja+cNumPedido)   
			If SC7->C7_ENCER=="E"
				nItemAtd+=SC7->C7_TOTAL
			Else
			   If SC7->C7_QUJE<>0
					nItemAtd+=(SC7->C7_QUANT-SC7->C7_QUJE)*SC7->C7_PRECO
				Endif
			Endif
			SC7->(DbSkip())
		Enddo
	Endif
	RestArea(aAreaSC7)
Endif				
If A120UsaAdi( cCondPagto,@cCondPAdt ) 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Chamada da tela de Recebimento do Financeiro.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
	aHeaderBK2:= aClone(aHeader)
	aColsBKP2  := aClone(aCols)
	aCols := Nil
	aRecnoSE2RA := FPEDADT("P", cNumPedido, xMoeda((nTotPed-nItemAtd),nMoedaPed,1,dDataBase,TamSX3("C7_TOTAL")[2],nTxMoeda), aRecnoSE2RA, cCodForn, cCodLoja)
	aHeader:= aClone(aHeaderBK2)
	aCols  := aClone(aColsBKP2)
	If Len(aRecnoSE2RA) > 0 
		// Grava quando é proveniente da Nota.
		FPedAdtGrv("P", 1, cNumPedido, aRecnoSE2RA)
		For nX := 1 to Len(aRecnoSE2RA)
			If AScan(aAdtSE2,aRecnoSE2RA[nX][2]) == 0
				Aadd(aAdtSE2,aRecnoSE2RA[nX][2])
			EndIf
		Next
	Else
		// Limpa qualquer relacionamento de adiantamento caso a tela volte sem selecao
		DbSelectArea( "FIE" )
		FIE->( DbSetOrder( 1 ) )
		FIE->( DbSeek( xFilial( "FIE" ) + "P" + cNumPedido ) )
		While FIE->( !Eof() ) .AND. FIE->( FIE_FILIAL + FIE_CART + FIE_PEDIDO ) == xFilial( "FIE" ) + "P" + cNumPedido
			RecLock( "FIE" )
			FIE->( DbDelete() )
			FIE->( MsUnLock() )

			FIE->( DbSkip() )
		End
	EndIf
Else                                                                                        
	MsgAlert(STR0148) // "Por favor, selecione uma condição de pagamento que utilize Adiantamento."
EndIf    
RestArea(aAreaSE4)
RestArea(aArea)
aRotina:= aClone(aRotinaBKP)
aHeader:= aClone(aHeaderBKP)
aCols  := aClone(aColsBKP)
Pergunte("MTA120",.F.)
Return .T.



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A120UsaAdiºAutor  ³GDP Materiais  	 º Data ³  03/09/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica se a condicao de pagto utiliza Adiantamento.      º±±
±±º          ³                                                       	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120			                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/        
Function A120UsaAdi(cCondPagto,	cCondPAdt)         
Local aAreaSE4 := SE4->(GetArea())
Local lRet := .F.
Default cCondPAdt:="0"

#IFDEF TOP            
	//ADIANTAMENTO
	If cPaisLoc $ "ANG|BRA|MEX" .AND. !Empty(cCondPagto) .AND. FindFunction("FPedAdtGrv") .and. AliasInDic("FIE")
		DbSelectArea("SE4")
		DbSetOrder(1)
		If 	SE4->(FieldPos("E4_CTRADT")) > 0 .AND.;
			DbSeek(xFilial("SE4")+cCondPagto) .AND.; 		
			SE4->E4_CTRADT == "1"			
			lRet:= .T.
			cCondPAdt:="1"
		EndIf
	EndIf    
	RestArea(aAreaSE4)
#ENDIF
Return lRet                      

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³a120AdtSld ³ Autor ³ Totvs                ³ Data ³ 05/09/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna o saldo do Relacionamento do pedido                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Numero do pedido						      		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a120AdtSld(cNumPed,aAdtPC,nAutoAdt,nF)

Local nSaldo	:= 0
Local aArea     := GetArea()
Local aTmpPed   :={}
Local aValidAdt :={}
Local nXT_Adt   :=0
Local nX        :=0
Local cBuscaAdt :=""
Local lXAdt     :=.T.
Local nXT_Relac :=0
Local nVlAdt  :=0
Local lCkAdt    :=.T.

Local nPos_FILIAL := 0
Local nPos_PREFIX := 0
Local nPos_NUM    := 0
Local nPos_PARCEL := 0
Local nPos_TIPO   := 0
Local nPos_VALOR  := 0
Local nPos_CART   := 0
Local nPos_FORNEC := 0
Local nPos_LOJA   := 0

Default nAutoAdt:=0
Default aAdtPC  :={}
Default nF      := 1

If nAutoAdt==0
	DbSelectArea( "FIE" )
	FIE->( DbSetOrder( 1 ) )
	FIE->( DbSeek( xFilial( "FIE" ) + "P" + cNumPed ) )
	While FIE->(!Eof()) .And. xFilial( "FIE" ) + "P" + cNumPed == FIE->(FIE_FILIAL + FIE_CART + FIE_PEDIDO)
	nSaldo += FIE->FIE_SALDO
	FIE->(DbSkip())
	End
Endif
If nAutoAdt==3 .OR. nAutoAdt==4
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posição dos campos e verifica se os campos obrigatórios estão presentes³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lCkAdt := VlAdtCpo(aAdtPC)
	
	If lCkAdt
		DbSelectArea("SE2")
		DbSetOrder(1)
		For nX := 1 to Len(aAdtPC)    //NOVO RELACIONAMENTO

			nPos_FILIAL := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_FILIAL"} )
			nPos_PREFIX := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_PREFIX"} )
			nPos_NUM    := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_NUM"   } )
			nPos_PARCEL := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_PARCEL"} )
			nPos_TIPO   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_TIPO"}   )
			nPos_VALOR  := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_VALOR"}  )
			nPos_CART   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_CART"}   )
			nPos_FORNEC := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_FORNEC"} )
			nPos_LOJA   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_LOJA"}   )
			
			If DbSeek(aAdtPC[nX][nPos_FILIAL][2]+aAdtPC[nX][nPos_PREFIX][2]+aAdtPC[nX][nPos_NUM][2]+aAdtPC[nX][nPos_PARCEL][2]+aAdtPC[nX][nPos_TIPO][2]+aAdtPC[nX][nPos_FORNEC][2]+aAdtPC[nX][nPos_LOJA][2])
				Aadd(aTmpPed ,{cNumPed,SE2->(Recno()),aAdtPC[nX][nPos_VALOR][2]})  //PEDIDO+RECNO DO SE2+NOVO VLR DE RELACIO
				Aadd(aValidAdt,{SE2->E2_FILIAL,aAdtPC[nX][nPos_CART][2],SE2->E2_FORNECE,SE2->E2_LOJA,SE2->E2_PREFIXO,SE2->E2_NUM,SE2->E2_PARCELA,SE2->E2_TIPO,aAdtPC[nX][nPos_VALOR][2],SE2->E2_VALOR}) //ARMAZENA CHAVE DO RELAC NO SE2
			Endif
		Next
		DbSelectArea( "FIE" )
		FIE->( DbSetOrder( 3 ) )
		For nX := 1 to Len(aTmpPed)
			cBuscaAdt:=(aValidAdt[nX][1]+aValidAdt[nX][2]+aValidAdt[nX][3]+aValidAdt[nX][4]+aValidAdt[nX][5]+aValidAdt[nX][6]+aValidAdt[nX][7]+aValidAdt[nX][8])
			nXT_Adt:=0                 //VALOR DO RELACIONAMENTO ATUAL
			nXT_Relac+=aTmpPed[nX][3]  //SOMA TOTAL DO NOVO RELACIONAMENTO
			/////////////////////////
			DbSelectArea( "FR3" )
			FR3->( DbSetOrder( 3 ) )		
			If FR3->( DbSeek( cBuscaAdt ) )  //BUSCA RELACIONAMENTO EXISTENTE COM SE2
				While !FR3->(EOF()) .and. cBuscaAdt==(FR3->FR3_FILIAL+FR3->FR3_CART+FR3->FR3_FORNEC+FR3->FR3_LOJA+FR3->FR3_PREFIX+FR3->FR3_NUM+FR3->FR3_PARCEL+FR3->FR3_TIPO)
					nXT_Adt+=FR3->FR3_VALOR   //SOMA DE TODOS RELAC EXISTENTES PARA O PA USADO
					FR3->(DbSkip())
				Enddo
			Endif
			DbSelectArea( "FIE" )
			/////////////////////////
			If FIE->( DbSeek( cBuscaAdt ) )  //BUSCA RELACIONAMENTO EXISTENTE COM SE2
				While !FIE->(EOF()) .and. cBuscaAdt==(FIE->FIE_FILIAL+FIE->FIE_CART+FIE->FIE_FORNEC+FIE->FIE_LOJA+FIE->FIE_PREFIX+FIE->FIE_NUM+FIE->FIE_PARCEL+FIE->FIE_TIPO)
					nXT_Adt+=FIE->FIE_VALOR   //SOMA DE TODOS RELAC EXISTENTES PARA O PA USADO
					FIE->(DbSkip())
				Enddo
				If nAutoAdt==4 .and. nF=2 //
					cBuscaAdt:=(aValidAdt[nX][1]+aValidAdt[nX][2]+aValidAdt[nX][3]+aValidAdt[nX][4]+aValidAdt[nX][5]+aValidAdt[nX][6]+aValidAdt[nX][7]+aValidAdt[nX][8])
					nVlAdt  :=0
					If FIE->( DbSeek( cBuscaAdt ) )  //BUSCA RELACIONAMENTO EXISTENTE COM SE2
						While !FIE->(EOF()) .and. cBuscaAdt==(FIE->FIE_FILIAL+FIE->FIE_CART+FIE->FIE_FORNEC+FIE->FIE_LOJA+FIE->FIE_PREFIX+FIE->FIE_NUM+FIE->FIE_PARCEL+FIE->FIE_TIPO)
							If FIE->FIE_PEDIDO==cNumPed
								nVlAdt+=FIE->FIE_VALOR
							Endif
							FIE->(DbSkip())
						Enddo
					Endif
					If ((nXT_Adt-nVlAdt)+aTmpPed[nX][3]) > aValidAdt[nX][10] //Valor Novo Realc - Valor Ataul Realc.+
						If nF>=1      //RETIRAR
							Help(" ",1,"A120NOSDADT")
						Endif
						lXAdt:=.F.
						Exit
					Endif
				Else
					If (nXT_Adt+aTmpPed[nX][3]) > aValidAdt[nX][10] //SE (SOMA RELAC DO PA USADOS+NOVO RELAC) FOR > O VALOR DO PA
						If nF>=1
							Help(" ",1,"A120NOSDADT")
						Endif
						lXAdt:=.F.
						Exit
					Endif
				Endif
			Else
				If (nXT_Adt+aTmpPed[nX][3]) > aValidAdt[nX][10] //SE (SOMA RELAC DO PA USADOS+NOVO RELAC) FOR > O VALOR DO PA
					If nF>=1
						Help(" ",1,"A120NOSDADT")
					Endif
					lXAdt:=.F.
					Exit
				Endif
			Endif
		Next
		If nXT_Relac > n120TotLib
			If nF>=1
				Help(" ",1,"A120TOTLIB")
			Endif
			lXAdt:=.F.
		Endif
		If lXAdt
			nSaldo:=1
		Else
			nSaldo:=0
		Endif
	Else
		nSaldo:=0
	Endif
Endif
RestArea(aArea)
Return nSaldo

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³A120PVTran ³Autor        ³Julio C.Guerato     ³Data  ³ 15.Set.09³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Retorna se o Pedido de Compra possui Pedido Venda em Transito  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cNumPed = Número do Pedido, lExclui = Está em Exclusão         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Logico, sendo:                                                 ³±±
±±³          ³ .T. -> Possui PV em Transito									  ³±±
±±³          ³ .F. -> Não possui PV em Transito  							  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120PVTran(cNumPed,lExclui)
Local aArea     := GetArea()
Local aLRet     := {.T.,0}
Local nOpcA     := 0 
	
If lExclui
	If SC7->(FieldPos('C7_FILCEN'))> 0 .And. SC6->(FieldPos('C6_FILPED'))> 0 .And. SC6->(FieldPos('C6_PEDCOM'))> 0 .And. SC6->(FieldPos('C6_ITPC'))> 0
        DbSelectArea("SC6")
	    DbSetOrder(10)
	    DbSeek(SC7->C7_FILCEN+xFilial('SC7')+cNumPed)
	    If !Eof()    
	     	If !(Type('l120Auto') <> 'U' .And. l120Auto)
				nOpcA := Aviso(	STR0102,STR0149,{STR0151, STR0152})				
				If nOpcA == 2   // Exclui
				    aLRet := {.T., nOpcA}
				Else
				    aLRet := {.F., nOpcA}
				EndIf
			Else 
				 aLRet := {.T., nOpcA}
			EndIf
		EndIf
	EndIf
EndIf

RestArea( aArea )
Return( aLRet )


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Função    ³A120PedAglut ³Autor        ³Vitor Raspa       ³Data  ³ 20.Jun.08³±±
±±³          ³             ³Padronização ³Julio C.Guerato   ³Data  ³ 15.Set.09³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Função para verificar se o Pedido foi Aglutinado   			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cNumPed = Número do Pedido                                     ³±±
±±³			 ³ lExclui = Operação de Exclusão                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Logico, sendo:                                                 ³±±
±±³          ³ .T. -> Prossegue o processo de atualizacao do pedido de compra ³±±
±±³          ³ .F. -> Cancela o processo de atualizacao do pedido de compra   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A120PedAglut(cNumPed,lExclui)

Local aArea     := GetArea()
Local aLRet     := {.T.,0}
Local cQuery    := ''
Local cAliasQry := ''
Local nOpcA     := 0

#IFDEF TOP
	If AliasInDic("SDP") // Verifica a existencia desta tabela no dicionario
		If lExclui
			//--Tratamento para exclusao do Pedido de Compra:
			//--Se estiver sendo excluido o pedido que foi gerado a partir de uma
			//--aglutinacao de pedidos, volta os pedidos que foram aglutinados e
			//--restabelece o saldo previsto a entrar (B2_SALPEDI)
			aAreaSDP := SDP->( GetArea() )
			SC7->( DbSetOrder(1) )
			SC7->( DbSeek( xFilial('SC7') + cNumPed ) )
			If Empty( SC7->C7_RESIDUO )
				//--Monta Query
				cQuery := "Select * "
				cQuery += "  From " + RetSQLTab('SDP')
				cQuery += " Where SDP.DP_FILIAL = '" + xFilial('SDP') + "'"
				cQuery += "   And SDP.DP_FILCEN = '" + xFilial('SC7') + "'"
				cQuery += "   And SDP.DP_PEDCEN = '" + cNumPed + "'"
				cQuery += "   And SDP.D_E_L_E_T_ = ' ' "
		
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³EXECUCAO DA QUERY                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				cAliasQry := GetNextAlias()
				cQuery    := ChangeQuery( cQuery )
				DbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .T., .F. )
		
			    If !(cAliasQry)->( Eof() )
					nOpcA := Aviso(	STR0102,STR0150,{STR0153, STR0154, STR0151})
					If nOpcA == 1 .Or. nOpcA == 2
						aLRet:={.T.,nOpcA}
					Else
						aLRet:={.F.,nOpcA}
					EndIf
		    	EndIf
		    	(cAliasQry)->( DbCloseArea() )
			Else
				//--Pedido com o Residuo ja eliminado
				//--Verifica se o pedido nao foi aglutinado, caso tenha sido,
				//--nao prossegue com a exclusao...
				SDP->( DbSetOrder(3) ) //--DP_FILIAL+DP_FILCEN+DP_FILNEC+DP_PEDORI+DP_ITPCOR
				If SDP->( DbSeek( xFilial('SDP') +  xFilial('SC7') + SC7->(C7_FILENT + C7_NUM) ) )
					Aviso(STR0102,STR0155+ SDP->DP_PEDCEN + '. '+STR0156,{'OK'})
					aLRet:={.F.,nOpcA}
				EndIf
			EndIf
		EndIf
	EndIf
#ENDIF
RestArea( aArea )
Return( aLRet )


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120CALCDESC³Autor³ Julio Cesar Guerato   ³ Data ³01.03.2010³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Calcula Desconto 						                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA120                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120CalcDesc()
Local nPosQuant   := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_QUANT"})
Local nPosPreco   := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_PRECO"})
Local nPosDesc   := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_DESC"})
Local nPosVlDesc := Ascan(aHeader,{|x| Alltrim(x[2]) == "C7_VLDESC"})
Local cReadVar  := ReadVar()

If Inclui .Or. Altera
	If nPosDesc>0 .And. nPosQuant>0 .And. nPosPreco>0 .And. nPosVlDesc>0 .And. aCols[n][nPosDesc]>0 
	    If "C7_QUANT" $ cReadVar
		    aCols[n][nPosVlDesc]:= Round(((aCols[n][nPosPreco]*&(ReadVar()))*aCols[n][nPosDesc])/100,TamSX3("C7_TOTAL")[2])                                 
   			If MaFisFound("IT",N)
				MaFisRef("IT_DESCONTO","MT120",aCols[n][nPosVlDesc])
			EndIf
	    EndIf
	    If "C7_PRECO" $ cReadVar
		    aCols[n][nPosVlDesc]:= Round(((&(ReadVar())*aCols[n][nPosQuant])*aCols[n][nPosDesc])/100,TamSX3("C7_TOTAL")[2])                                 
   			If MaFisFound("IT",N)
				MaFisRef("IT_DESCONTO","MT120",aCols[n][nPosVlDesc])
			EndIf
		EndIf
		If "C7_CODTAB" $ cReadVar
			aCols[n][nPosVlDesc]:= Round(((aCols[n][nPosPreco]*aCols[n][nPosQuant])*aCols[n][nPosDesc])/100,TamSX3("C7_TOTAL")[2])
			If MaFisFound("IT",N)
				MaFisRef("IT_DESCONTO","MT120",aCols[n][nPosVlDesc])
			EndIf
		EndIf
	EndIf
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³FilEntWhen	 ³ Autor ³Materiais & DL		 ³ Data ³20/04/10  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida entrada de dados no Get cFilialEnt					   ³±±
±±³			 ³ 																   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ COM                                                    		   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/ 
Static Function FilEntWhen(l120Visual,lPcFilEnt)

Local lRet:= !l120Visual .And. lPcFilEnt .And. VisualSX3('C7_FILENT') .And. FWModeAccess("SC7")=="E"

Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a120RatCC  ºAutor ³Microsiga           º Data ³  06/18/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Rateio de Centro de Custos                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a120RatCC(aHeadSCH,aColsSCH,lAltera,aColsBKPRat)

Local aArea       := GetArea()
Local aSavaRotina := aClone(aRotina)
Local aColsCC     := {}
Local aButtons	  := {}
Local aButtonUsr  := {}
Local aHeadSC7    := {}
Local aColsSC7    := {}
Local aNoFields   := {"CH_FILIAL","CH_CUSTO1","CH_CUSTO2","CH_CUSTO3","CH_CUSTO4","CH_CUSTO5"}
Local bSavKeyF4   := SetKey(VK_F4 ,Nil)
Local bSavKeyF5   := SetKey(VK_F5 ,Nil)
Local bSavKeyF6   := SetKey(VK_F6 ,Nil)
Local bSavKeyF7   := SetKey(VK_F7 ,Nil)
Local bSavKeyF8   := SetKey(VK_F8 ,Nil)
Local bSavKeyF9   := SetKey(VK_F9 ,Nil)
Local bSavKeyF10  := SetKey(VK_F10,Nil)
Local bSavKeyF11  := SetKey(VK_F11,Nil)
Local nPItemNF	  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEM"} )
Local nPCC	      := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CC"} )
Local nPConta	  := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_CONTA"} )
Local nPItemCta   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_ITEMCTA"} )
Local nPCLVL	  := Ascan(aHeader,{|x| AllTrim(x[2]) == "C7_CLVL"} )
Local nPDECC	  := 0
Local nPDEConta	  := 0
Local nPDEItemCta := 0
Local nPDECLVL	  := 0
Local nPRateio    := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_RATEIO"} )
Local nColTotal   := aScan(aHeader,{|x| AllTrim(x[2]) == "C7_TOTAL"} )
Local nItem  	  := aScan(aColsSCH,{|x| x[1] == aCols[n][nPItemNF]})
Local nChItem     := aScan(aHeadSCH,{|x| AllTrim(x[2])=="CH_ITEM"})
Local nDeletado   := 0
Local nX          := 0
Local nSavN       := N
Local nPPercSCH   := 0
Local nTotPerc    := 0
Local nOpcA       := 0
Local nNewTam     := 0
Local lContinua   := .T.
Local lRet        := .T.
Local oDlg
Local cCampo      := ReadVar()
Local nAviso      := 0
Local oSize
Local l115		  := VAL(GetVersao(.F.)) > 11 .Or. (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R5")
Local nAux

DEFAULT aHeadSCH   := {}
DEFAULT aColsSCH   := {}      
DEFAULT aColsBKPRat:= {}
DEFAULT lAltera    := .T.

Private aOrigHeader := aClone(aHeader)
Private aOrigAcols  := aClone(aCols)
Private oGetMan
Private nOrigN      := N
Private nPercRat    := 0
Private nPercARat	:= 100
Private oPercRat
Private oPercARat
Private oGetDad
Private _nLinhaR	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa os botoes da toolbar                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (CtbInUse())
	If !__lPyme
		aadd(aButtons,{'AUTOM',{|| AdmRatExt(aHeadSCH,oGetDad:aCols,{ |x,y,z,w| a120CarCC(x,y,@z,w) }) },"Rateio",OemToAnsi('Escolha de Rateio Pre-Configurado')}) //'Escolha de Rateio Pre-Configurado'
	EndIF
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para adicionar Botões na Enchoicebar do Rateio     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If ExistBlock("MT120BTR")
	aButtonUsr:=ExecBlock("MT120BTR",.F.,.F.,{aButtons})
	If ValType(aButtonUsr)=="A"
		aButtons:=Aclone(aButtonUsr)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Impede de executar a rotina quando a tecla F3 estiver ativa	        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("InConPad") == "L"
	lContinua := !InConPad
EndIf

If nSavN == 0
	lContinua := .F.
EndIf

If lContinua
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader do SCH                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(aHeadSCH)
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek("SCH")
		While !EOF() .And. (SX3->X3_ARQUIVO == "SCH")
			IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CH_CUSTO#CH_FILIAL" 
				AADD(aHeadSCH,{ TRIM(x3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;			   
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
			  	SX3->X3_CONTEXT } )
			EndIf
			dbSelectArea("SX3")
			dbSkip()
		EndDo
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols do SCH                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nItem > 0
		aColsCC := aClone(aColsSCH[nItem][2])
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Totaliza o % ja Rateado ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPercRat := 0
		For nX   := 1  To  Len(aColsCC)
			nPercRat += aColsCC[nX][aScan(aHeadSCH,{|x| AllTrim(x[2])=="CH_PERC"})]
		Next nX
		
		nPercARat := 100 - nPercRat
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ aHeader e aCols do SC7 devem ser salvos pois a FillGetDados destroe ³
		//³ ambos por serem PRIVATE, independente da construcao do aColsCC.     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aHeadSC7 := aClone(aHeader)
		aColsSC7 := aClone(aCols)
		aHeadSCH := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(IIf(lAltera,3,2),"SCH",1,,,,aNoFields,,,,,.T.,aHeadSCH,aColsCC,,,)
		aColsCC[1][aScan(aHeadSCH,{|x| Trim(x[2])=="CH_ITEM"})] := StrZero(1,Len(SCH->CH_ITEM))
		
		aHeader := aHeadSC7
		aCols   := aColsSC7
		
	EndIf
	If !(Type('l120Auto') <> 'U' .And. l120Auto)
		aHeadSC7 := aClone(aHeader)
		aColsSC7 := aClone(aCols)
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Calcula dimensões                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oSize := FwDefSize():New()             
		oSize:aWorkArea := {000,000, 320, 120 }
		oSize:AddObject( "CABECALHO",  100, 10, .T., .T. ) // Totalmente dimensionavel
		oSize:AddObject( "GETDADOS" ,  100, 80, .T., .T. ) // Totalmente dimensionavel 
		oSize:AddObject( "RODAPE"   ,  100, 10, .T., .T. ) // Totalmente dimensionavel
		
		oSize:lProp 	:= .T. // Proporcional             
		oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3 
		
		oSize:Process() 	   // Dispara os calculos 
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Monta Dialog                                                 ³    
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DEFINE MSDIALOG oDlg FROM 000,000 TO 250,635 TITLE STR0198 Of oMainWnd PIXEL //"Rateio por Centro de Custo"
 
	 	@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")     SAY IIF(l115,STR0193,RetTitle("C7_NUM")) Of oDlg PIXEL SIZE 56 ,9 //"Documento : "
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+33  SAY cA120Num Of oDlg PIXEL SIZE 29 ,9
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+93  SAY RetTitle("C7_ITEM") Of oDlg PIXEL SIZE 60 ,9 //"Item :"
		@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+112 SAY aCols[N][nPItemNF] Of oDlg PIXEL SIZE 37 ,9
	    
	    oGetDad := MsNewGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
	     							   oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
    									IIF(lAltera,GD_INSERT+GD_UPDATE+GD_DELETE,0),"a120RatLOk","a120RatTOk","+CH_ITEM",,,999,/* - */,/*superdel*/,/*delok*/,oDlg,aHeadSCH,aColsCC)
    	oGetMan := oGetDad
		
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")     Say STR0163 FONT oDlg:oFont OF oDlg PIXEL	 // "% Rateada: "
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+40  Say oPercRat VAR nPercRat Picture PesqPict("SCH","CH_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+160 Say STR0164 FONT oDlg:oFont OF oDlg PIXEL	 // "% A Ratear: "
		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+214 Say oPercARat VAR nPercARat Picture PesqPict("SCH","CH_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL

		ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,{||IIF(oGetDad:TudoOk(),(nOpcA:=1,oDlg:End()),(nOpcA:=0))},{||oDlg:End()},,aButtons)

		If lAltera
			aColsCC := Aclone(oGetDad:aCols)		
		Else
			aHeader := aHeadSC7
			aCols   := aColsSC7
		EndIf
	Else
		nOpcA := 1
	EndIf
	nPPercSCH := aScan(aHeadSCH,{|x| AllTrim(x[2])=="CH_PERC"})
	nTotPerc := 0
	 
	aColsPar :={}
	AEval( aColsCC, { |x| If( !x[ Len(aHeadSCH) + 1], AAdd( aColsPar, x ), ) } )
	aColsCC := aClone( aColsPar )
	
	For nX := 1 To Len(aColsCC)
		nTotPerc += aColsCC[nX][nPPercSCH]
	Next nX
	
	nPDECC	      := aScan(aHeadSCH,{|x| AllTrim(x[2]) == "CH_CC"} )
	nPDIt	      := aScan(aHeadSCH,{|x| AllTrim(x[2]) == "CH_ITEM"} )
	nPDEConta	  := aScan(aHeadSCH,{|x| AllTrim(x[2]) == "CH_CONTA"} )
	nPDEItemCta   := aScan(aHeadSCH,{|x| AllTrim(x[2]) == "CH_ITEMCTA"} )
	nPDECLVL	  := Ascan(aHeadSCH,{|x| AllTrim(x[2]) == "CH_CLVL"} )
	
	If nOpcA == 1 .And. lAltera
	
		If nTotPerc > 0
			//Acerta a numeração do Item
			For nX := 1 to Len(aColsCC)
				aColsCC[nX][nPDIt] := RetAsc(Str(nX),TamSX3("CH_ITEM")[1],.T.)
			Next nX
			
			If nItem > 0
				aColsSCH[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsSCH,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			
			aCols[N][nPRateio] := "1"
			If nPCC <> 0 .And. nPDECC <> 0
				aCols[N][nPCC]     := Space(Len(aCols[N][nPCC]))
			EndIf
			If nPConta <> 0 .And. nPDEConta <> 0
				aCols[N][nPConta]  := Space(Len(aCols[N][nPConta]))
			EndIf
			If nPItemCta <> 0 .And. nPDEItemCta <> 0
				aCols[N][nPItemCta]:= Space(Len(aCols[N][nPItemCta]))
			EndIf
			If nPCLVL <> 0 .And. nPDECLVL <> 0
				aCols[N][nPCLVL]   := Space(Len(aCols[N][nPCLVL]))
			EndIf
			If N <> Len(aCols) .And. Len(aCols)>1	
				nAviso := Aviso(STR0141,STR0194,{STR0195,STR0196,STR0197}) //"Atenção"###"Replicar informações para os demais itens do documento?"###"Sim"###"Não"###"Todos"
				nAux := N
				If nAviso == 3
					nAux := 1
					aColsSCH := {}
				EndIf
				If nAviso <> 2
					For nX := nAux To Len(aCols)
						nItem  	  := aScan(aColsSCH,{|x| x[1] == aCols[nX][nPItemNF]})
						If nItem == 0
							aadd(aColsSCH,{aCols[nX][nPItemNF],aClone(aColsCC)})
							
							aCols[nX][nPRateio] := "1"
							
							If nPCC <> 0 .And. nPDECC <> 0
								aCols[NX][nPCC]     := Space(Len(aCols[NX][nPCC]))
							EndIf
							If nPConta <> 0 .And. nPDEConta <> 0
								aCols[NX][nPConta]  := Space(Len(aCols[NX][nPConta]))
							EndIf
							If nPItemCta <> 0 .And. nPDEItemCta <> 0
								aCols[NX][nPItemCta]:= Space(Len(aCols[NX][nPItemCta]))
							EndIf
							If nPCLVL <> 0 .And. nPDECLVL <> 0
								aCols[NX][nPCLVL]   := Space(Len(aCols[NX][nPCLVL]))
							EndIf
							If Len(aColsBKPRat) >= nX
		   						aColsBKPRat[nX] := aClone(aCols[nX])
	   						Endif
						EndIf
					Next nX
				EndIf
			EndIf
		Else
			If nItem > 0
				aColsSCH[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsSCH,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
		
		//-- Atualiza aCols reserva do rateio
		If Len(aColsBKPRat) >= N
			aColsBKPRat[N] := aClone(aCols[N])
		Endif
	Else
		If nTotPerc > 0 .And. nItem > 0
			If "C7_RATEIO" $ cCampo
				&cCampo := "1"
			EndIf
			aCols[nSavN][nPRateio] := "1"
		Else
			If "C7_RATEIO" $ cCampo
				&cCampo := "2"
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Armazena aHeadSCH e AcolsSCH em array Private validacoes em outros pontos do fonte  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aCPHSCH:=aClone(aHeadSCH)
ACPISCH:=aClone(aColsSCH)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotina	:= aClone(aSavaRotina)
N := nSavN
SetKey(VK_F4 ,bSavKeyF4)
SetKey(VK_F5 ,bSavKeyF5)
SetKey(VK_F6 ,bSavKeyF6)
SetKey(VK_F7 ,bSavKeyF7)
SetKey(VK_F8 ,bSavKeyF8)
SetKey(VK_F9 ,bSavKeyF9)
SetKey(VK_F10,bSavKeyF10)
SetKey(VK_F11,bSavKeyF11)
RestArea(aArea)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a120CarCC³ Autor ³ Wagner Mobile Costa    ³ Data ³21.10.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega as definicoes de rateio externo                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function a120CarCC(aCols, aHeader, cItem, lPrimeiro)

Local lCusto		:= CtbMovSaldo("CTT")
Local lItem	 		:= CtbMovSaldo("CTD")
Local lCLVL	 		:= CtbMovSaldo("CTH")
Local nPosPerc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_PERC" } )
Local nPosItem		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_ITEM" } )
Local nPosCC		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CC"} )
Local nPosConta		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CONTA"} )
Local nPosItemCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_ITEMCTA"} )
Local nPosCLVL		:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CLVL"} )
Local nHeader     := 0
Local aMT103PRE     := {}

Local lCtbIsCube    := FindFunction("CtbEntArr") .And. AliasInDic("CV0")
Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0

If lPrimeiro
	//-- Se ja foi informado algum rateio, limpar o aCols
	If aCols[Len(aCols)][nPosPerc] <> 0
		aCols := {}
		Aadd(aCols, Array(Len(aHeader) + 1))
		For nHeader := 1 To Len(aHeader)
			If Trim(aHeader[nHeader][2]) <> "CH_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "CH_REC_WT"
				aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
			Endif
		Next
	EndIf
	cItem := Soma1(cItem)
	aCols[Len(aCols)][nPosItem]  := cItem
	aCols[Len(aCols)][Len(aHeader)+1] := .F.
Else
	If aCols[Len(aCols)][nPosPerc] = 0
		nCols := Len(aCols)
		cItem := aCols[nCols][nPosItem]
	Else
		If Len(aCols) > 0
			cItem := aCols[Len(aCols)][nPosItem]
		Endif
		Aadd(aCols, Array(Len(aHeader) + 1))
		cItem := Soma1(cItem)
	EndIf
	
	For nHeader := 1 To Len(aHeader)
		If Trim(aHeader[nHeader][2]) <> "CH_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "CH_REC_WT"
			aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
		EndIf
	Next
	
	aCols[Len(aCols)][nPosItem] := cItem
	
	// Interpreto os campos incluida possibilidade de variaveis de memoria
	If !Empty(CTJ->CTJ_DEBITO)
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_DEBITO
	Else
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_CREDIT
	Endif
	
	
	If lCusto
		If ! Empty(CTJ->CTJ_CCD)
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCD
		Else
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCC
		Endif
	EndIf
	
	If lItem
		If ! Empty(CTJ->CTJ_ITEMD)
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMD
		Else
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMC
		Endif
	EndIf
	
	If lClVl
		If ! Empty(CTJ->CTJ_CLVLDB)
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLDB
		Else
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLCR
		Endif
	EndIf
	aCols[Len(aCols)][nPosPerc] := CTJ->CTJ_PERCEN
	aCols[Len(aCols)][Len(aHeader) + 1] := .F.

	If lCtbIsCube
		aEntidades := CtbEntArr()
		For nEnt := 1 to Len(aEntidades)
			For nDeb := 1 to 2
				cCpo := "CH_EC"+aEntidades[nEnt]
				cCTJ := "CTJ_EC"+aEntidades[nEnt]
				
				If nDeb == 1
					cCpo += "DB"
					cCTJ += "DB"
				Else
					cCpo += "CR"
					cCTJ += "CR"
				EndIf
				
				nPosHead := aScan(aHeader,{|x| AllTrim(x[2]) == Alltrim(cCpo) } )
				
				If nPosHead > 0 .And. CTJ->(FieldPos(cCTJ)) > 0
					aCols[Len(aCols)][nPosHead] := CTJ->(&(cCTJ))
				EndIf
				
			Next nDeb
		Next nEnt
	EndIf
	
EndIf

Return .T.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a120RatLok³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da linhaok dos itens do rateio dos itens do documen³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a linha esta valida                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a linhaok do rateio dos³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a120RatLOk()
Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_PERC"})
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CC"})
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CONTA"})
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_ITEMCTA"})
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "CH_CLVL"})
Local lRetorno  := .T.
Local nX        := 0
_nLinhaR		:= N

If !aCols[N][Len(aCols[N])]
	If aCols[N][nPPerc] == 0
		Help(" ",1,"A103PERC")
		lRetorno := .F.
	EndIf
EndIf

If lRetorno
	nPercRat := 0
	nPercARat:= 0
	For nX	:= 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
			nPercRat += aCols[nX][nPPerc]
		EndIf
	Next
	nPercARat := 100 - nPercRat
	If Type("oPercRat")=="O"
		oPercRat:Refresh()
		oPercARat:Refresh()
	Endif
EndIf

//Consiste amarração da Conta Contábil X Centro de Custo
If lRetorno
	If nPConta <> 0 .And. nPCC>0 .And. nPItemCta <> 0 .And. nPClVl <> 0 .And.;
 	   (!CtbAmarra(aCols[n,nPConta],aCols[n,nPCC],aCols[n,nPItemCTA],aCols[n,nPCLVL]))
	   lRetorno:=.F.
	EndIf
EndIf

If lRetorno .And. empty(aCols[N][nPCC]) // O Centro de Custo SEMPRE devera ser obrigatorio, Conta Contabil, Item Contabil e Classe Valor nao tem esta necessidade
	Help('   ',1,'A103RATEI')
	lRetorno:=.F.	
EndIf

If lRetorno    
	If nTipoPed != 2
		lRetorno:= PcoVldLan('000052','08','MATA121')
	Else  
		lRetorno:= PcoVldLan('000053','04','MATA121')
	EndIf
EndIf
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a120RatLok³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da TudoOk dos itens do rateio dos itens do documen-³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a todas as linhas estao validas             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a tudook do rateio dos ³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a120RatTok()
Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_PERC"} )
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CC"})
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "CH_CONTA"})
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "CH_ITEMCTA"})
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "CH_CLVL"})

Local nTotal   := 0
Local nX       := 0
Local lRetorno := .T.
Local n_SaveLin
Local cEntidade :=""

For nX	:= 1 To Len(aCols)
	If !aCols[nX][Len(aCols[nX])]
		nTotal += aCols[nX][nPPerc]
	 	//Consiste amarração da Conta Contábil X Centro de Custo
	 	If (!CtbAmarra(aCols[nX,nPConta],aCols[nX,nPCC],aCols[nX,nPItemCTA],aCols[nX,nPCLVL]))
	 	    lRetorno:=.F.
	 	    Aviso("A120RatTok",STR0180+" "+aCols[nX,1],{"Ok"})
		    Exit 
		EndIf
		If lRetorno .And. CTT->CTT_BLOQ == "1"
			cEntidade := CTT->CTT_CUSTO
			Help( " " , 1 , "CTA_BLOQ" ,, "CTT" + " :" + cEntidade ,3,0)
			lRetorno:=.F.
		Endif  
	EndIf
Next

If lRetorno .And. nTotal > 0 .And. nTotal <> 100
	Help(" ",1,"A103TOTRAT")
	lRetorno := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ha bloqueio em algum item do pco qdo valida for por grade ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If PcoBlqFim({{"000052","08"},{"000053","04"}})	     
	_nLinhaR := n 
	For nx:=1 to len(aCols)
		If !aCols[nx][Len(aCols[nx])]
		    n := nX   
		    If nTipoPed != 2
				If !(lRetorno:= PcoVldLan('000052','08','MATA121'))
					Exit
				EndIf           
			Else  
				If !(lRetorno:= PcoVldLan('000053','04','MATA121'))
					Exit
				EndIf           			
			EndIf
		EndIf
	Next    
	n := _nLinhaR
EndIf
	
Return(lRetorno)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA120   ºAutor  ³Microsiga           º Data ³  07/14/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function M120AutRat(aRatCTBPC,aHeaderRAT)
Local aAux	:= {}
Local nPos	:= 0
Local nZ	:= 0
Local nY	:= 0
Local nX	:= 0

Local aTmpRat  := {}
Local aColsSCH := {}       
Local aItemSCH := {}

If IsInCallStack("Cn120Ence") // Rateio gerado por encerramento de medição

For nZ:=1 to Len(aRatCTBPC)  
 
    aAux:=aRatCTBPC[nZ]
    aItemSCH:={}
    For nY:=1 to Len(aHeaderRAT)
        For nX:=1 to Len(aAux)        
             If AllTrim(aHeaderRat[nY][2])==AllTrim(aAux[nX][1]) 
                 aadd(aItemSCH,aAux[nX][2])
             EndIf 
        Next nX
    Next nY 
    If Len(aItemSCH)>0
        aadd(aItemSCH,.F.)
	    nItemPed:=aScan(aAux,{|x| AllTrim( x[1]) == "CH_ITEMPD" })
	    nX:=aScan(aColsSCH,{|x| x[1]==aAux[nItemPed][2]})  
	    
	    nPos := aScan(aCols,{|x| x[GDFieldPos("C7_ITEM")] == aAux[nItemPed,2]})
		If GDFieldPos("C7_RATEIO") > 0 .And. nPos >0
			aCols[nPos,GDFieldPos("C7_RATEIO")] := "1"
		EndIf
				
   
        If nX==0
		    Aadd(aColsSCH,{IIf(nItemPed>0,aAux[nItemPed][2],''),{aItemSCH}})
		Else
			Aadd(aColsSCH[nX][nItemPed+1],aItemSCH)
		EndIf
	EndIf
Next

Return aColsSCH 

Else

For nX := 1 To Len(aRatCTBPC)
	If Empty(nPos := aScan(aCols,{|x| x[GDFieldPos("C7_ITEM")] == aRatCTBPC[nX,1]}))
		Loop
	ElseIf GDFieldPos("C7_RATEIO") > 0
		aCols[nPos,GDFieldPos("C7_RATEIO")] := "1"
	EndIf
     
	For nY := 1 To Len(aRatCTBPC[nX,2])
			aAux := aClone(aRatCTBPC[nX,2,nY])
			aRatCTBPC[nX,2,nY] := Array(Len(aHeaderRAT)+1)
			For nZ := 1 To Len(aRatCTBPC[nX,2,nY]) - 1
				If IsHeadRec(aHeaderRAT[nZ,2]) .Or. IsHeadAlias(aHeaderRAT[nZ,2])
					Loop
				ElseIf (nPos := aScan(aAux,{|x| AllTrim(x[1]) == AllTrim(aHeaderRAT[nZ,2])})) > 0
					aRatCTBPC[nX,2,nY,nZ] := aAux[nPos,2]
				Else
					aRatCTBPC[nX,2,nY,nZ] := CriaVar(aHeaderRAT[nZ,2])
				EndIf
			Next nZ
			aTail(aRatCTBPC[nX,2,nY]) := .F.
		Next nY
	Next nX
	
Endif
	
Return aRatCTBPC  


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VlAdtCpo  ºAutor  ³Microsiga           º Data ³  07/15/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida se todos os campos da rotina automatica de adianta   º±±
±±º          ³mento                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function VlAdtCpo(aAdtPC)
Local lRet := .T.
Local aCpo := {}
Local nX   := 0
Local nPos := 0           
Local nY   := 0
Local cCpoAdt := ""

aAdd(aCpo,"FIE_FILIAL")
aAdd(aCpo,"FIE_PREFIX")
aAdd(aCpo,"FIE_NUM")
aAdd(aCpo,"FIE_PARCEL")
aAdd(aCpo,"FIE_TIPO")
aAdd(aCpo,"FIE_VALOR")
aAdd(aCpo,"FIE_CART")
aAdd(aCpo,"FIE_FORNEC")
aAdd(aCpo,"FIE_LOJA")

For nX := 1 to Len(aAdtPC)
	For nY := 1 to Len(aCpo)
		nPos := AScan(aAdtPC[nX], { |x| Alltrim(x[1]) == aCpo[nY]} )   
		If nPos == 0
			lRet := .F.
			cCpoAdt += aCpo[nY] + " "
		EndIf	
	Next
	If !lRet
		Exit
	EndIf
Next nX

If !lRet 
	Help(" ",1,,"A120CPOSADT" ,"CAMPOS"+" [ "+cCpoAdt+" ] "+"NAO INFORMADO NA ESTRUTURA!")
EndIf

Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³lCkAdtFIE   ºAutor  ³Microsiga           º Data ³  07/26/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se existe registro na FIE                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION lCkAdtFIE(cNumPed,nAutoAdt) 
Local aAreaFIE := FIE->(GetArea())
Local nRet :=0
FIE->(DbsetOrder(1))
If FIE->(DbSeek(xFilial("FIE")+"P"+cNumPed))
	nRet:=1
Endif
RestArea(aAreaFIE)
Return(nRet)	


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³lCkAdtFR3 ºAutor  ³Microsiga           º Data ³  07/26/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se existe registro na FR3                          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
STATIC FUNCTION lCkAdtFR3(cNumPed,nAutoAdt) 
Local aAreaFR3 := FR3->(GetArea())
Local nRet :=0
FR3->(DbsetOrder(4))
If FR3->(DbSeek(xFilial("FR3")+"P"+cNumPed))
	nRet:=1
Endif
RestArea(aAreaFR3)
Return(nRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a120RatAutºAutor  ³Microsiga           º Data ³  06/11/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida o array de rateio por CC da ExecAuto.               º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aRateioPC[nX,1]: item do pedido de compra.				  º±±
±±º			 ³ aRateioPC[nX,2]: array com os itens do rateio.			  º±±
±±º			 ³ 	aRateioPC[nX,2,nY,nZ,1]: nome do campo.					  º±±
±±º			 ³ 	aRateioPC[nX,2,nY,nZ,2]: conteudo do campo. 			  º±±
±±º			 ³ 	aRateioPC[nX,2,nY,nZ,3]: validacao especifica.			  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a120RatAut(aRateioPC) 
Local lRet       := .T.
Local aCTBEnt	 := If(FindFunction("CTBEntArr"),CTBEntArr(),{})
Local aPosCampo  := Array(4+(Len(aCTBEnt) * 2))
Local nTotal	 := 0
Local nX		 := 0
Local nY		 := 0
Local nZ		 := 0
Local cEntidades := ""
Local cVldDupli	 := ""

Local nPosCC	:= 0
Local nPosPerc	:= 0 
Local nPosClas	:= 0
Local nPosItem	:= 0
Local nPosCont	:= 0
Local nTam1		:= 0
Local nTam2		:= 0

Local cCCusto	:= "" 
Local cEstrutura:= ""

Local cTodosCCusto	:= ""
Local lNaoAchouCCusto:= .F.
Local lError100Perc	:=  .F.
Local lDuploCCusto  :=  .F.

Default aRateioPC	:=  {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ No modo Automatico checa Rateio e Adiantamento                       ³
//³    1 - A soma dos percentuais de rateios dos C.Custo eh igual a 100% ³
//³    2 - Cada C.Custo rateado existe na tabela SCC                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	

If IsInCallStack("Cn120Ence") // Rateio gerado por encerramento de medição
//Rateio por Centro de Custo

If Len(aRateioPC)>0
	If Len(aRateioPC[1,2])> 0
    
    // vetor aRatCTBPC
	// cada elemento possui um vetor de 2 elementos
	//   elemento 1 - Nro do item do pedido de compra
	//   elemento 2 - vetor contendo todos os campos de cada rateio
    //
    // 1o elemento 
    // 1o elemento, 2O elemento { '01', VETOR }
    //              (1o elemento RATEIO1, 2o elemento RATEIO 2, 3o elemento RATEIO 3) VETOR DE RATEIOS
    //              (1o elemento CAMPO1, 2o elemento CAMPO2, 30 elemento CAMPO3, N elemento CAMPO N) VETOR DE CAMPOS
	//              (1o elemento Nome Campo, 2 elemento CONTEUDO, 3 elemento .T.)  VETOR DE 3 ELEMENTOS
	//

	//Ache a posicao do vetor contendo o nome do campo = "CH_PERC" no 1o elemento [1][2][1] / Pedido de Compra
	nPosPerc  		:= AScan(aRateioPC[1], { |x| Alltrim(x[1]) =="CH_PERC"		} ) 
	nPosCC			:= AScan(aRateioPC[1], { |x| Alltrim(x[1]) =="CH_CC"  		} )
		
	nPosCont 		:= AScan(aRateioPC[1], { |x| Alltrim(x[1]) =="CH_CONTA"  	} )
	nPosItem 		:= AScan(aRateioPC[1], { |x| Alltrim(x[1]) =="CH_ITEMCTA"  	} )
	nPosClas		:= AScan(aRateioPC[1], { |x| Alltrim(x[1]) =="CH_CLVL"  	} )

	lNaoAchouCCusto := .F.  // 1- Tratamento Centro de Custo nao cadastrado
	lError100Perc   := .F.  // 2- Tratamento Soma dos percentuais diferente de 100%
	lDuploCCusto    := .F.  // 3- Tratamento Centro de Custo duplicato no rateio por item do pedido (compra/venda)
	LErrorDados		:= .F.	//   - Erro identificado  

	If nPosPerc > 0 .And. nPosCC > 0

		dbSelectArea("CTT")
		dbSetOrder(1)

		nTam1		:= Len(aRatCTBPC)
		For nX := 1 To nTam1

			cTodosCCusto:= '/'

			nTotal := 0
			nTam2  := Len( aRateioPC )
			For nY := 1 to nTam2
				
				cEstrutura	:= ""
				//Soma de percentuais
		
				nTotal  	+= aRateioPC[nY][nPosPerc][2]
	            cCusto 		:= aRateioPC[nY][nPosCC][2]
	     
	            
	            cEstrutura 	+= 	cCusto		            
	            cEstrutura 	+= 	IiF(nPosCont != 0, Padr(aRateioPC[nY][5][1],TamSX3("CH_CONTA")[1])	,space(TamSX3("CH_CONTA")[1])	)
	            cEstrutura 	+=	IiF(nPosItem != 0, Padr(aRateioPC[nY][6][1],TamSX3("CH_ITEMCTA")[1])	,space(TamSX3("CH_ITEMCTA")[1])	)
	            cEstrutura 	+=	IiF(nPosClas != 0, Padr(aRateioPC[nY][7][1],TamSX3("CH_CLVL")[1])		,space(TamSX3("CH_CLVL")[1]	)	)            

				//Verifique se existe o(s) C.Custo(s) rateado(s) 
                If cEstrutura $ cTodosCCusto
					lDuploCCusto := .T.
					lErrorDados  := .T.
					Exit
				Endif
				
				If !Empty(cCCusto)
					If (lNaoAchouCCusto := !MsSeek(xFilial("CTT") + cCCusto) )
						lErrorDados := .T.
						Exit
					Endif
					cTodosCCusto += cEstrutura + '/'
				Endif
			Next

			If lErrorDados
				Exit
			Else
			    If nTotal > 0 .And. nTotal < 100
					lError100Perc := .T.
					Exit
				Endif
			Endif
		Next
	Endif
    
    //Inconsistencias - Observacao
    //Se o CCusto nao for encontrado, a soma do percental eh descontinuada
	//
	Do case
	   case nPosPerc = 0  .Or. nPosCC = 0
			Help(' ',1,'Erro na estrutura do vetor de rateio. Procura nao encontrada!')
			lRet := .F.
	   case lNaoAchouCCusto
			Help(' ',1,'Codigo Centro Custo inexistente.')
			lRet := .F.
	   case lDuploCCusto
			Help(' ',1,'Codigo Centro Custo duplicado no item do pedido de compra.')
			lRet := .F.
	   case lError100Perc
			Help(' ',1,'A103TOTRAT')
			lRet := .F.
	Endcase
	Endif
EndIf

Else

If Len(aRateioPC) > 0
	//-- Obtem posicao dos campos no array da ExecAuto
	nPosPerc := aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_PERC"	}) 
	aPosCampo[1] := {"CH_CC",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_CC"})}
	aPosCampo[2] := {"CH_CONTA",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_CONTA"})}
	aPosCampo[3] := {"CH_ITEMCTA",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_ITEMCTA"})}
	aPosCampo[4] := {"CH_CLVL",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_CLVL"})}
	For nX := 1 To Len(aCTBEnt)
		if SCH->(FieldPos("CH_EC"+aCTBEnt[nX]+"CR")) > 0
			aPosCampo[4 + ((nX*2) - 1)] := {"CH_EC"+aCTBEnt[nX]+"CR",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_EC"+aCTBEnt[nX]+"CR"})}
		Endif
		if SCH->(FieldPos("CH_EC"+aCTBEnt[nX]+"DB")) > 0
			aPosCampo[4 + (nX*2)		 ] := {"CH_EC"+aCTBEnt[nX]+"DB",aScan(aRateioPC[1,2,1],{|x| AllTrim(x[1]) == "CH_EC"+aCTBEnt[nX]+"DB"})}
		Endif
	Next nX

	If nPosPerc > 0
		CTT->(dbSetOrder(1))
		For nX := 1 To Len(aRateioPC)
			//-- Zera acumuladores de validacao
			cVldDupli := ""
			nTotal    := 0
									
			For nY := 1 to Len(aRateioPC[nX,2])
				//-- Valida campos pelo dicionario
				For nZ := 1 To Len(aRateioPC[nX,2,nY])
					__READVAR := "M->"+(aRateioPC[nX,2,nY,nZ,1])
					M->&(aRateioPC[nX,2,nY,nZ,1]) := aRateioPC[nX,2,nY,nZ,2]
					If !(lRet := CheckSX3(aRateioPC[nX,2,nY,nZ,1],aRateioPC[nX,2,nY,nZ,2]))
						Exit
					EndIf
				Next nZ
				if !lRet
					exit
				Endif				
				//-- Verifique se repetiu entidades contabeis
				cEntidades	:= ""
				For nZ := 1 To Len(aPosCampo)
					If !Empty(aPosCampo[nZ,2])
						cEntidades += Padr(aRateioPC[nX,2,nY,aPosCampo[nZ,2]	,2],TamSX3(aPosCampo[nZ,1])[1])
					Else
						cEntidades += Space(TamSX3(aPosCampo[nZ,1])[1])
					EndIf
				Next nZ
                If cEntidades $ cVldDupli
					Help(' ',1,"Item de rateio repetido no item " +aRateioPC[nX,1] +" do pedido de compra.")
					lRet := .F.
					Exit
				Else
					cVldDupli += cEntidades + '/'
				Endif
				
				//-- Acumula percentual
				nTotal += aRateioPC[nX,2,nY,nPosPerc,2]
			Next nY
			
			If !lRet
				Exit
			EndIf

		    If nTotal > 0 .And. nTotal < 100
				Help(' ',1,'A103TOTRAT')
				lRet := .F.
				Exit
			Endif
		Next nX
	Else
		Help(' ',1,"Erro na estrutura do vetor de rateio: campo " +AllTrim(RetTitle("CH_PERC")) +" ausente.")
		lRet := .F.
	EndIf
EndIf

Endif

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ A120Contr  ³ Autor ³ TOTVS       		  ³ Data ³ 12/08/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina para rastreio de contratos a partir do Pedido Compras ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A120Contr(ExpC1,ExpN1,ExpN2)							        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ SIGACOM													    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A120Contr(cAlias,nReg,nOpc)
LOCAL aRastrContr:= {}

If Empty(SC7->C7_CONTRA)
	MsgAlert(STR0201,STR0102)
	Return
Endif

aAdd(aRastrContr,{SC7->C7_CONTRA,SC7->C7_CONTRA,Space(TamSX3("CN9_TPCTO")[01]),Replicate("Z",TamSX3("CN9_TPCTO")[01]),;
		Space(TamSX3("CN9_SITUAC")[01]),Replicate("Z",TamSX3("CN9_SITUAC")[01]),SC7->C7_FORNECE,SC7->C7_FORNECE,SC7->C7_LOJA,SC7->C7_LOJA,;
		Space(TamSX3("B1_COD")[01]),Replicate("Z",TamSX3("B1_COD")[01])})
CNTC010( aRastrContr )

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA120   ºAutor  ³Fabricio Pequeno    º Data ³  05/25/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Função verifica se existe alteração nos itens do pedido que º±±
±±º          ³tem rateio.                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A120aColsRa(aColsBKPRat,nOpcx,aColsSCH)

Local lContAltRat	:= .T.
Local nRat			:= 0
Local nRat2			:= 0
Local nCols			:= 0
Local nCols2		:= 0
Local nItem			:= 0  
//Local nTamaCols		:= Len(aColsBKPRat[1])

If( (nOpcx==4) .And. (Len(aColsSCH)>0) )
	//-- Se é uma alteração, o aCols foi alterado e existe rateio é preciso fazer o rateio novamente.
	For nRat := 1 to Len(aColsSCH) //-- Faz a comparação para itens que tenham rateio.
		For nRat2 := 1 to Len(aCols)
			If(aColsSCH[nRat,1] == aCols[nRat2,1])
				nItem := aColsSCH[nRat,1] //-- Seleciona qual item tem rateio.
				For nCols:=1 to Len(aColsBKPRat)
					If (aColsBKPRat[nCols,1] == nItem) //-- Só compara dados dos itens que tem rateio.
						For nCols2:=1 to Len(aColsBKPRat[nCols])
							If nCols<=Len(aColsBKPRat[1])
								If ( Ascan(aColsBKPRat,{|x| x[nCols],x[nCols2]==aCols[nCols,nCols2] } ) == 0 .And. nCols2<>Len(aCols[nCols]))//-- Comparando aCols original com novo.
									nCols  := Len(aColsBKPRat)
									nCols2 := Len(aColsBKPRat[nCols]) 
									MsgAlert(STR0173)//--"Na inclusão do Pedido de compra foi feito rateio para o(os) iten(S), necessário verificar os rateios antes de alterar."
									lContAltRat := .F.
									Exit
								EndIf
							Endif
						Next
					EndIf
				Next
 					nItem := 0
  			EndIf
  		Next
	Next
EndIf
	
Return (lContAltRat)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A120lTimeºAutor  ³ Cleber Maldonado º Data ³  06/02/12     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Atualiza campos data do Lead Time Composto                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A120lTime()
Local nTempTra, nPrzCQ := dDatabase
Local lVersao 	:= Val(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6"  .Or.  Val(GetVersao(.F.))  > 11
Local dDatPRF   := If(ReadVar()=="M->C7_DATPRF",M->C7_DATPRF,aCols[n,GDFieldPos("C7_DATPRF")])
Local dDatIni   := dDataBase
Local dDatTra, dDatCQ := dDataBase
Local nPrazCQ	:= 0
Local cFPrzCq	:= ""

If lVersao
	nPrazCQ	 := Posicione("SB5",1,xFilial("SB5")+aCols[n,GDFieldPos("C7_PRODUTO")],"B5_PRZCQ")
	cFPrzCq	 := IIF(FieldPos("B5_FPRZCQ")>0,Posicione("SB5",1,xFilial("SB5")+aCols[n,GDFieldPos("C7_PRODUTO")],"B5_FPRZCQ"),"")
	nTempTra := Posicione("SA5",2,xFilial("SA5")+aCols[n,GDFieldPos("C7_PRODUTO")],"A5_TEMPTRA")
	nPrzCq	 := If(Empty(cFPrzCq),nPrazCQ,Formula(cFPrzCq))
	dDatCQ	 := dDatPRF-nPrzCq
	dDatTra	 := dDatCQ-nTempTra
	dDatIni	 := dDatTra-CalcPrazo(aCols[n,GDFieldPos("C7_PRODUTO")],aCols[n,GDFieldPos("C7_QUANT")],cA120Forn,cA120Loj)
	aCols[n,GDFieldPos("C7_DINICOM")] := dDatIni
	aCols[n,GDFieldPos("C7_DINITRA")] := dDatTra
	aCols[n,GDFieldPos("C7_DINICQ")] :=  dDatCQ
Endif

Return dDatIni


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjustaSX3	ºAutor  ³TOTVS				 º Data ³  15/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Ajuste de dicionario                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaSX3()
Local aArea := GetArea()
Local cPesq		:= ".And.TAPSVldNum(M->C7_NUM)"
Local nTamPesq	:= Len(cPesq)
Local nPosPesq	:= 0
Local cString	:= ""
Local nTamStr	:= 0
Local cResult	:= ""
Local cUsado	:= ""
Local cReserv   := ""

dbSelectArea("SX3")
dbSetOrder(2)
If dbSeek("C7_NUM") .And. ("TAPSVLDNUM" $ Upper(X3_VALID))		// Retira validação TAPSVLDNUM mantendo o restante do Valid
	cString := ALLTRIM(X3_VALID)
	nTamStr	:= Len(cString)
	nPosPesq:= At(cPesq,cString)
	cResult := Substr(cString,1,nPosPesq-1)
	If nTamStr > nPosPesq+nTamPesq
		cResult := cResult + Substr(cString,nPosPesq+nTamPesq,nTamStr)
	EndIF
	RecLock("SX3",.F.)
	Replace X3_VALID With cResult
	MsUnLock()
EndIf

If DbSeek("C7_OP") .And. (Empty(SX3->X3_VALID) .Or. Empty(SX3->X3_F3)).And. X3USO(SX3->X3_VALID)
	RecLock("SX3",.F.)
	Replace X3_VALID With 'A120VldOP()'
	Replace X3_F3 With 'SC2'
	MsUnLock()
EndIf

If VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11
	dbSeek("C1_OBS") 
	cReserv := SX3->X3_RESERV
	cUsado  := SX3->X3_USADO
	
	If dbSeek("C1_TPOP") .And. AllTrim(SX3->X3_WHEN) # "INCLUI"
		RecLock( "SX3", .F. )
		SX3->X3_USADO  := cUsado
		SX3->X3_RESERV := cReserv
		SX3->X3_WHEN   := "INCLUI"
		SX3->(MsUnlock())
	EndIf
EndIf
If dbSeek("DE_DOC") 
	cReserv := SX3->X3_RESERV
	cUsado  := SX3->X3_USADO
	If dbSeek("CH_PEDIDO")
		If SX3->X3_RESERV <> cReserv 
			RecLock( "SX3", .F. )
			SX3->X3_USADO  := cUsado
			SX3->X3_RESERV := cReserv
			SX3->(MsUnlock())
			If dbSeek("DE_FORNECE") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_FORNECE")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_LOJA") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_LOJA")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_ITEMNF") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_ITEMPD")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_ITEM") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_ITEM")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_PERC") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_PERC")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CC") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CC")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CONTA") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CONTA")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_ITEMCTA") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_ITEMCTA")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CLVL") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CLVL")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CUSTO1") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CUSTO1")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CUSTO2") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CUSTO2")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CUSTO3") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CUSTO3")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CUSTO4") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CUSTO4")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
			If dbSeek("DE_CUSTO5") 
				cReserv := SX3->X3_RESERV
				cUsado  := SX3->X3_USADO
				If dbSeek("CH_CUSTO5")
					RecLock( "SX3", .F. )
					SX3->X3_USADO  := cUsado
					SX3->X3_RESERV := cReserv
					SX3->(MsUnlock())
				EndIf
			EndIf
		
		EndIf
	EndIf	
EndIf

RestArea(aArea)
Return
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³IntegDef ³ Autor ³ Jandir Deodato        ³ Data ³25.05.2012³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Chamada da Mensagem Unica do Pedido de Compras            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Xml Recebido\a enviar,Envio ou recebimento, Bussines,Whois,³±± 
±±³			 ³ ,etc, parametros enviados pelo Frame.					 ³±±
±±³          ³                          								 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mensagens unicas                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

STATIC FUNCTION IntegDef( cXml, nType, cTypeMsg )  
		Local aRet := {}                
		aRet:= Mati120( cXml, nType, cTypeMsg )    
Return aRet                                   

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A120VldOP ³ Autor ³ 		Bruno Schmidt	³ Data ³ 25/05/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a Ordem de Producao digitada na NF                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MatA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120VldOP()

Local lRet    :=.T.
Local cOP     :=&(ReadVar())
Local aAreaAnt:= GetArea()


If !Empty(cOp)
	lRet:=ExistCpo("SC2",cOp)
	If lRet
		SC2->(dbSetOrder(1))
		If !SC2->(MsSeek(xFilial("SC2")+Trim(cOP)))
			Aviso(STR0059,STR0183,{"Ok"}) 
			lRet:=.F.
		EndIf	
	EndIf
EndIf

RestArea(aAreaAnt)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FillCTBEntºAutor  ³ Andre Anjos		 º Data ³ 02/08/12    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Inicaliza campos das entidades contabeis de acordo com a   º±±
±±º          ³ origem.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FillCTBEnt(cOrigem)
Local aCTBEnt := If(FindFunction("CTBEntArr"),CTBEntArr(),{})
Local nX	  := 0

For nX := 1 To Len(aCTBEnt)
	If GDFieldPos("C7_EC"+aCTBEnt[nX]+"CR",aHeader) > 0 .And. FieldPos(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"CR") > 0
		aCols[n,GDFieldPos("C7_EC"+aCTBEnt[nX]+"CR")] := (cOrigem)->&(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"CR")
	EndIf
	If GDFieldPos("C7_EC"+aCTBEnt[nX]+"DB",aHeader) > 0 .And. FieldPos(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"DB") > 0
		aCols[n,GDFieldPos("C7_EC"+aCTBEnt[nX]+"DB")] := (cOrigem)->&(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"DB")
	EndIf
Next nX

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ AjustaHlpºAutor  ³Leonardo Quintania  º Data ³  12/09/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Ajuste dos helps do programa                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AjustaHlp()
Local aHelpPor := {}
Local aHelpSpa := {}
Local aHelpEng := {}

aHelpPor := {"Identifica o tipo do documento para fins ","de planejamento do recebimento: ","F-Firme ; P-Previsto"}
aHelpEng := {"Identifies the type of document","for planning purposes of receipt:","F-Firm ; P-Predicted"}
aHelpSpa := {"Identifica el tipo de documento para fines ","de planificación de su recepción: ","F-Firm ; P-Prevista"}
PutHelp("PCTPOP",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Solicitação de Compra já utilizada."}
aHelpEng := {"Purchase Request already used."}
aHelpSpa := {"Solicitud de Compra ya utilizada."}
PutHelp("PA120F42",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Verifique a  existencia de  Solicitações", " de Compras em aberto para este produto."}
aHelpEng := {"Verify the existence of Purchase Requests", " open for this product."}
aHelpSpa := {"Verifique la existencia de Solicitudes", "de Compras pendientes para este producto."}
PutHelp("SA120F42",aHelpPor,aHelpEng,aHelpSpa,.F.)

aHelpPor := {"Pedido não pode ser excluído, pois"," foi gerado por PLS."}
aHelpEng := {"Request cannot be deleted, because it"," was generated by the PLS."}
aHelpSpa := {"Pedido no puede excluirse, pues"," se genero por PLS."}
PutHelp("A120EXCPLS",aHelpPor,aHelpEng,aHelpSpa,.F.)

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A120Colab	ºAutor  ³Rodrigo Toledo Silvaº Data ³  31/07/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Reenvia o pedido de compra para TSS (TOTVS Colaboracao)    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120I TOTVS Colaboracao                                 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß */
Static Function A120Colab()
Local lRet  := .T.

If (AllTrim(SC7->C7_TPOP) == "F" .Or. Empty(SC7->C7_TPOP)) .And. SC7->C7_CONAPRO <> "B" .And. (Empty(SC7->C7_TPCOLAB) .Or. AllTrim(SC7->C7_TPCOLAB) == "PC")
	MsgRun(STR0076,STR0188,{|| lRet := ExpXML_PC(SC7->C7_NUM)}) //"Aguarde, estabelecendo comunicação com TSS # Processando"
	If lRet
		Aviso(STR0102,STR0191,{STR0111}) //"Atencao,Documento transmitido com sucesso via TOTVS Colaboração."
	Else
		Aviso(STR0102,STR0192,{STR0111}) //"Atencao, Documento não enviado para o TOTVS Colaboração por falha de comunicação com o TSS."
	EndIf
ElseIf SC7->C7_TIPO == 1 .And. SC7->C7_CONAPRO == "B"
	Aviso(STR0102,STR0189,{STR0111}) //"Atencao, Pedido Bloqueado! Nao sera possivel enviar para o TOTVS Colaboracao.
ElseIf SC7->C7_TIPO == 2 .And. SC7->C7_TPOP <> "F"
	Aviso(STR0102,STR0190,{STR0111}) //"Este documento esta sendo transmitido como programação de entrega. Gere uma nova programação de entrega para o formecedor.
EndIf

Return

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³IntPCSServ| Autor ³TOTVS S.A.         	³ Data ³ 18/09/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para integracao do Pedido de Compras com  ³±±
±±³          ³ o produto SISCOSERV da TRADE EASY.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPedido = Numero do Pedido de Compras                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IntPCSServ(cPedido,nOpcao)
Local aAreaAnt  := GetArea()
Local aAreaSC7  := SC7->(GetArea())
Local lIntSServ := FindFunction("AvFlags") .And. AvFlags("CONTROLE_SERVICOS_AQUISICAO")
Local lCOMSEIC  := SuperGetMV("MV_COMSEIC",.F.,.F.) // Parametro utilizado para Integracao
Local cSeek     := ""
Local aCab      := {}
Local aItens    := {}
Local aLinha    := {}
Local lA120SSER := ExistBlock("A120SSER")

Private lMsErroAuto := .F.

Default cPedido := ""
Default nOpcao  := 3 //Inclusao
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³As funcoes AvFlags e EICPS400 sao de responsabilidade da equipe da ³
//³TRADE-EASY qualquer ocorrencia nestas funcoes favor acionar a      |
//³equipe de parceiros.                                               |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntSServ .And. lCOMSEIC .And. !Empty(cPedido) .And. FindFunction('EICPS400')
	dbSelectArea("SC7")
	dbSetOrder(1)
	
    aadd(aCab,{"EJW_FILIAL",xFilial("SC7")		,Nil})
    aAdd(aCab,{"EJW_PROCES",cPedido   			,NIL})
    aAdd(aCab,{"EJW_ORIGEM","SIGACOM"			,NIL})
	
	If dbSeek(cSeek:=xFilial("SC7")+cPedido)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do aCab (Array que contem o cabecalho do pedido de compras)|
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
        aAdd(aCab,{"EJW_EXPORT",SC7->C7_FORNECE 	,NIL})
        aAdd(aCab,{"EJW_LOJEXP",SC7->C7_LOJA    	,NIL})
        aAdd(aCab,{"EJW_MOEDA" ,SC7->C7_MOEDA   	,NIL})
        aAdd(aCab,{"EJW_COMPL" ,SC7->C7_OBS			,NIL}) 
        aAdd(aCab,{"EJW_CONDPG",SC7->C7_COND		,Nil})
		// Conforme orientacao do Alessandro (TRADE-EASY) nao
		// sera necessario o envio dos campos abaixo
		//aadd(aCab,{"EJW_VL_MOED" 	,SC7->C7_TOTAL		,Nil}) 
		//aadd(aCab,{"EJW_VL_REA"  	,SC7->C7_TOTAL		,Nil})
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do Itens (Array que contem os itens do pedido de compras)  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do While !Eof() .And. cSeek == SC7->C7_FILIAL+SC7->C7_NUM
			aLinha := {}
			aadd(aLinha,{"EJX_FILIAL"		,SC7->C7_FILIAL		,Nil})
			aadd(aLinha,{"EJX_PROCES"		,SC7->C7_NUM		,Nil})
			aadd(aLinha,{"EJX_SEQPRC"		,SC7->C7_ITEM		,Nil})
			aadd(aLinha,{"EJX_ITEM"			,SC7->C7_PRODUTO	,Nil})
			aadd(aLinha,{"EJX_QTDE"			,SC7->C7_QUANT		,Nil})
			aadd(aLinha,{"EJX_PRCUN"  		,SC7->C7_PRECO		,Nil})
			aadd(aLinha,{"EJX_VL_MOE"		,SC7->C7_TOTAL		,Nil})			
			aadd(aLinha,{"EJX_TX_MOE"		,SC7->C7_TXMOEDA   	,NIL})
			//aadd(aLinha,{"EJX_VL_REA"		,SC7->C7_TOTAL		,Nil})
			aadd(aLinha,{"EJX_COMPL"		,SC7->C7_OBS		,Nil})
			
			// Conforme orientacao do Alessandro (TRADE-EASY) nao
			// sera necessario o envio dos campos abaixo pois sera
			// desenvolvida a rotina de manutencao pelo parceiro.
			//aadd(aLinha,{"EJX_NBS"		,""					,Nil})
			//aadd(aLinha,{"EJX_PAIS"		,""					,Nil})
			//aadd(aLinha,{"EJX_MODO"		,""					,Nil})
			//aadd(aLinha,{"EJX_DTPRIN"		,""					,Nil})
			//aadd(aLinha,{"EJX_DTPRFI"		,""					,Nil})
			//aadd(aLinha,{"EJX_DTINI"		,""					,Nil})
			//aadd(aLinha,{"EJX_DTFIM"		,""					,Nil})
			aadd(aItens,aLinha)
			SC7->(dbSkip())
		EndDo
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³A120SSER - Ponto de entrada para manipular o aCab aItens            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lA120SSER
		ExecBlock("A120SSER",.F.,.F., {@aCab,@aItens})		
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Execucao da Rotina Automatica EICPS400                              |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//If Len(aCab) > 0 .And. Len(aItens) > 0
	MsExecAuto({|a,b,c,d|EICPS400(a,b,c,d)},aCab,aItens,,nOpcao)
	//EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento de Seguranca                                             |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMsErroAuto
		ConOut(STR0186) //"EICPS400 - Nao foi possivel realizar a integracao com o SISCOSERV entre em contato com a equipe da TRADE-EASY."
		MostraErro()
	EndIf

EndIf	
RestArea(aAreaSC7)
RestArea(aAreaAnt)
Return ()
                 

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³a120Pesqui| Autor ³Aline S Damasceno     	³ Data ³ 28/11/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para Pesquisas genericas e refresh no	  ³±±
±±³          ³ objeto.								                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oGetDados = Objeto MSSelect				                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function a120Pesqui(oGetDados)

axPesqui() 

If ValType(oGetDados) == "O"
	oGetDados:oBrowse:Refresh()   
EndIf     

Return .T.

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A120BuRtSC| Autor ³Rodrigo Toledo        	³ Data ³ 25/11/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para buscar os rateios da solicitacao de  ³±±
±±³          ³ compra e preencher o rateio de centro de custo do pedido.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cChaveRat = Chave da tabela SCH                            ³±±
±±³			 ³ aHeadSCH  = aHeader da tabela SCH                          ³±±
±±³			 ³ aColsSCH  = aCols da tabela SCH                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A120BuRtSC(cChaveRat,aHeadSCH,aColsSCH)
Local aAreaSCX   := SCX->(GetArea())
Local nPRateio   := GDFieldPos("C7_RATEIO")
Local cItemSCH 	 := ""
Local nItemSCH   := 0
Local nY	     := 0
Local aHeadSCX	 := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeader SCX  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SCX")
While !EOF() .And. (SX3->X3_ARQUIVO == "SCX")
	IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CX_CUSTO#CX_FILIAL#CX_SOLICIT" .And. AllTrim(SX3->X3_CAMPO) != "CX_ITEMSOL"
		aAdd(aHeadSCX,{ TRIM(x3Titulo()),;
		SX3->X3_CAMPO,;
		SX3->X3_PICTURE,;
		SX3->X3_TAMANHO,;
		SX3->X3_DECIMAL,;			   
		SX3->X3_VALID,;
		SX3->X3_USADO,;
		SX3->X3_TIPO,;
		SX3->X3_F3,;
	  	SX3->X3_CONTEXT } )
	EndIf
	dbSelectArea("SX3")
	dbSkip()
EndDo
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ADHeadRec("SCX",aHeadSCX)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aCols SCH  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

SCX->(dbSetOrder(1))
If SCX->(dbSeek(xFilial("SCX")+cChaveRat))
	While SCX->(!Eof()) .And. SCX->(CX_FILIAL+CX_SOLICIT+CX_ITEMSOL) == xFilial("SCX")+cChaveRat
		If cItemSCH <> SCX->CX_ITEMSOL
			cItemSCH := SCX->CX_ITEMSOL
			aAdd(aColsSCH,{StrZero(N,Len(SC7->C7_ITEM)),{}})
			nItemSCH := Len(aColsSCH)
		EndIf
		
		aAdd(aColsSCH[nItemSCH][2],Array(Len(aHeadSCX)+1))
		For nY := 1 to Len(aHeadSCX)
			If IsHeadRec(aHeadSCX[nY][2])
				aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := 0
			ElseIf IsHeadAlias(aHeadSCX[nY][2])
				aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := "SCH"
			ElseIf (aHeadSCX[nY][10] <> "V")
				aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := SCX->(FieldGet(FieldPos(aHeadSCX[nY][2])))
			Else
				aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][nY] := SCX->(CriaVar(aHeadSCX[nY][2]))
			EndIf
			aColsSCH[nItemSCH][2][Len(aColsSCH[nItemSCH][2])][Len(aHeadSCX)+1] := .F.
		Next nY	
		SCX->(dbSkip())
	EndDo
	
	If Len(aColsSCH) > 0
		aCols[N][nPRateio] := "1"
	EndIf

Endif

If Empty(aHeadSCH)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader SCH ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DbSelectArea("SX3")
	DbSetOrder(1)
	MsSeek("SCH")
	While ( !EOF() .And. SX3->X3_ARQUIVO == "SCH" )
		If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !AllTrim(SX3->X3_CAMPO)$"CH_CUSTO#CH_FILIAL#CH_PEDIDO#CH_FORNECE#CH_LOJA" .And. AllTrim(SX3->X3_CAMPO) != "CH_ITEMPED"
			aAdd(aHeadSCH,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT })
		EndIf
		DbSelectArea("SX3")
		dbSkip()
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ADHeadRec("SCH",aHeadSCH)
EndIf                  
						
RestArea(aAreaSCX)
Return()

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A120VldAJ7ºAutor  ³Alvaro Camillo Neto º Data ³  15/02/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida o rateio por projeto                                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A120VldAJ7(nOpcao,cNumPD)
Local lRet       := .T.
Local aSavCols   := aClone(aCols)
Local aSavHeader := aClone(aHeader)
Local nSavN      := n
Local nX

For nX := 1 to Len (aRatProj) 
    // Buscar a numero da linha da Solicitacao referente ao item do rateio
    n:=  aScan(aCols,{|x| x[GDFieldPos("C7_ITEM")] == aRatProj[nX,1]})
	If n > 0                                                             
		// Chamar a rotina automatica do cadastro de rateios 
		If !PmsDlgPC(nOpcao,cNumPD,aRatProj[nX,2])
	   		lRet := .F.
	   		Exit
	   	EndIf	
	EndIf

Next nX	  

aCols   := aClone(aSavCols)
aHeader := aClone(aSavHeader)
N       := nSavN

Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjustaSX7 ºAutor  ³TOTVS               º Data ³  15/05/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Ajuste de dicionario                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function AjustaSX7()

Local aArea		:= GetArea()
Local aSX7   	:= {}
Local aEstrut	:= {}
Local i      	:= 0
Local j      	:= 0

aEstrut:= {"X7_CAMPO","X7_SEQUENC","X7_REGRA","X7_CDOMIN","X7_TIPO","X7_SEEK","X7_ALIAS","X7_ORDEM","X7_CHAVE","X7_PROPRI","X7_CONDIC"}

aAdd(aSX7,{"C7_VLDESC ","002","M->C7_DESC := NoRound((M->C7_VLDESC/M->C7_TOTAL)*100,TamSx3('C7_DESC')[2])","C7_DESC","P","N","",0,"","S",""})

dbSelectArea("SX7")
dbSetOrder(1)
For i:= 1 To Len(aSX7)
	If !Empty(aSX7[i][1])
		If !dbSeek(aSX7[i,1]+aSX7[i,2])
			RecLock("SX7",.T.)
			For j:=1 To Len(aSX7[i])
				If !Empty(FieldName(FieldPos(aEstrut[j])))
					FieldPut(FieldPos(aEstrut[j]),aSX7[i,j])
				EndIf
			Next j
			dbCommit()
			MsUnLock()
			DbSelectArea("SX3")
			dbSetOrder(2)
			If MsSeek(aSX7[i,1])
				RecLock("SX3")
				SX3->X3_TRIGGER := "S"          				
				dbCommit()
			    MsUnLock()
			EndIf
			DbSelectArea("SX3")
			dbSetOrder(1)			
		EndIf
	EndIf
	dbSelectArea("SX7")
Next i

RestArea(aArea)

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetFISCORIºAutor  ³ Andre Anjos		 º Data ³  08/07/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna campo C7_FISCORI quando em execucao por rotina     º±±
±±º          ³ automatica.                                                º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ cItem: codigo do item (C7_ITEM).							  º±±
±±º			 ³ cProduto: codigo do produto (C7_PRODUTO).				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºRetorno	 ³ cRet: filial a ser utilizada para pesquisa.				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function RetFISCORI(cItem,cProduto)
Local cRet			:= xFilial("SC7")
Local nPITEM 		:= aScan(aAutoItens[1],{|x| AllTrim(x[1]) == "C7_ITEM"})
Local nPPRODUTO	:= aScan(aAutoItens[1],{|x| AllTrim(x[1]) == "C7_PRODUTO"})
Local nPFISCORI 	:= aScan(aAutoItens[1],{|x| AllTrim(x[1]) == "C7_FISCORI"})
Local nPosItem		:= 0

nPosItem := aScan(aAutoItens,{|x| x[nPITEM,2] == cItem .And. x[nPPRODUTO,2] == cProduto})

If nPosItem > 0 .And. nPFISCORI > 0
	cRet := aAutoItens[nPosItem,nPFISCORI,2]
EndIf

Return cRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjustaSX6 ºAutor  ³Jose Delmondes      º Data ³  05/11/2013 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Cria o parametro MV_ALTPC                                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA120                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaSX6()
Local aArea    := GetArea()
Local aAreaSX6 := SX6->(GetArea())

SX6->(dbSetOrder(1))

If !SX6->(MsSeek(xFilial("SX6")+"MV_ALTPC"))
	RecLock("SX6",.T.)
	SX6->X6_FIL		:= xFilial("SX6")
	SX6->X6_VAR		:= "MV_ALTPC"
	SX6->X6_TIPO	 	:= "L"
	SX6->X6_DESCRIC 	:= "Bloqueia alteracao de pedido de compras atendido."
	SX6->X6_DESC1 	 	:= "(.T.)Bloqueia (.F.)Nao bloqueia"
	SX6->X6_DSCSPA  	:= "Bloquea el cambio de pedido de compras atendido "
	SX6->X6_DSCSPA1	:= "(.T.)Bloquea (.F.)No bloquea"
	SX6->X6_DSCENG 	:= "Blocks alteration purchase order attended."
	SX6->X6_DSCENG1	:= "(.T.)Blocks (.F.)Not blocks"
	SX6->X6_CONTEUD 	:= ".F."
	SX6->X6_CONTSPA 	:= ".F."
	SX6->X6_CONTENG 	:= ".F."
	SX6->X6_PROPRI	:= "S"
	SX6->X6_PYME	 	:= "S"
	SX6->X6_DEFPOR	:= ".F."
	SX6->X6_DEFSPA	:= ".F."
	SX6->X6_DEFENG	:= ".F."
	MsUnlock()
Endif

RestArea(aArea)
RestArea(aAreaSX6)
Return

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A120RefTot| Autor ³ Carlos Capeli        	³ Data ³ 16/12/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para atualizar o valor total do pedido    ³±±
±±³          ³ quando houver itens deletados no documento.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120RefTot()

Local aArea		:= GetArea()
Local nX		:= 0
Local lDeleted	:= .F.

For nX := 1 To Len(aCols)
	If ValType(aCols[nX,Len(aCols[nX])]) == "L"  /// Verifico se posso Deletar
		lDeleted := aCols[nX,Len(aCols[nX])]      /// Se esta Deletado
	EndIf
	If lDeleted
		MaFisDel(nX,aCols[nX][Len(aCols[nX])])
		Eval(bRefresh)
	EndIf
Next nX

RestArea(aArea)

Return

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A120AtuDes| Autor ³ Carlos Capeli        	³ Data ³ 17/03/14 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para atualizar o valor total do pedido    ³±±
±±³          ³ quando houver desconto pelos campos C7_DESC1, C7_DESC2 e   ³±±
±±³          ³ C7_DESC3													  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA120                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A120AtuDes(nDesc1,nDesc2,nDesc3)

Local aArea		:= GetArea()
Local nTotal	:= MaFisRet(,"NF_VALMERC")
Local lRet		:= .T.
Local nTotDesc	:= 0

If nDesc1+nDesc2+nDesc3 > 0
	nTotDesc := CalcDesc(nTotal,nDesc1,nDesc2,nDesc3)
	If nTotDesc > 0
		MaFisRef("IT_DESCONTO","MT120",nTotDesc)
	EndIf
EndIf

RestArea(aArea)

Return lRet
